Terminals unused in grammar

    TRUE
    FALSE
    BOOL
    VOID_TYPE
    HIGHP
    MEDIUMP
    LOWP
    UNIFORM
    TEXTURE1D_TYPE
    TEXTURE2D_TYPE
    TEXTURE2DSHADOW_TYPE
    TEXTURE2DRECT_TYPE
    TEXTURE3D_TYPE
    TEXTURECUBE_TYPE
    SAMPLER1D_TYPE
    SAMPLER2D_TYPE
    SAMPLER2DSHADOW_TYPE
    SAMPLER2DRECT_TYPE
    SAMPLER3D_TYPE
    SAMPLERCUBE_TYPE
    EXTENSION
    SEPARATE_SHADER
    HULLPROGRAM
    EVALPROGRAM
    SHDPROFILE
    SAMPLERRESOURCE
    SAMPLERTEXUNIT
    SETSAMPLERSTATE
    SETDSTSTATE
    SETRASTERIZATIONSTATE
    SETCOLORSAMPLESTATE
    IMAGERESOURCE
    IMAGEUNIT
    IMAGEACCESS
    IMAGELAYER
    IMAGELAYERED
    WRITE_ONLY
    READ_ONLY
    READ_WRITE
    VERTEXFORMAT


Grammar

    0 $accept: input "end of file"

    1 input: %empty
    2      | input ';'
    3      | input tech
    4      | input hlsl
    5      | input var_decl
    6      | input shader_resource
    7      | input function_definition
    8      | input function_declaration
    9      | input fatal_error
   10      | input struct
   11      | input error

   12 arguments: var_decl
   13          | var_decl ',' arguments

   14 $@1: %empty

   15 function_definition: function_declaration '{' $@1 CODEBODY

   16 function_declaration: TYPE_NAME IDENTIFIER '(' arguments ')'

   17 fatal_error: FATALERROR

   18 register_value: INT
   19               | IDENTIFIER

   20 register_declaration: ':' REGISTER '(' register_value ')'
   21                     | %empty

   22 cbuffer: CSTBUFFER IDENTIFIER register_declaration '{' var_decls '}'

   23 struct: STRUCT struct_header struct_body struct_footer

   24 struct_header: IDENTIFIER
   25              | %empty

   26 struct_body: '{' var_decls '}'

   27 struct_footer: IDENTIFIER
   28              | %empty

   29 var_decls: var_decls var_decl ';'
   30          | var_decl ';'
   31          | struct ';'

   32 shader_resource: cbuffer

   33 shader_type: VERTEXPROGRAM
   34            | GEOMETRYPROGRAM
   35            | FRAGMENTPROGRAM

   36 shader_assignment: shader_type '=' IDENTIFIER

   37 shader_assignments: shader_assignment
   38                   | shader_assignments shader_assignment

   39 passstates: '{' shader_assignments '}'

   40 base_type: FLOAT_TYPE
   41          | FLOAT2_TYPE
   42          | FLOAT3_TYPE
   43          | FLOAT4_TYPE
   44          | INT_TYPE
   45          | INT2_TYPE
   46          | INT3_TYPE
   47          | INT4_TYPE
   48          | BOOL_TYPE
   49          | BOOL2_TYPE
   50          | BOOL3_TYPE
   51          | BOOL4_TYPE
   52          | MAT2_TYPE
   53          | MAT3_TYPE
   54          | MAT4_TYPE

   55 semantic: ':' IDENTIFIER
   56         | %empty

   57 var_decl: base_type IDENTIFIER semantic
   58         | base_type IDENTIFIER semantic annotations '=' INT
   59         | base_type IDENTIFIER semantic annotations '=' FLOAT

   60 $@2: %empty

   61 pass: PASS $@2 annotations passstates

   62 $@3: %empty

   63 pass: PASS IDENTIFIER $@3 annotations passstates

   64 passes: pass
   65       | passes pass
   66       | passes error

   67 $@4: %empty

   68 tech: TECHNIQUE $@4 '{' passes '}'

   69 $@5: %empty

   70 tech: TECHNIQUE IDENTIFIER $@5 annotations '{' passes '}'

   71 scalar_type: INT_TYPE
   72            | FLOAT_TYPE
   73            | UNSIGNED
   74            | STRING_TYPE

   75 annotation_list: annotation_list annotation
   76                | annotation

   77 annotation_value: FLOAT
   78                 | INT
   79                 | STR
   80                 | UNSIGNED

   81 annotation: scalar_type IDENTIFIER '=' annotation_value ';'

   82 annotations: %empty
   83            | '<' annotation_list '>'

   84 hlsl_header: HLSL11SHADER IDENTIFIER
   85            | HLSL11SHADER

   86 hlsl: shader_header '{' CODEBODY

   87 shader_header: hlsl_header annotations


Terminals, with rules where they appear

    "end of file" (0) 0
    '(' (40) 16 20
    ')' (41) 16 20
    ',' (44) 13
    ':' (58) 20 55
    ';' (59) 2 29 30 31 81
    '<' (60) 83
    '=' (61) 36 58 59 81
    '>' (62) 83
    '{' (123) 15 22 26 39 68 70 86
    '}' (125) 22 26 39 68 70
    error (256) 11 66
    TYPE_NAME <std::string> (258) 16
    IDENTIFIER <std::string> (259) 16 19 22 24 27 36 55 57 58 59 63 70 81 84
    TRUE <bool> (260)
    FALSE <bool> (261)
    FLOAT <float> (262) 59 77
    INT <int> (263) 18 58 78
    BOOL <bool> (264)
    STR <std::string> (265) 79
    HLSL11SHADER (266) 84 85
    TECHNIQUE (267) 68 70
    PASS (268) 61 63
    CODEBODY <std::string> (269) 15 86
    STRING_TYPE (270) 74
    VOID_TYPE (271)
    UNSIGNED (272) 73 80
    HIGHP (273)
    MEDIUMP (274)
    LOWP (275)
    UNIFORM (276)
    CSTBUFFER (277) 22
    FLOAT_TYPE (278) 40 72
    FLOAT2_TYPE (279) 41
    FLOAT3_TYPE (280) 42
    FLOAT4_TYPE (281) 43
    MAT2_TYPE (282) 52
    MAT3_TYPE (283) 53
    MAT4_TYPE (284) 54
    BOOL_TYPE (285) 48
    BOOL2_TYPE (286) 49
    BOOL3_TYPE (287) 50
    BOOL4_TYPE (288) 51
    INT_TYPE (289) 44 71
    INT2_TYPE (290) 45
    INT3_TYPE (291) 46
    INT4_TYPE (292) 47
    TEXTURE1D_TYPE (293)
    TEXTURE2D_TYPE (294)
    TEXTURE2DSHADOW_TYPE (295)
    TEXTURE2DRECT_TYPE (296)
    TEXTURE3D_TYPE (297)
    TEXTURECUBE_TYPE (298)
    SAMPLER1D_TYPE (299)
    SAMPLER2D_TYPE (300)
    SAMPLER2DSHADOW_TYPE (301)
    SAMPLER2DRECT_TYPE (302)
    SAMPLER3D_TYPE (303)
    SAMPLERCUBE_TYPE (304)
    EXTENSION (305)
    SEPARATE_SHADER (306)
    VERTEXPROGRAM <IShader::Type> (307) 33
    FRAGMENTPROGRAM <IShader::Type> (308) 35
    GEOMETRYPROGRAM <IShader::Type> (309) 34
    HULLPROGRAM <IShader::Type> (310)
    EVALPROGRAM <IShader::Type> (311)
    SHDPROFILE (312)
    SAMPLERRESOURCE (313)
    SAMPLERTEXUNIT (314)
    SETSAMPLERSTATE (315)
    SETDSTSTATE (316)
    SETRASTERIZATIONSTATE (317)
    SETCOLORSAMPLESTATE (318)
    IMAGERESOURCE (319)
    IMAGEUNIT (320)
    IMAGEACCESS (321)
    IMAGELAYER (322)
    IMAGELAYERED (323)
    WRITE_ONLY (324)
    READ_ONLY (325)
    READ_WRITE (326)
    VERTEXFORMAT (327)
    REGISTER (328) 20
    FATALERROR (329) 17
    STRUCT (330) 23


Nonterminals, with rules where they appear

    $accept (86)
        on left: 0
    input (87)
        on left: 1 2 3 4 5 6 7 8 9 10 11
        on right: 0 2 3 4 5 6 7 8 9 10 11
    arguments (88)
        on left: 12 13
        on right: 13 16
    function_definition (89)
        on left: 15
        on right: 7
    $@1 (90)
        on left: 14
        on right: 15
    function_declaration (91)
        on left: 16
        on right: 8 15
    fatal_error (92)
        on left: 17
        on right: 9
    register_value (93)
        on left: 18 19
        on right: 20
    register_declaration (94)
        on left: 20 21
        on right: 22
    cbuffer (95)
        on left: 22
        on right: 32
    struct (96)
        on left: 23
        on right: 10 31
    struct_header (97)
        on left: 24 25
        on right: 23
    struct_body (98)
        on left: 26
        on right: 23
    struct_footer <std::string> (99)
        on left: 27 28
        on right: 23
    var_decls (100)
        on left: 29 30 31
        on right: 22 26 29
    shader_resource (101)
        on left: 32
        on right: 6
    shader_type <IShader::Type> (102)
        on left: 33 34 35
        on right: 36
    shader_assignment <std::string> (103)
        on left: 36
        on right: 37 38
    shader_assignments (104)
        on left: 37 38
        on right: 38 39
    passstates (105)
        on left: 39
        on right: 61 63
    base_type <nvFX::IUniform::Type> (106)
        on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
        on right: 57 58 59
    semantic (107)
        on left: 55 56
        on right: 57 58 59
    var_decl (108)
        on left: 57 58 59
        on right: 5 12 13 29 30
    pass (109)
        on left: 61 63
        on right: 64 65
    $@2 (110)
        on left: 60
        on right: 61
    $@3 (111)
        on left: 62
        on right: 63
    passes (112)
        on left: 64 65 66
        on right: 65 66 68 70
    tech (113)
        on left: 68 70
        on right: 3
    $@4 (114)
        on left: 67
        on right: 68
    $@5 (115)
        on left: 69
        on right: 70
    scalar_type (116)
        on left: 71 72 73 74
        on right: 81
    annotation_list (117)
        on left: 75 76
        on right: 75 83
    annotation_value (118)
        on left: 77 78 79 80
        on right: 81
    annotation (119)
        on left: 81
        on right: 75 76
    annotations (120)
        on left: 82 83
        on right: 58 59 61 63 70 87
    hlsl_header <std::string> (121)
        on left: 84 85
        on right: 87
    hlsl (122)
        on left: 86
        on right: 4
    shader_header <std::string> (123)
        on left: 87
        on right: 86


State 0

    0 $accept: . input "end of file"

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . "end of file"
    2 input: input . ';'
    3      | input . tech
    4      | input . hlsl
    5      | input . var_decl
    6      | input . shader_resource
    7      | input . function_definition
    8      | input . function_declaration
    9      | input . fatal_error
   10      | input . struct
   11      | input . error

    "end of file"  shift, and go to state 2
    error          shift, and go to state 3
    TYPE_NAME      shift, and go to state 4
    HLSL11SHADER   shift, and go to state 5
    TECHNIQUE      shift, and go to state 6
    CSTBUFFER      shift, and go to state 7
    FLOAT_TYPE     shift, and go to state 8
    FLOAT2_TYPE    shift, and go to state 9
    FLOAT3_TYPE    shift, and go to state 10
    FLOAT4_TYPE    shift, and go to state 11
    MAT2_TYPE      shift, and go to state 12
    MAT3_TYPE      shift, and go to state 13
    MAT4_TYPE      shift, and go to state 14
    BOOL_TYPE      shift, and go to state 15
    BOOL2_TYPE     shift, and go to state 16
    BOOL3_TYPE     shift, and go to state 17
    BOOL4_TYPE     shift, and go to state 18
    INT_TYPE       shift, and go to state 19
    INT2_TYPE      shift, and go to state 20
    INT3_TYPE      shift, and go to state 21
    INT4_TYPE      shift, and go to state 22
    FATALERROR     shift, and go to state 23
    STRUCT         shift, and go to state 24
    ';'            shift, and go to state 25

    function_definition   go to state 26
    function_declaration  go to state 27
    fatal_error           go to state 28
    cbuffer               go to state 29
    struct                go to state 30
    shader_resource       go to state 31
    base_type             go to state 32
    var_decl              go to state 33
    tech                  go to state 34
    hlsl_header           go to state 35
    hlsl                  go to state 36
    shader_header         go to state 37


State 2

    0 $accept: input "end of file" .

    $default  accept


State 3

   11 input: input error .

    $default  reduce using rule 11 (input)


State 4

   16 function_declaration: TYPE_NAME . IDENTIFIER '(' arguments ')'

    IDENTIFIER  shift, and go to state 38


State 5

   84 hlsl_header: HLSL11SHADER . IDENTIFIER
   85            | HLSL11SHADER .

    IDENTIFIER  shift, and go to state 39

    $default  reduce using rule 85 (hlsl_header)


State 6

   68 tech: TECHNIQUE . $@4 '{' passes '}'
   70     | TECHNIQUE . IDENTIFIER $@5 annotations '{' passes '}'

    IDENTIFIER  shift, and go to state 40

    $default  reduce using rule 67 ($@4)

    $@4  go to state 41


State 7

   22 cbuffer: CSTBUFFER . IDENTIFIER register_declaration '{' var_decls '}'

    IDENTIFIER  shift, and go to state 42


State 8

   40 base_type: FLOAT_TYPE .

    $default  reduce using rule 40 (base_type)


State 9

   41 base_type: FLOAT2_TYPE .

    $default  reduce using rule 41 (base_type)


State 10

   42 base_type: FLOAT3_TYPE .

    $default  reduce using rule 42 (base_type)


State 11

   43 base_type: FLOAT4_TYPE .

    $default  reduce using rule 43 (base_type)


State 12

   52 base_type: MAT2_TYPE .

    $default  reduce using rule 52 (base_type)


State 13

   53 base_type: MAT3_TYPE .

    $default  reduce using rule 53 (base_type)


State 14

   54 base_type: MAT4_TYPE .

    $default  reduce using rule 54 (base_type)


State 15

   48 base_type: BOOL_TYPE .

    $default  reduce using rule 48 (base_type)


State 16

   49 base_type: BOOL2_TYPE .

    $default  reduce using rule 49 (base_type)


State 17

   50 base_type: BOOL3_TYPE .

    $default  reduce using rule 50 (base_type)


State 18

   51 base_type: BOOL4_TYPE .

    $default  reduce using rule 51 (base_type)


State 19

   44 base_type: INT_TYPE .

    $default  reduce using rule 44 (base_type)


State 20

   45 base_type: INT2_TYPE .

    $default  reduce using rule 45 (base_type)


State 21

   46 base_type: INT3_TYPE .

    $default  reduce using rule 46 (base_type)


State 22

   47 base_type: INT4_TYPE .

    $default  reduce using rule 47 (base_type)


State 23

   17 fatal_error: FATALERROR .

    $default  reduce using rule 17 (fatal_error)


State 24

   23 struct: STRUCT . struct_header struct_body struct_footer

    IDENTIFIER  shift, and go to state 43

    $default  reduce using rule 25 (struct_header)

    struct_header  go to state 44


State 25

    2 input: input ';' .

    $default  reduce using rule 2 (input)


State 26

    7 input: input function_definition .

    $default  reduce using rule 7 (input)


State 27

    8 input: input function_declaration .
   15 function_definition: function_declaration . '{' $@1 CODEBODY

    '{'  shift, and go to state 45

    $default  reduce using rule 8 (input)


State 28

    9 input: input fatal_error .

    $default  reduce using rule 9 (input)


State 29

   32 shader_resource: cbuffer .

    $default  reduce using rule 32 (shader_resource)


State 30

   10 input: input struct .

    $default  reduce using rule 10 (input)


State 31

    6 input: input shader_resource .

    $default  reduce using rule 6 (input)


State 32

   57 var_decl: base_type . IDENTIFIER semantic
   58         | base_type . IDENTIFIER semantic annotations '=' INT
   59         | base_type . IDENTIFIER semantic annotations '=' FLOAT

    IDENTIFIER  shift, and go to state 46


State 33

    5 input: input var_decl .

    $default  reduce using rule 5 (input)


State 34

    3 input: input tech .

    $default  reduce using rule 3 (input)


State 35

   87 shader_header: hlsl_header . annotations

    '<'  shift, and go to state 47

    $default  reduce using rule 82 (annotations)

    annotations  go to state 48


State 36

    4 input: input hlsl .

    $default  reduce using rule 4 (input)


State 37

   86 hlsl: shader_header . '{' CODEBODY

    '{'  shift, and go to state 49


State 38

   16 function_declaration: TYPE_NAME IDENTIFIER . '(' arguments ')'

    '('  shift, and go to state 50


State 39

   84 hlsl_header: HLSL11SHADER IDENTIFIER .

    $default  reduce using rule 84 (hlsl_header)


State 40

   70 tech: TECHNIQUE IDENTIFIER . $@5 annotations '{' passes '}'

    $default  reduce using rule 69 ($@5)

    $@5  go to state 51


State 41

   68 tech: TECHNIQUE $@4 . '{' passes '}'

    '{'  shift, and go to state 52


State 42

   22 cbuffer: CSTBUFFER IDENTIFIER . register_declaration '{' var_decls '}'

    ':'  shift, and go to state 53

    $default  reduce using rule 21 (register_declaration)

    register_declaration  go to state 54


State 43

   24 struct_header: IDENTIFIER .

    $default  reduce using rule 24 (struct_header)


State 44

   23 struct: STRUCT struct_header . struct_body struct_footer

    '{'  shift, and go to state 55

    struct_body  go to state 56


State 45

   15 function_definition: function_declaration '{' . $@1 CODEBODY

    $default  reduce using rule 14 ($@1)

    $@1  go to state 57


State 46

   57 var_decl: base_type IDENTIFIER . semantic
   58         | base_type IDENTIFIER . semantic annotations '=' INT
   59         | base_type IDENTIFIER . semantic annotations '=' FLOAT

    ':'  shift, and go to state 58

    $default  reduce using rule 56 (semantic)

    semantic  go to state 59


State 47

   83 annotations: '<' . annotation_list '>'

    STRING_TYPE  shift, and go to state 60
    UNSIGNED     shift, and go to state 61
    FLOAT_TYPE   shift, and go to state 62
    INT_TYPE     shift, and go to state 63

    scalar_type      go to state 64
    annotation_list  go to state 65
    annotation       go to state 66


State 48

   87 shader_header: hlsl_header annotations .

    $default  reduce using rule 87 (shader_header)


State 49

   86 hlsl: shader_header '{' . CODEBODY

    CODEBODY  shift, and go to state 67


State 50

   16 function_declaration: TYPE_NAME IDENTIFIER '(' . arguments ')'

    FLOAT_TYPE   shift, and go to state 8
    FLOAT2_TYPE  shift, and go to state 9
    FLOAT3_TYPE  shift, and go to state 10
    FLOAT4_TYPE  shift, and go to state 11
    MAT2_TYPE    shift, and go to state 12
    MAT3_TYPE    shift, and go to state 13
    MAT4_TYPE    shift, and go to state 14
    BOOL_TYPE    shift, and go to state 15
    BOOL2_TYPE   shift, and go to state 16
    BOOL3_TYPE   shift, and go to state 17
    BOOL4_TYPE   shift, and go to state 18
    INT_TYPE     shift, and go to state 19
    INT2_TYPE    shift, and go to state 20
    INT3_TYPE    shift, and go to state 21
    INT4_TYPE    shift, and go to state 22

    arguments  go to state 68
    base_type  go to state 32
    var_decl   go to state 69


State 51

   70 tech: TECHNIQUE IDENTIFIER $@5 . annotations '{' passes '}'

    '<'  shift, and go to state 47

    $default  reduce using rule 82 (annotations)

    annotations  go to state 70


State 52

   68 tech: TECHNIQUE $@4 '{' . passes '}'

    PASS  shift, and go to state 71

    pass    go to state 72
    passes  go to state 73


State 53

   20 register_declaration: ':' . REGISTER '(' register_value ')'

    REGISTER  shift, and go to state 74


State 54

   22 cbuffer: CSTBUFFER IDENTIFIER register_declaration . '{' var_decls '}'

    '{'  shift, and go to state 75


State 55

   26 struct_body: '{' . var_decls '}'

    FLOAT_TYPE   shift, and go to state 8
    FLOAT2_TYPE  shift, and go to state 9
    FLOAT3_TYPE  shift, and go to state 10
    FLOAT4_TYPE  shift, and go to state 11
    MAT2_TYPE    shift, and go to state 12
    MAT3_TYPE    shift, and go to state 13
    MAT4_TYPE    shift, and go to state 14
    BOOL_TYPE    shift, and go to state 15
    BOOL2_TYPE   shift, and go to state 16
    BOOL3_TYPE   shift, and go to state 17
    BOOL4_TYPE   shift, and go to state 18
    INT_TYPE     shift, and go to state 19
    INT2_TYPE    shift, and go to state 20
    INT3_TYPE    shift, and go to state 21
    INT4_TYPE    shift, and go to state 22
    STRUCT       shift, and go to state 24

    struct     go to state 76
    var_decls  go to state 77
    base_type  go to state 32
    var_decl   go to state 78


State 56

   23 struct: STRUCT struct_header struct_body . struct_footer

    IDENTIFIER  shift, and go to state 79

    $default  reduce using rule 28 (struct_footer)

    struct_footer  go to state 80


State 57

   15 function_definition: function_declaration '{' $@1 . CODEBODY

    CODEBODY  shift, and go to state 81


State 58

   55 semantic: ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 82


State 59

   57 var_decl: base_type IDENTIFIER semantic .
   58         | base_type IDENTIFIER semantic . annotations '=' INT
   59         | base_type IDENTIFIER semantic . annotations '=' FLOAT

    '<'  shift, and go to state 47

    '='       reduce using rule 82 (annotations)
    $default  reduce using rule 57 (var_decl)

    annotations  go to state 83


State 60

   74 scalar_type: STRING_TYPE .

    $default  reduce using rule 74 (scalar_type)


State 61

   73 scalar_type: UNSIGNED .

    $default  reduce using rule 73 (scalar_type)


State 62

   72 scalar_type: FLOAT_TYPE .

    $default  reduce using rule 72 (scalar_type)


State 63

   71 scalar_type: INT_TYPE .

    $default  reduce using rule 71 (scalar_type)


State 64

   81 annotation: scalar_type . IDENTIFIER '=' annotation_value ';'

    IDENTIFIER  shift, and go to state 84


State 65

   75 annotation_list: annotation_list . annotation
   83 annotations: '<' annotation_list . '>'

    STRING_TYPE  shift, and go to state 60
    UNSIGNED     shift, and go to state 61
    FLOAT_TYPE   shift, and go to state 62
    INT_TYPE     shift, and go to state 63
    '>'          shift, and go to state 85

    scalar_type  go to state 64
    annotation   go to state 86


State 66

   76 annotation_list: annotation .

    $default  reduce using rule 76 (annotation_list)


State 67

   86 hlsl: shader_header '{' CODEBODY .

    $default  reduce using rule 86 (hlsl)


State 68

   16 function_declaration: TYPE_NAME IDENTIFIER '(' arguments . ')'

    ')'  shift, and go to state 87


State 69

   12 arguments: var_decl .
   13          | var_decl . ',' arguments

    ','  shift, and go to state 88

    $default  reduce using rule 12 (arguments)


State 70

   70 tech: TECHNIQUE IDENTIFIER $@5 annotations . '{' passes '}'

    '{'  shift, and go to state 89


State 71

   61 pass: PASS . $@2 annotations passstates
   63     | PASS . IDENTIFIER $@3 annotations passstates

    IDENTIFIER  shift, and go to state 90

    $default  reduce using rule 60 ($@2)

    $@2  go to state 91


State 72

   64 passes: pass .

    $default  reduce using rule 64 (passes)


State 73

   65 passes: passes . pass
   66       | passes . error
   68 tech: TECHNIQUE $@4 '{' passes . '}'

    error  shift, and go to state 92
    PASS   shift, and go to state 71
    '}'    shift, and go to state 93

    pass  go to state 94


State 74

   20 register_declaration: ':' REGISTER . '(' register_value ')'

    '('  shift, and go to state 95


State 75

   22 cbuffer: CSTBUFFER IDENTIFIER register_declaration '{' . var_decls '}'

    FLOAT_TYPE   shift, and go to state 8
    FLOAT2_TYPE  shift, and go to state 9
    FLOAT3_TYPE  shift, and go to state 10
    FLOAT4_TYPE  shift, and go to state 11
    MAT2_TYPE    shift, and go to state 12
    MAT3_TYPE    shift, and go to state 13
    MAT4_TYPE    shift, and go to state 14
    BOOL_TYPE    shift, and go to state 15
    BOOL2_TYPE   shift, and go to state 16
    BOOL3_TYPE   shift, and go to state 17
    BOOL4_TYPE   shift, and go to state 18
    INT_TYPE     shift, and go to state 19
    INT2_TYPE    shift, and go to state 20
    INT3_TYPE    shift, and go to state 21
    INT4_TYPE    shift, and go to state 22
    STRUCT       shift, and go to state 24

    struct     go to state 76
    var_decls  go to state 96
    base_type  go to state 32
    var_decl   go to state 78


State 76

   31 var_decls: struct . ';'

    ';'  shift, and go to state 97


State 77

   26 struct_body: '{' var_decls . '}'
   29 var_decls: var_decls . var_decl ';'

    FLOAT_TYPE   shift, and go to state 8
    FLOAT2_TYPE  shift, and go to state 9
    FLOAT3_TYPE  shift, and go to state 10
    FLOAT4_TYPE  shift, and go to state 11
    MAT2_TYPE    shift, and go to state 12
    MAT3_TYPE    shift, and go to state 13
    MAT4_TYPE    shift, and go to state 14
    BOOL_TYPE    shift, and go to state 15
    BOOL2_TYPE   shift, and go to state 16
    BOOL3_TYPE   shift, and go to state 17
    BOOL4_TYPE   shift, and go to state 18
    INT_TYPE     shift, and go to state 19
    INT2_TYPE    shift, and go to state 20
    INT3_TYPE    shift, and go to state 21
    INT4_TYPE    shift, and go to state 22
    '}'          shift, and go to state 98

    base_type  go to state 32
    var_decl   go to state 99


State 78

   30 var_decls: var_decl . ';'

    ';'  shift, and go to state 100


State 79

   27 struct_footer: IDENTIFIER .

    $default  reduce using rule 27 (struct_footer)


State 80

   23 struct: STRUCT struct_header struct_body struct_footer .

    $default  reduce using rule 23 (struct)


State 81

   15 function_definition: function_declaration '{' $@1 CODEBODY .

    $default  reduce using rule 15 (function_definition)


State 82

   55 semantic: ':' IDENTIFIER .

    $default  reduce using rule 55 (semantic)


State 83

   58 var_decl: base_type IDENTIFIER semantic annotations . '=' INT
   59         | base_type IDENTIFIER semantic annotations . '=' FLOAT

    '='  shift, and go to state 101


State 84

   81 annotation: scalar_type IDENTIFIER . '=' annotation_value ';'

    '='  shift, and go to state 102


State 85

   83 annotations: '<' annotation_list '>' .

    $default  reduce using rule 83 (annotations)


State 86

   75 annotation_list: annotation_list annotation .

    $default  reduce using rule 75 (annotation_list)


State 87

   16 function_declaration: TYPE_NAME IDENTIFIER '(' arguments ')' .

    $default  reduce using rule 16 (function_declaration)


State 88

   13 arguments: var_decl ',' . arguments

    FLOAT_TYPE   shift, and go to state 8
    FLOAT2_TYPE  shift, and go to state 9
    FLOAT3_TYPE  shift, and go to state 10
    FLOAT4_TYPE  shift, and go to state 11
    MAT2_TYPE    shift, and go to state 12
    MAT3_TYPE    shift, and go to state 13
    MAT4_TYPE    shift, and go to state 14
    BOOL_TYPE    shift, and go to state 15
    BOOL2_TYPE   shift, and go to state 16
    BOOL3_TYPE   shift, and go to state 17
    BOOL4_TYPE   shift, and go to state 18
    INT_TYPE     shift, and go to state 19
    INT2_TYPE    shift, and go to state 20
    INT3_TYPE    shift, and go to state 21
    INT4_TYPE    shift, and go to state 22

    arguments  go to state 103
    base_type  go to state 32
    var_decl   go to state 69


State 89

   70 tech: TECHNIQUE IDENTIFIER $@5 annotations '{' . passes '}'

    PASS  shift, and go to state 71

    pass    go to state 72
    passes  go to state 104


State 90

   63 pass: PASS IDENTIFIER . $@3 annotations passstates

    $default  reduce using rule 62 ($@3)

    $@3  go to state 105


State 91

   61 pass: PASS $@2 . annotations passstates

    '<'  shift, and go to state 47

    $default  reduce using rule 82 (annotations)

    annotations  go to state 106


State 92

   66 passes: passes error .

    $default  reduce using rule 66 (passes)


State 93

   68 tech: TECHNIQUE $@4 '{' passes '}' .

    $default  reduce using rule 68 (tech)


State 94

   65 passes: passes pass .

    $default  reduce using rule 65 (passes)


State 95

   20 register_declaration: ':' REGISTER '(' . register_value ')'

    IDENTIFIER  shift, and go to state 107
    INT         shift, and go to state 108

    register_value  go to state 109


State 96

   22 cbuffer: CSTBUFFER IDENTIFIER register_declaration '{' var_decls . '}'
   29 var_decls: var_decls . var_decl ';'

    FLOAT_TYPE   shift, and go to state 8
    FLOAT2_TYPE  shift, and go to state 9
    FLOAT3_TYPE  shift, and go to state 10
    FLOAT4_TYPE  shift, and go to state 11
    MAT2_TYPE    shift, and go to state 12
    MAT3_TYPE    shift, and go to state 13
    MAT4_TYPE    shift, and go to state 14
    BOOL_TYPE    shift, and go to state 15
    BOOL2_TYPE   shift, and go to state 16
    BOOL3_TYPE   shift, and go to state 17
    BOOL4_TYPE   shift, and go to state 18
    INT_TYPE     shift, and go to state 19
    INT2_TYPE    shift, and go to state 20
    INT3_TYPE    shift, and go to state 21
    INT4_TYPE    shift, and go to state 22
    '}'          shift, and go to state 110

    base_type  go to state 32
    var_decl   go to state 99


State 97

   31 var_decls: struct ';' .

    $default  reduce using rule 31 (var_decls)


State 98

   26 struct_body: '{' var_decls '}' .

    $default  reduce using rule 26 (struct_body)


State 99

   29 var_decls: var_decls var_decl . ';'

    ';'  shift, and go to state 111


State 100

   30 var_decls: var_decl ';' .

    $default  reduce using rule 30 (var_decls)


State 101

   58 var_decl: base_type IDENTIFIER semantic annotations '=' . INT
   59         | base_type IDENTIFIER semantic annotations '=' . FLOAT

    FLOAT  shift, and go to state 112
    INT    shift, and go to state 113


State 102

   81 annotation: scalar_type IDENTIFIER '=' . annotation_value ';'

    FLOAT     shift, and go to state 114
    INT       shift, and go to state 115
    STR       shift, and go to state 116
    UNSIGNED  shift, and go to state 117

    annotation_value  go to state 118


State 103

   13 arguments: var_decl ',' arguments .

    $default  reduce using rule 13 (arguments)


State 104

   65 passes: passes . pass
   66       | passes . error
   70 tech: TECHNIQUE IDENTIFIER $@5 annotations '{' passes . '}'

    error  shift, and go to state 92
    PASS   shift, and go to state 71
    '}'    shift, and go to state 119

    pass  go to state 94


State 105

   63 pass: PASS IDENTIFIER $@3 . annotations passstates

    '<'  shift, and go to state 47

    $default  reduce using rule 82 (annotations)

    annotations  go to state 120


State 106

   61 pass: PASS $@2 annotations . passstates

    '{'  shift, and go to state 121

    passstates  go to state 122


State 107

   19 register_value: IDENTIFIER .

    $default  reduce using rule 19 (register_value)


State 108

   18 register_value: INT .

    $default  reduce using rule 18 (register_value)


State 109

   20 register_declaration: ':' REGISTER '(' register_value . ')'

    ')'  shift, and go to state 123


State 110

   22 cbuffer: CSTBUFFER IDENTIFIER register_declaration '{' var_decls '}' .

    $default  reduce using rule 22 (cbuffer)


State 111

   29 var_decls: var_decls var_decl ';' .

    $default  reduce using rule 29 (var_decls)


State 112

   59 var_decl: base_type IDENTIFIER semantic annotations '=' FLOAT .

    $default  reduce using rule 59 (var_decl)


State 113

   58 var_decl: base_type IDENTIFIER semantic annotations '=' INT .

    $default  reduce using rule 58 (var_decl)


State 114

   77 annotation_value: FLOAT .

    $default  reduce using rule 77 (annotation_value)


State 115

   78 annotation_value: INT .

    $default  reduce using rule 78 (annotation_value)


State 116

   79 annotation_value: STR .

    $default  reduce using rule 79 (annotation_value)


State 117

   80 annotation_value: UNSIGNED .

    $default  reduce using rule 80 (annotation_value)


State 118

   81 annotation: scalar_type IDENTIFIER '=' annotation_value . ';'

    ';'  shift, and go to state 124


State 119

   70 tech: TECHNIQUE IDENTIFIER $@5 annotations '{' passes '}' .

    $default  reduce using rule 70 (tech)


State 120

   63 pass: PASS IDENTIFIER $@3 annotations . passstates

    '{'  shift, and go to state 121

    passstates  go to state 125


State 121

   39 passstates: '{' . shader_assignments '}'

    VERTEXPROGRAM    shift, and go to state 126
    FRAGMENTPROGRAM  shift, and go to state 127
    GEOMETRYPROGRAM  shift, and go to state 128

    shader_type         go to state 129
    shader_assignment   go to state 130
    shader_assignments  go to state 131


State 122

   61 pass: PASS $@2 annotations passstates .

    $default  reduce using rule 61 (pass)


State 123

   20 register_declaration: ':' REGISTER '(' register_value ')' .

    $default  reduce using rule 20 (register_declaration)


State 124

   81 annotation: scalar_type IDENTIFIER '=' annotation_value ';' .

    $default  reduce using rule 81 (annotation)


State 125

   63 pass: PASS IDENTIFIER $@3 annotations passstates .

    $default  reduce using rule 63 (pass)


State 126

   33 shader_type: VERTEXPROGRAM .

    $default  reduce using rule 33 (shader_type)


State 127

   35 shader_type: FRAGMENTPROGRAM .

    $default  reduce using rule 35 (shader_type)


State 128

   34 shader_type: GEOMETRYPROGRAM .

    $default  reduce using rule 34 (shader_type)


State 129

   36 shader_assignment: shader_type . '=' IDENTIFIER

    '='  shift, and go to state 132


State 130

   37 shader_assignments: shader_assignment .

    $default  reduce using rule 37 (shader_assignments)


State 131

   38 shader_assignments: shader_assignments . shader_assignment
   39 passstates: '{' shader_assignments . '}'

    VERTEXPROGRAM    shift, and go to state 126
    FRAGMENTPROGRAM  shift, and go to state 127
    GEOMETRYPROGRAM  shift, and go to state 128
    '}'              shift, and go to state 133

    shader_type        go to state 129
    shader_assignment  go to state 134


State 132

   36 shader_assignment: shader_type '=' . IDENTIFIER

    IDENTIFIER  shift, and go to state 135


State 133

   39 passstates: '{' shader_assignments '}' .

    $default  reduce using rule 39 (passstates)


State 134

   38 shader_assignments: shader_assignments shader_assignment .

    $default  reduce using rule 38 (shader_assignments)


State 135

   36 shader_assignment: shader_type '=' IDENTIFIER .

    $default  reduce using rule 36 (shader_assignment)
