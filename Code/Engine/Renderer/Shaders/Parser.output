Terminals unused in grammar

    TRUE
    FALSE
    BOOL
    VOID_TYPE
    HIGHP
    MEDIUMP
    LOWP
    UNIFORM
    TEXTURE1D_TYPE
    TEXTURE2DSHADOW_TYPE
    TEXTURE2DRECT_TYPE
    TEXTURE3D_TYPE
    TEXTURECUBE_TYPE
    SAMPLER1D_TYPE
    SAMPLER2D_TYPE
    SAMPLER2DSHADOW_TYPE
    SAMPLER2DRECT_TYPE
    SAMPLER3D_TYPE
    SAMPLERCUBE_TYPE
    EXTENSION
    SEPARATE_SHADER
    HULLPROGRAM
    EVALPROGRAM
    SHDPROFILE
    SAMPLERRESOURCE
    SAMPLERTEXUNIT
    SETSAMPLERSTATE
    SETDSTSTATE
    SETRASTERIZATIONSTATE
    SETCOLORSAMPLESTATE
    IMAGERESOURCE
    IMAGEUNIT
    IMAGEACCESS
    IMAGELAYER
    IMAGELAYERED
    WRITE_ONLY
    READ_ONLY
    READ_WRITE
    VERTEXFORMAT


Grammar

    0 $accept: input "end of file"

    1 input: ε
    2      | input ';'
    3      | input tech
    4      | input hlsl
    5      | input var_decl
    6      | input shader_resource
    7      | input function_definition
    8      | input function_declaration
    9      | input fatal_error
   10      | input struct
   11      | input error

   12 var_spec: INSPECYFIER
   13         | OUTSPECYFIER
   14         | ε

   15 arguments: var_spec var_decl
   16          | var_spec var_decl ',' arguments
   17          | ε

   18 $@1: ε

   19 function_definition: function_declaration semantic '{' $@1 CODEBODY

   20 object_type: TYPE_NAME
   21            | base_type

   22 $@2: ε

   23 function_declaration: object_type IDENTIFIER '(' $@2 arguments ')'

   24 fatal_error: FATALERROR

   25 register_value: INT
   26               | IDENTIFIER

   27 register_declaration: ':' REGISTER '(' register_value ')'
   28                     | ε

   29 cbuffer: CSTBUFFER IDENTIFIER register_declaration '{' var_decls '}'

   30 struct: STRUCT struct_header struct_body struct_footer

   31 struct_header: IDENTIFIER
   32              | ε

   33 struct_body: '{' var_decls '}'

   34 struct_footer: IDENTIFIER
   35              | ε

   36 var_decls: var_decls var_decl ';'
   37          | var_decl ';'
   38          | struct ';'

   39 shader_resource: cbuffer
   40                | texture2d
   41                | sampler_state

   42 texture2d: TEXTURE2D_TYPE IDENTIFIER register_declaration

   43 sampler_state: SAMPLERSTATE IDENTIFIER register_declaration

   44 shader_type: VERTEXPROGRAM
   45            | GEOMETRYPROGRAM
   46            | FRAGMENTPROGRAM

   47 shader_assignment: shader_type '=' IDENTIFIER

   48 shader_assignments: shader_assignment
   49                   | shader_assignments shader_assignment

   50 passstates: '{' shader_assignments '}'

   51 base_type: FLOAT_TYPE
   52          | FLOAT2_TYPE
   53          | FLOAT3_TYPE
   54          | FLOAT4_TYPE
   55          | INT_TYPE
   56          | INT2_TYPE
   57          | INT3_TYPE
   58          | INT4_TYPE
   59          | BOOL_TYPE
   60          | BOOL2_TYPE
   61          | BOOL3_TYPE
   62          | BOOL4_TYPE
   63          | MAT2_TYPE
   64          | MAT3_TYPE
   65          | MAT4_TYPE

   66 semantic: ':' IDENTIFIER
   67         | ε

   68 var_decl: object_type IDENTIFIER semantic
   69         | object_type IDENTIFIER semantic annotations '=' INT
   70         | object_type IDENTIFIER semantic annotations '=' FLOAT

   71 $@3: ε

   72 pass: PASS $@3 annotations passstates

   73 $@4: ε

   74 pass: PASS IDENTIFIER $@4 annotations passstates

   75 passes: pass
   76       | passes pass
   77       | passes error

   78 $@5: ε

   79 tech: TECHNIQUE $@5 '{' passes '}'

   80 $@6: ε

   81 tech: TECHNIQUE IDENTIFIER $@6 annotations '{' passes '}'

   82 scalar_type: INT_TYPE
   83            | FLOAT_TYPE
   84            | UNSIGNED
   85            | STRING_TYPE

   86 annotation_list: annotation_list annotation
   87                | annotation

   88 annotation_value: FLOAT
   89                 | INT
   90                 | STR
   91                 | UNSIGNED

   92 annotation: scalar_type IDENTIFIER '=' annotation_value ';'

   93 annotations: ε
   94            | '<' annotation_list '>'

   95 hlsl_header: HLSL11SHADER IDENTIFIER
   96            | HLSL11SHADER

   97 hlsl: shader_header '{' CODEBODY

   98 shader_header: hlsl_header annotations


Terminals, with rules where they appear

    "end of file" (0) 0
    '(' (40) 23 27
    ')' (41) 23 27
    ',' (44) 16
    ':' (58) 27 66
    ';' (59) 2 36 37 38 92
    '<' (60) 94
    '=' (61) 47 69 70 92
    '>' (62) 94
    '{' (123) 19 29 33 50 79 81 97
    '}' (125) 29 33 50 79 81
    error (256) 11 77
    TYPE_NAME <std::string> (258) 20
    IDENTIFIER <std::string> (259) 23 26 29 31 34 42 43 47 66 68 69 70 74 81 92 95
    TRUE <bool> (260)
    FALSE <bool> (261)
    FLOAT <float> (262) 70 88
    INT <int> (263) 25 69 89
    BOOL <bool> (264)
    STR <std::string> (265) 90
    HLSL11SHADER (266) 95 96
    TECHNIQUE (267) 79 81
    PASS (268) 72 74
    CODEBODY <std::string> (269) 19 97
    STRING_TYPE (270) 85
    VOID_TYPE (271)
    UNSIGNED (272) 84 91
    HIGHP (273)
    MEDIUMP (274)
    LOWP (275)
    UNIFORM (276)
    CSTBUFFER (277) 29
    FLOAT_TYPE (278) 51 83
    FLOAT2_TYPE (279) 52
    FLOAT3_TYPE (280) 53
    FLOAT4_TYPE (281) 54
    MAT2_TYPE (282) 63
    MAT3_TYPE (283) 64
    MAT4_TYPE (284) 65
    BOOL_TYPE (285) 59
    BOOL2_TYPE (286) 60
    BOOL3_TYPE (287) 61
    BOOL4_TYPE (288) 62
    INT_TYPE (289) 55 82
    INT2_TYPE (290) 56
    INT3_TYPE (291) 57
    INT4_TYPE (292) 58
    TEXTURE1D_TYPE (293)
    TEXTURE2D_TYPE (294) 42
    TEXTURE2DSHADOW_TYPE (295)
    TEXTURE2DRECT_TYPE (296)
    TEXTURE3D_TYPE (297)
    TEXTURECUBE_TYPE (298)
    SAMPLER1D_TYPE (299)
    SAMPLER2D_TYPE (300)
    SAMPLER2DSHADOW_TYPE (301)
    SAMPLER2DRECT_TYPE (302)
    SAMPLER3D_TYPE (303)
    SAMPLERCUBE_TYPE (304)
    SAMPLERSTATE (305) 43
    EXTENSION (306)
    SEPARATE_SHADER (307)
    VERTEXPROGRAM <IShader::Type> (308) 44
    FRAGMENTPROGRAM <IShader::Type> (309) 46
    GEOMETRYPROGRAM <IShader::Type> (310) 45
    HULLPROGRAM <IShader::Type> (311)
    EVALPROGRAM <IShader::Type> (312)
    SHDPROFILE (313)
    SAMPLERRESOURCE (314)
    SAMPLERTEXUNIT (315)
    SETSAMPLERSTATE (316)
    SETDSTSTATE (317)
    SETRASTERIZATIONSTATE (318)
    SETCOLORSAMPLESTATE (319)
    IMAGERESOURCE (320)
    IMAGEUNIT (321)
    IMAGEACCESS (322)
    IMAGELAYER (323)
    IMAGELAYERED (324)
    WRITE_ONLY (325)
    READ_ONLY (326)
    READ_WRITE (327)
    VERTEXFORMAT (328)
    REGISTER (329) 27
    FATALERROR (330) 24
    STRUCT (331) 30
    INSPECYFIER (332) 12
    OUTSPECYFIER (333) 13


Nonterminals, with rules where they appear

    $accept (89)
        on left: 0
    input (90)
        on left: 1 2 3 4 5 6 7 8 9 10 11
        on right: 0 2 3 4 5 6 7 8 9 10 11
    var_spec (91)
        on left: 12 13 14
        on right: 15 16
    arguments (92)
        on left: 15 16 17
        on right: 16 23
    function_definition (93)
        on left: 19
        on right: 7
    $@1 (94)
        on left: 18
        on right: 19
    object_type (95)
        on left: 20 21
        on right: 23 68 69 70
    function_declaration (96)
        on left: 23
        on right: 8 19
    $@2 (97)
        on left: 22
        on right: 23
    fatal_error (98)
        on left: 24
        on right: 9
    register_value (99)
        on left: 25 26
        on right: 27
    register_declaration (100)
        on left: 27 28
        on right: 29 42 43
    cbuffer (101)
        on left: 29
        on right: 39
    struct (102)
        on left: 30
        on right: 10 38
    struct_header <std::string> (103)
        on left: 31 32
        on right: 30
    struct_body (104)
        on left: 33
        on right: 30
    struct_footer <std::string> (105)
        on left: 34 35
        on right: 30
    var_decls (106)
        on left: 36 37 38
        on right: 29 33 36
    shader_resource (107)
        on left: 39 40 41
        on right: 6
    texture2d (108)
        on left: 42
        on right: 40
    sampler_state (109)
        on left: 43
        on right: 41
    shader_type <IShader::Type> (110)
        on left: 44 45 46
        on right: 47
    shader_assignment <std::string> (111)
        on left: 47
        on right: 48 49
    shader_assignments (112)
        on left: 48 49
        on right: 49 50
    passstates (113)
        on left: 50
        on right: 72 74
    base_type <nvFX::IUniform::Type> (114)
        on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
        on right: 21
    semantic (115)
        on left: 66 67
        on right: 19 68 69 70
    var_decl (116)
        on left: 68 69 70
        on right: 5 15 16 36 37
    pass (117)
        on left: 72 74
        on right: 75 76
    $@3 (118)
        on left: 71
        on right: 72
    $@4 (119)
        on left: 73
        on right: 74
    passes (120)
        on left: 75 76 77
        on right: 76 77 79 81
    tech (121)
        on left: 79 81
        on right: 3
    $@5 (122)
        on left: 78
        on right: 79
    $@6 (123)
        on left: 80
        on right: 81
    scalar_type (124)
        on left: 82 83 84 85
        on right: 92
    annotation_list (125)
        on left: 86 87
        on right: 86 94
    annotation_value (126)
        on left: 88 89 90 91
        on right: 92
    annotation (127)
        on left: 92
        on right: 86 87
    annotations (128)
        on left: 93 94
        on right: 69 70 72 74 81 98
    hlsl_header <std::string> (129)
        on left: 95 96
        on right: 98
    hlsl (130)
        on left: 97
        on right: 4
    shader_header <std::string> (131)
        on left: 98
        on right: 97


State 0

    0 $accept: • input "end of file"

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input • "end of file"
    2 input: input • ';'
    3      | input • tech
    4      | input • hlsl
    5      | input • var_decl
    6      | input • shader_resource
    7      | input • function_definition
    8      | input • function_declaration
    9      | input • fatal_error
   10      | input • struct
   11      | input • error

    "end of file"   shift, and go to state 2
    error           shift, and go to state 3
    TYPE_NAME       shift, and go to state 4
    HLSL11SHADER    shift, and go to state 5
    TECHNIQUE       shift, and go to state 6
    CSTBUFFER       shift, and go to state 7
    FLOAT_TYPE      shift, and go to state 8
    FLOAT2_TYPE     shift, and go to state 9
    FLOAT3_TYPE     shift, and go to state 10
    FLOAT4_TYPE     shift, and go to state 11
    MAT2_TYPE       shift, and go to state 12
    MAT3_TYPE       shift, and go to state 13
    MAT4_TYPE       shift, and go to state 14
    BOOL_TYPE       shift, and go to state 15
    BOOL2_TYPE      shift, and go to state 16
    BOOL3_TYPE      shift, and go to state 17
    BOOL4_TYPE      shift, and go to state 18
    INT_TYPE        shift, and go to state 19
    INT2_TYPE       shift, and go to state 20
    INT3_TYPE       shift, and go to state 21
    INT4_TYPE       shift, and go to state 22
    TEXTURE2D_TYPE  shift, and go to state 23
    SAMPLERSTATE    shift, and go to state 24
    FATALERROR      shift, and go to state 25
    STRUCT          shift, and go to state 26
    ';'             shift, and go to state 27

    function_definition   go to state 28
    object_type           go to state 29
    function_declaration  go to state 30
    fatal_error           go to state 31
    cbuffer               go to state 32
    struct                go to state 33
    shader_resource       go to state 34
    texture2d             go to state 35
    sampler_state         go to state 36
    base_type             go to state 37
    var_decl              go to state 38
    tech                  go to state 39
    hlsl_header           go to state 40
    hlsl                  go to state 41
    shader_header         go to state 42


State 2

    0 $accept: input "end of file" •

    $default  accept


State 3

   11 input: input error •

    $default  reduce using rule 11 (input)


State 4

   20 object_type: TYPE_NAME •

    $default  reduce using rule 20 (object_type)


State 5

   95 hlsl_header: HLSL11SHADER • IDENTIFIER
   96            | HLSL11SHADER •

    IDENTIFIER  shift, and go to state 43

    $default  reduce using rule 96 (hlsl_header)


State 6

   79 tech: TECHNIQUE • $@5 '{' passes '}'
   81     | TECHNIQUE • IDENTIFIER $@6 annotations '{' passes '}'

    IDENTIFIER  shift, and go to state 44

    $default  reduce using rule 78 ($@5)

    $@5  go to state 45


State 7

   29 cbuffer: CSTBUFFER • IDENTIFIER register_declaration '{' var_decls '}'

    IDENTIFIER  shift, and go to state 46


State 8

   51 base_type: FLOAT_TYPE •

    $default  reduce using rule 51 (base_type)


State 9

   52 base_type: FLOAT2_TYPE •

    $default  reduce using rule 52 (base_type)


State 10

   53 base_type: FLOAT3_TYPE •

    $default  reduce using rule 53 (base_type)


State 11

   54 base_type: FLOAT4_TYPE •

    $default  reduce using rule 54 (base_type)


State 12

   63 base_type: MAT2_TYPE •

    $default  reduce using rule 63 (base_type)


State 13

   64 base_type: MAT3_TYPE •

    $default  reduce using rule 64 (base_type)


State 14

   65 base_type: MAT4_TYPE •

    $default  reduce using rule 65 (base_type)


State 15

   59 base_type: BOOL_TYPE •

    $default  reduce using rule 59 (base_type)


State 16

   60 base_type: BOOL2_TYPE •

    $default  reduce using rule 60 (base_type)


State 17

   61 base_type: BOOL3_TYPE •

    $default  reduce using rule 61 (base_type)


State 18

   62 base_type: BOOL4_TYPE •

    $default  reduce using rule 62 (base_type)


State 19

   55 base_type: INT_TYPE •

    $default  reduce using rule 55 (base_type)


State 20

   56 base_type: INT2_TYPE •

    $default  reduce using rule 56 (base_type)


State 21

   57 base_type: INT3_TYPE •

    $default  reduce using rule 57 (base_type)


State 22

   58 base_type: INT4_TYPE •

    $default  reduce using rule 58 (base_type)


State 23

   42 texture2d: TEXTURE2D_TYPE • IDENTIFIER register_declaration

    IDENTIFIER  shift, and go to state 47


State 24

   43 sampler_state: SAMPLERSTATE • IDENTIFIER register_declaration

    IDENTIFIER  shift, and go to state 48


State 25

   24 fatal_error: FATALERROR •

    $default  reduce using rule 24 (fatal_error)


State 26

   30 struct: STRUCT • struct_header struct_body struct_footer

    IDENTIFIER  shift, and go to state 49

    $default  reduce using rule 32 (struct_header)

    struct_header  go to state 50


State 27

    2 input: input ';' •

    $default  reduce using rule 2 (input)


State 28

    7 input: input function_definition •

    $default  reduce using rule 7 (input)


State 29

   23 function_declaration: object_type • IDENTIFIER '(' $@2 arguments ')'
   68 var_decl: object_type • IDENTIFIER semantic
   69         | object_type • IDENTIFIER semantic annotations '=' INT
   70         | object_type • IDENTIFIER semantic annotations '=' FLOAT

    IDENTIFIER  shift, and go to state 51


State 30

    8 input: input function_declaration •
   19 function_definition: function_declaration • semantic '{' $@1 CODEBODY

    ':'  shift, and go to state 52

    '{'       reduce using rule 67 (semantic)
    $default  reduce using rule 8 (input)

    semantic  go to state 53


State 31

    9 input: input fatal_error •

    $default  reduce using rule 9 (input)


State 32

   39 shader_resource: cbuffer •

    $default  reduce using rule 39 (shader_resource)


State 33

   10 input: input struct •

    $default  reduce using rule 10 (input)


State 34

    6 input: input shader_resource •

    $default  reduce using rule 6 (input)


State 35

   40 shader_resource: texture2d •

    $default  reduce using rule 40 (shader_resource)


State 36

   41 shader_resource: sampler_state •

    $default  reduce using rule 41 (shader_resource)


State 37

   21 object_type: base_type •

    $default  reduce using rule 21 (object_type)


State 38

    5 input: input var_decl •

    $default  reduce using rule 5 (input)


State 39

    3 input: input tech •

    $default  reduce using rule 3 (input)


State 40

   98 shader_header: hlsl_header • annotations

    '<'  shift, and go to state 54

    $default  reduce using rule 93 (annotations)

    annotations  go to state 55


State 41

    4 input: input hlsl •

    $default  reduce using rule 4 (input)


State 42

   97 hlsl: shader_header • '{' CODEBODY

    '{'  shift, and go to state 56


State 43

   95 hlsl_header: HLSL11SHADER IDENTIFIER •

    $default  reduce using rule 95 (hlsl_header)


State 44

   81 tech: TECHNIQUE IDENTIFIER • $@6 annotations '{' passes '}'

    $default  reduce using rule 80 ($@6)

    $@6  go to state 57


State 45

   79 tech: TECHNIQUE $@5 • '{' passes '}'

    '{'  shift, and go to state 58


State 46

   29 cbuffer: CSTBUFFER IDENTIFIER • register_declaration '{' var_decls '}'

    ':'  shift, and go to state 59

    $default  reduce using rule 28 (register_declaration)

    register_declaration  go to state 60


State 47

   42 texture2d: TEXTURE2D_TYPE IDENTIFIER • register_declaration

    ':'  shift, and go to state 59

    $default  reduce using rule 28 (register_declaration)

    register_declaration  go to state 61


State 48

   43 sampler_state: SAMPLERSTATE IDENTIFIER • register_declaration

    ':'  shift, and go to state 59

    $default  reduce using rule 28 (register_declaration)

    register_declaration  go to state 62


State 49

   31 struct_header: IDENTIFIER •

    $default  reduce using rule 31 (struct_header)


State 50

   30 struct: STRUCT struct_header • struct_body struct_footer

    '{'  shift, and go to state 63

    struct_body  go to state 64


State 51

   23 function_declaration: object_type IDENTIFIER • '(' $@2 arguments ')'
   68 var_decl: object_type IDENTIFIER • semantic
   69         | object_type IDENTIFIER • semantic annotations '=' INT
   70         | object_type IDENTIFIER • semantic annotations '=' FLOAT

    '('  shift, and go to state 65
    ':'  shift, and go to state 52

    $default  reduce using rule 67 (semantic)

    semantic  go to state 66


State 52

   66 semantic: ':' • IDENTIFIER

    IDENTIFIER  shift, and go to state 67


State 53

   19 function_definition: function_declaration semantic • '{' $@1 CODEBODY

    '{'  shift, and go to state 68


State 54

   94 annotations: '<' • annotation_list '>'

    STRING_TYPE  shift, and go to state 69
    UNSIGNED     shift, and go to state 70
    FLOAT_TYPE   shift, and go to state 71
    INT_TYPE     shift, and go to state 72

    scalar_type      go to state 73
    annotation_list  go to state 74
    annotation       go to state 75


State 55

   98 shader_header: hlsl_header annotations •

    $default  reduce using rule 98 (shader_header)


State 56

   97 hlsl: shader_header '{' • CODEBODY

    CODEBODY  shift, and go to state 76


State 57

   81 tech: TECHNIQUE IDENTIFIER $@6 • annotations '{' passes '}'

    '<'  shift, and go to state 54

    $default  reduce using rule 93 (annotations)

    annotations  go to state 77


State 58

   79 tech: TECHNIQUE $@5 '{' • passes '}'

    PASS  shift, and go to state 78

    pass    go to state 79
    passes  go to state 80


State 59

   27 register_declaration: ':' • REGISTER '(' register_value ')'

    REGISTER  shift, and go to state 81


State 60

   29 cbuffer: CSTBUFFER IDENTIFIER register_declaration • '{' var_decls '}'

    '{'  shift, and go to state 82


State 61

   42 texture2d: TEXTURE2D_TYPE IDENTIFIER register_declaration •

    $default  reduce using rule 42 (texture2d)


State 62

   43 sampler_state: SAMPLERSTATE IDENTIFIER register_declaration •

    $default  reduce using rule 43 (sampler_state)


State 63

   33 struct_body: '{' • var_decls '}'

    TYPE_NAME    shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 8
    FLOAT2_TYPE  shift, and go to state 9
    FLOAT3_TYPE  shift, and go to state 10
    FLOAT4_TYPE  shift, and go to state 11
    MAT2_TYPE    shift, and go to state 12
    MAT3_TYPE    shift, and go to state 13
    MAT4_TYPE    shift, and go to state 14
    BOOL_TYPE    shift, and go to state 15
    BOOL2_TYPE   shift, and go to state 16
    BOOL3_TYPE   shift, and go to state 17
    BOOL4_TYPE   shift, and go to state 18
    INT_TYPE     shift, and go to state 19
    INT2_TYPE    shift, and go to state 20
    INT3_TYPE    shift, and go to state 21
    INT4_TYPE    shift, and go to state 22
    STRUCT       shift, and go to state 26

    object_type  go to state 83
    struct       go to state 84
    var_decls    go to state 85
    base_type    go to state 37
    var_decl     go to state 86


State 64

   30 struct: STRUCT struct_header struct_body • struct_footer

    IDENTIFIER  shift, and go to state 87

    $default  reduce using rule 35 (struct_footer)

    struct_footer  go to state 88


State 65

   23 function_declaration: object_type IDENTIFIER '(' • $@2 arguments ')'

    $default  reduce using rule 22 ($@2)

    $@2  go to state 89


State 66

   68 var_decl: object_type IDENTIFIER semantic •
   69         | object_type IDENTIFIER semantic • annotations '=' INT
   70         | object_type IDENTIFIER semantic • annotations '=' FLOAT

    '<'  shift, and go to state 54

    '='       reduce using rule 93 (annotations)
    $default  reduce using rule 68 (var_decl)

    annotations  go to state 90


State 67

   66 semantic: ':' IDENTIFIER •

    $default  reduce using rule 66 (semantic)


State 68

   19 function_definition: function_declaration semantic '{' • $@1 CODEBODY

    $default  reduce using rule 18 ($@1)

    $@1  go to state 91


State 69

   85 scalar_type: STRING_TYPE •

    $default  reduce using rule 85 (scalar_type)


State 70

   84 scalar_type: UNSIGNED •

    $default  reduce using rule 84 (scalar_type)


State 71

   83 scalar_type: FLOAT_TYPE •

    $default  reduce using rule 83 (scalar_type)


State 72

   82 scalar_type: INT_TYPE •

    $default  reduce using rule 82 (scalar_type)


State 73

   92 annotation: scalar_type • IDENTIFIER '=' annotation_value ';'

    IDENTIFIER  shift, and go to state 92


State 74

   86 annotation_list: annotation_list • annotation
   94 annotations: '<' annotation_list • '>'

    STRING_TYPE  shift, and go to state 69
    UNSIGNED     shift, and go to state 70
    FLOAT_TYPE   shift, and go to state 71
    INT_TYPE     shift, and go to state 72
    '>'          shift, and go to state 93

    scalar_type  go to state 73
    annotation   go to state 94


State 75

   87 annotation_list: annotation •

    $default  reduce using rule 87 (annotation_list)


State 76

   97 hlsl: shader_header '{' CODEBODY •

    $default  reduce using rule 97 (hlsl)


State 77

   81 tech: TECHNIQUE IDENTIFIER $@6 annotations • '{' passes '}'

    '{'  shift, and go to state 95


State 78

   72 pass: PASS • $@3 annotations passstates
   74     | PASS • IDENTIFIER $@4 annotations passstates

    IDENTIFIER  shift, and go to state 96

    $default  reduce using rule 71 ($@3)

    $@3  go to state 97


State 79

   75 passes: pass •

    $default  reduce using rule 75 (passes)


State 80

   76 passes: passes • pass
   77       | passes • error
   79 tech: TECHNIQUE $@5 '{' passes • '}'

    error  shift, and go to state 98
    PASS   shift, and go to state 78
    '}'    shift, and go to state 99

    pass  go to state 100


State 81

   27 register_declaration: ':' REGISTER • '(' register_value ')'

    '('  shift, and go to state 101


State 82

   29 cbuffer: CSTBUFFER IDENTIFIER register_declaration '{' • var_decls '}'

    TYPE_NAME    shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 8
    FLOAT2_TYPE  shift, and go to state 9
    FLOAT3_TYPE  shift, and go to state 10
    FLOAT4_TYPE  shift, and go to state 11
    MAT2_TYPE    shift, and go to state 12
    MAT3_TYPE    shift, and go to state 13
    MAT4_TYPE    shift, and go to state 14
    BOOL_TYPE    shift, and go to state 15
    BOOL2_TYPE   shift, and go to state 16
    BOOL3_TYPE   shift, and go to state 17
    BOOL4_TYPE   shift, and go to state 18
    INT_TYPE     shift, and go to state 19
    INT2_TYPE    shift, and go to state 20
    INT3_TYPE    shift, and go to state 21
    INT4_TYPE    shift, and go to state 22
    STRUCT       shift, and go to state 26

    object_type  go to state 83
    struct       go to state 84
    var_decls    go to state 102
    base_type    go to state 37
    var_decl     go to state 86


State 83

   68 var_decl: object_type • IDENTIFIER semantic
   69         | object_type • IDENTIFIER semantic annotations '=' INT
   70         | object_type • IDENTIFIER semantic annotations '=' FLOAT

    IDENTIFIER  shift, and go to state 103


State 84

   38 var_decls: struct • ';'

    ';'  shift, and go to state 104


State 85

   33 struct_body: '{' var_decls • '}'
   36 var_decls: var_decls • var_decl ';'

    TYPE_NAME    shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 8
    FLOAT2_TYPE  shift, and go to state 9
    FLOAT3_TYPE  shift, and go to state 10
    FLOAT4_TYPE  shift, and go to state 11
    MAT2_TYPE    shift, and go to state 12
    MAT3_TYPE    shift, and go to state 13
    MAT4_TYPE    shift, and go to state 14
    BOOL_TYPE    shift, and go to state 15
    BOOL2_TYPE   shift, and go to state 16
    BOOL3_TYPE   shift, and go to state 17
    BOOL4_TYPE   shift, and go to state 18
    INT_TYPE     shift, and go to state 19
    INT2_TYPE    shift, and go to state 20
    INT3_TYPE    shift, and go to state 21
    INT4_TYPE    shift, and go to state 22
    '}'          shift, and go to state 105

    object_type  go to state 83
    base_type    go to state 37
    var_decl     go to state 106


State 86

   37 var_decls: var_decl • ';'

    ';'  shift, and go to state 107


State 87

   34 struct_footer: IDENTIFIER •

    $default  reduce using rule 34 (struct_footer)


State 88

   30 struct: STRUCT struct_header struct_body struct_footer •

    $default  reduce using rule 30 (struct)


State 89

   23 function_declaration: object_type IDENTIFIER '(' $@2 • arguments ')'

    INSPECYFIER   shift, and go to state 108
    OUTSPECYFIER  shift, and go to state 109

    ')'       reduce using rule 17 (arguments)
    $default  reduce using rule 14 (var_spec)

    var_spec   go to state 110
    arguments  go to state 111


State 90

   69 var_decl: object_type IDENTIFIER semantic annotations • '=' INT
   70         | object_type IDENTIFIER semantic annotations • '=' FLOAT

    '='  shift, and go to state 112


State 91

   19 function_definition: function_declaration semantic '{' $@1 • CODEBODY

    CODEBODY  shift, and go to state 113


State 92

   92 annotation: scalar_type IDENTIFIER • '=' annotation_value ';'

    '='  shift, and go to state 114


State 93

   94 annotations: '<' annotation_list '>' •

    $default  reduce using rule 94 (annotations)


State 94

   86 annotation_list: annotation_list annotation •

    $default  reduce using rule 86 (annotation_list)


State 95

   81 tech: TECHNIQUE IDENTIFIER $@6 annotations '{' • passes '}'

    PASS  shift, and go to state 78

    pass    go to state 79
    passes  go to state 115


State 96

   74 pass: PASS IDENTIFIER • $@4 annotations passstates

    $default  reduce using rule 73 ($@4)

    $@4  go to state 116


State 97

   72 pass: PASS $@3 • annotations passstates

    '<'  shift, and go to state 54

    $default  reduce using rule 93 (annotations)

    annotations  go to state 117


State 98

   77 passes: passes error •

    $default  reduce using rule 77 (passes)


State 99

   79 tech: TECHNIQUE $@5 '{' passes '}' •

    $default  reduce using rule 79 (tech)


State 100

   76 passes: passes pass •

    $default  reduce using rule 76 (passes)


State 101

   27 register_declaration: ':' REGISTER '(' • register_value ')'

    IDENTIFIER  shift, and go to state 118
    INT         shift, and go to state 119

    register_value  go to state 120


State 102

   29 cbuffer: CSTBUFFER IDENTIFIER register_declaration '{' var_decls • '}'
   36 var_decls: var_decls • var_decl ';'

    TYPE_NAME    shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 8
    FLOAT2_TYPE  shift, and go to state 9
    FLOAT3_TYPE  shift, and go to state 10
    FLOAT4_TYPE  shift, and go to state 11
    MAT2_TYPE    shift, and go to state 12
    MAT3_TYPE    shift, and go to state 13
    MAT4_TYPE    shift, and go to state 14
    BOOL_TYPE    shift, and go to state 15
    BOOL2_TYPE   shift, and go to state 16
    BOOL3_TYPE   shift, and go to state 17
    BOOL4_TYPE   shift, and go to state 18
    INT_TYPE     shift, and go to state 19
    INT2_TYPE    shift, and go to state 20
    INT3_TYPE    shift, and go to state 21
    INT4_TYPE    shift, and go to state 22
    '}'          shift, and go to state 121

    object_type  go to state 83
    base_type    go to state 37
    var_decl     go to state 106


State 103

   68 var_decl: object_type IDENTIFIER • semantic
   69         | object_type IDENTIFIER • semantic annotations '=' INT
   70         | object_type IDENTIFIER • semantic annotations '=' FLOAT

    ':'  shift, and go to state 52

    $default  reduce using rule 67 (semantic)

    semantic  go to state 66


State 104

   38 var_decls: struct ';' •

    $default  reduce using rule 38 (var_decls)


State 105

   33 struct_body: '{' var_decls '}' •

    $default  reduce using rule 33 (struct_body)


State 106

   36 var_decls: var_decls var_decl • ';'

    ';'  shift, and go to state 122


State 107

   37 var_decls: var_decl ';' •

    $default  reduce using rule 37 (var_decls)


State 108

   12 var_spec: INSPECYFIER •

    $default  reduce using rule 12 (var_spec)


State 109

   13 var_spec: OUTSPECYFIER •

    $default  reduce using rule 13 (var_spec)


State 110

   15 arguments: var_spec • var_decl
   16          | var_spec • var_decl ',' arguments

    TYPE_NAME    shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 8
    FLOAT2_TYPE  shift, and go to state 9
    FLOAT3_TYPE  shift, and go to state 10
    FLOAT4_TYPE  shift, and go to state 11
    MAT2_TYPE    shift, and go to state 12
    MAT3_TYPE    shift, and go to state 13
    MAT4_TYPE    shift, and go to state 14
    BOOL_TYPE    shift, and go to state 15
    BOOL2_TYPE   shift, and go to state 16
    BOOL3_TYPE   shift, and go to state 17
    BOOL4_TYPE   shift, and go to state 18
    INT_TYPE     shift, and go to state 19
    INT2_TYPE    shift, and go to state 20
    INT3_TYPE    shift, and go to state 21
    INT4_TYPE    shift, and go to state 22

    object_type  go to state 83
    base_type    go to state 37
    var_decl     go to state 123


State 111

   23 function_declaration: object_type IDENTIFIER '(' $@2 arguments • ')'

    ')'  shift, and go to state 124


State 112

   69 var_decl: object_type IDENTIFIER semantic annotations '=' • INT
   70         | object_type IDENTIFIER semantic annotations '=' • FLOAT

    FLOAT  shift, and go to state 125
    INT    shift, and go to state 126


State 113

   19 function_definition: function_declaration semantic '{' $@1 CODEBODY •

    $default  reduce using rule 19 (function_definition)


State 114

   92 annotation: scalar_type IDENTIFIER '=' • annotation_value ';'

    FLOAT     shift, and go to state 127
    INT       shift, and go to state 128
    STR       shift, and go to state 129
    UNSIGNED  shift, and go to state 130

    annotation_value  go to state 131


State 115

   76 passes: passes • pass
   77       | passes • error
   81 tech: TECHNIQUE IDENTIFIER $@6 annotations '{' passes • '}'

    error  shift, and go to state 98
    PASS   shift, and go to state 78
    '}'    shift, and go to state 132

    pass  go to state 100


State 116

   74 pass: PASS IDENTIFIER $@4 • annotations passstates

    '<'  shift, and go to state 54

    $default  reduce using rule 93 (annotations)

    annotations  go to state 133


State 117

   72 pass: PASS $@3 annotations • passstates

    '{'  shift, and go to state 134

    passstates  go to state 135


State 118

   26 register_value: IDENTIFIER •

    $default  reduce using rule 26 (register_value)


State 119

   25 register_value: INT •

    $default  reduce using rule 25 (register_value)


State 120

   27 register_declaration: ':' REGISTER '(' register_value • ')'

    ')'  shift, and go to state 136


State 121

   29 cbuffer: CSTBUFFER IDENTIFIER register_declaration '{' var_decls '}' •

    $default  reduce using rule 29 (cbuffer)


State 122

   36 var_decls: var_decls var_decl ';' •

    $default  reduce using rule 36 (var_decls)


State 123

   15 arguments: var_spec var_decl •
   16          | var_spec var_decl • ',' arguments

    ','  shift, and go to state 137

    $default  reduce using rule 15 (arguments)


State 124

   23 function_declaration: object_type IDENTIFIER '(' $@2 arguments ')' •

    $default  reduce using rule 23 (function_declaration)


State 125

   70 var_decl: object_type IDENTIFIER semantic annotations '=' FLOAT •

    $default  reduce using rule 70 (var_decl)


State 126

   69 var_decl: object_type IDENTIFIER semantic annotations '=' INT •

    $default  reduce using rule 69 (var_decl)


State 127

   88 annotation_value: FLOAT •

    $default  reduce using rule 88 (annotation_value)


State 128

   89 annotation_value: INT •

    $default  reduce using rule 89 (annotation_value)


State 129

   90 annotation_value: STR •

    $default  reduce using rule 90 (annotation_value)


State 130

   91 annotation_value: UNSIGNED •

    $default  reduce using rule 91 (annotation_value)


State 131

   92 annotation: scalar_type IDENTIFIER '=' annotation_value • ';'

    ';'  shift, and go to state 138


State 132

   81 tech: TECHNIQUE IDENTIFIER $@6 annotations '{' passes '}' •

    $default  reduce using rule 81 (tech)


State 133

   74 pass: PASS IDENTIFIER $@4 annotations • passstates

    '{'  shift, and go to state 134

    passstates  go to state 139


State 134

   50 passstates: '{' • shader_assignments '}'

    VERTEXPROGRAM    shift, and go to state 140
    FRAGMENTPROGRAM  shift, and go to state 141
    GEOMETRYPROGRAM  shift, and go to state 142

    shader_type         go to state 143
    shader_assignment   go to state 144
    shader_assignments  go to state 145


State 135

   72 pass: PASS $@3 annotations passstates •

    $default  reduce using rule 72 (pass)


State 136

   27 register_declaration: ':' REGISTER '(' register_value ')' •

    $default  reduce using rule 27 (register_declaration)


State 137

   16 arguments: var_spec var_decl ',' • arguments

    INSPECYFIER   shift, and go to state 108
    OUTSPECYFIER  shift, and go to state 109

    ')'       reduce using rule 17 (arguments)
    $default  reduce using rule 14 (var_spec)

    var_spec   go to state 110
    arguments  go to state 146


State 138

   92 annotation: scalar_type IDENTIFIER '=' annotation_value ';' •

    $default  reduce using rule 92 (annotation)


State 139

   74 pass: PASS IDENTIFIER $@4 annotations passstates •

    $default  reduce using rule 74 (pass)


State 140

   44 shader_type: VERTEXPROGRAM •

    $default  reduce using rule 44 (shader_type)


State 141

   46 shader_type: FRAGMENTPROGRAM •

    $default  reduce using rule 46 (shader_type)


State 142

   45 shader_type: GEOMETRYPROGRAM •

    $default  reduce using rule 45 (shader_type)


State 143

   47 shader_assignment: shader_type • '=' IDENTIFIER

    '='  shift, and go to state 147


State 144

   48 shader_assignments: shader_assignment •

    $default  reduce using rule 48 (shader_assignments)


State 145

   49 shader_assignments: shader_assignments • shader_assignment
   50 passstates: '{' shader_assignments • '}'

    VERTEXPROGRAM    shift, and go to state 140
    FRAGMENTPROGRAM  shift, and go to state 141
    GEOMETRYPROGRAM  shift, and go to state 142
    '}'              shift, and go to state 148

    shader_type        go to state 143
    shader_assignment  go to state 149


State 146

   16 arguments: var_spec var_decl ',' arguments •

    $default  reduce using rule 16 (arguments)


State 147

   47 shader_assignment: shader_type '=' • IDENTIFIER

    IDENTIFIER  shift, and go to state 150


State 148

   50 passstates: '{' shader_assignments '}' •

    $default  reduce using rule 50 (passstates)


State 149

   49 shader_assignments: shader_assignments shader_assignment •

    $default  reduce using rule 49 (shader_assignments)


State 150

   47 shader_assignment: shader_type '=' IDENTIFIER •

    $default  reduce using rule 47 (shader_assignment)
