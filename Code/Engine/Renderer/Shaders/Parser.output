Nonterminals useless in grammar

    value_list


Terminals unused in grammar

    TRUE
    FALSE
    BOOL
    VOID_TYPE
    HIGHP
    MEDIUMP
    LOWP
    UNIFORM
    TEXTURE1D_TYPE
    TEXTURE2DSHADOW_TYPE
    TEXTURE2DRECT_TYPE
    TEXTURE3D_TYPE
    TEXTURECUBE_TYPE
    SAMPLER1D_TYPE
    SAMPLER2D_TYPE
    SAMPLER2DSHADOW_TYPE
    SAMPLER2DRECT_TYPE
    SAMPLER3D_TYPE
    SAMPLERCUBE_TYPE
    EXTENSION
    SEPARATE_SHADER
    HULLPROGRAM
    EVALPROGRAM
    SHDPROFILE
    SAMPLERRESOURCE
    SAMPLERTEXUNIT
    SETSAMPLERSTATE
    SETDSTSTATE
    SETRASTERIZATIONSTATE
    SETCOLORSAMPLESTATE
    IMAGERESOURCE
    IMAGEUNIT
    IMAGEACCESS
    IMAGELAYER
    IMAGELAYERED
    WRITE_ONLY
    READ_ONLY
    READ_WRITE
    VERTEXFORMAT


Rules useless in grammar

  144 value_list: value
  145           | value_list ',' value


State 56 conflicts: 1 shift/reduce
State 80 conflicts: 1 reduce/reduce
State 196 conflicts: 3 shift/reduce
State 227 conflicts: 1 reduce/reduce


Grammar

    0 $accept: input "end of file"

    1 input: ε
    2      | input ';'
    3      | input tech
    4      | input hlsl
    5      | input var_decl
    6      | input shader_resource
    7      | input function_definition
    8      | input function_declaration
    9      | input fatal_error
   10      | input struct
   11      | input error

   12 var_spec: INSPECYFIER
   13         | OUTSPECYFIER
   14         | ε

   15 arguments: var_spec var_decl
   16          | var_spec var_decl ',' arguments
   17          | ε

   18 $@1: ε

   19 function_definition: function_declaration semantic '{' $@1 CODEBODY

   20 object_type: TYPE_NAME
   21            | base_type

   22 $@2: ε

   23 function_declaration: object_type IDENTIFIER '(' $@2 arguments ')'

   24 fatal_error: FATALERROR

   25 register_value: INT
   26               | IDENTIFIER

   27 register_declaration: ':' REGISTER '(' register_value ')'
   28                     | ε

   29 cbuffer: CSTBUFFER IDENTIFIER register_declaration '{' var_decls '}'

   30 template_parameter: '<' object_type '>'

   31 cbuffer: CONSTANTBUFFER template_parameter IDENTIFIER register_declaration

   32 struct: STRUCT struct_header struct_body struct_footer

   33 struct_header: IDENTIFIER
   34              | ε

   35 struct_body: '{' var_decls '}'

   36 struct_footer: IDENTIFIER
   37              | ε

   38 var_decls: var_decls var_decl ';'
   39          | var_decl ';'
   40          | struct ';'

   41 shader_resource: cbuffer
   42                | texture2d
   43                | sampler_state

   44 resource_initializer: ε
   45                     | '=' IDENTIFIER

   46 texture2d: TEXTURE2D_TYPE IDENTIFIER register_declaration resource_initializer

   47 sampler_state: SAMPLERSTATE IDENTIFIER register_declaration resource_initializer

   48 shader_type: VERTEXPROGRAM
   49            | GEOMETRYPROGRAM
   50            | FRAGMENTPROGRAM

   51 shader_assignment_shader: direct_declarator
   52                         | IDENTIFIER

   53 shader_assignment: shader_type '=' shader_assignment_shader ';'

   54 shader_assignments: shader_assignment
   55                   | shader_assignments shader_assignment
   56                   | ε

   57 passstates: '{' shader_assignments '}'

   58 base_type: FLOAT_TYPE
   59          | FLOAT2_TYPE
   60          | FLOAT3_TYPE
   61          | FLOAT4_TYPE
   62          | INT_TYPE
   63          | INT2_TYPE
   64          | INT3_TYPE
   65          | INT4_TYPE
   66          | BOOL_TYPE
   67          | BOOL2_TYPE
   68          | BOOL3_TYPE
   69          | BOOL4_TYPE
   70          | MAT2_TYPE
   71          | MAT2x4_TYPE
   72          | MAT3_TYPE
   73          | MAT34_TYPE
   74          | MAT4_TYPE

   75 primary_expression: IDENTIFIER
   76                   | INT
   77                   | FLOAT
   78                   | '(' postfix_expression ')'

   79 postfix_expression: primary_expression
   80                   | postfix_expression '[' postfix_expression ']'
   81                   | postfix_expression '(' ')'
   82                   | postfix_expression '.' IDENTIFIER

   83 declarator: direct_declarator

   84 constant_expression: postfix_expression

   85 parameter_type_list: var_decls

   86 identifier_list: IDENTIFIER
   87                | identifier_list ',' IDENTIFIER

   88 direct_declarator: IDENTIFIER
   89                  | '(' declarator ')'
   90                  | direct_declarator '[' constant_expression ']'
   91                  | direct_declarator '[' ']'
   92                  | direct_declarator '(' parameter_type_list ')'
   93                  | direct_declarator '(' identifier_list ')'
   94                  | direct_declarator '(' ')'

   95 semantic: ':' IDENTIFIER
   96         | ε

   97 value: INT
   98      | FLOAT

   99 basic_type_constructor: FLOAT_TYPE '(' value ')'
  100                       | INT_TYPE '(' value ')'
  101                       | FLOAT2_TYPE '(' value ',' value ')'
  102                       | FLOAT3_TYPE '(' value ',' value ',' value ')'
  103                       | FLOAT4_TYPE '(' value ',' value ',' value ',' value ')'

  104 type_constructor: basic_type_constructor

  105 var_decl: object_type direct_declarator semantic
  106         | object_type direct_declarator semantic annotations '=' type_constructor
  107         | object_type direct_declarator semantic annotations '=' value
  108         | object_type direct_declarator semantic annotations ';'

  109 $@3: ε

  110 pass: PASS $@3 annotations passstates

  111 $@4: ε

  112 pass: PASS IDENTIFIER $@4 annotations passstates

  113 passes: pass
  114       | passes pass
  115       | passes error

  116 $@5: ε

  117 tech: TECHNIQUE $@5 '{' passes '}'

  118 $@6: ε

  119 tech: TECHNIQUE IDENTIFIER $@6 annotations '{' passes '}'

  120 STRING_LIST: STR
  121            | STRING_LIST STR

  122 scalar_type: INT_TYPE
  123            | FLOAT_TYPE
  124            | UNSIGNED
  125            | STRING_TYPE

  126 annotation_list: annotation_list annotation
  127                | annotation

  128 annotation_value: FLOAT
  129                 | INT
  130                 | STRING_LIST
  131                 | UNSIGNED
  132                 | IDENTIFIER

  133 annotation_header: scalar_type IDENTIFIER
  134                  | REGISTER

  135 annotation_base: annotation_header '=' annotation_value

  136 annotation: annotation_base
  137           | annotation_base ';'

  138 annotations: ε
  139            | '<' annotation_list '>'

  140 hlsl_header: HLSL11SHADER IDENTIFIER
  141            | HLSL11SHADER

  142 hlsl: shader_header '{' CODEBODY

  143 shader_header: hlsl_header annotations


Terminals, with rules where they appear

    "end of file" (0) 0
    '(' (40) 23 27 78 81 89 92 93 94 99 100 101 102 103
    ')' (41) 23 27 78 81 89 92 93 94 99 100 101 102 103
    ',' (44) 16 87 101 102 103
    '.' (46) 82
    ':' (58) 27 95
    ';' (59) 2 38 39 40 53 108 137
    '<' (60) 30 139
    '=' (61) 45 53 106 107 135
    '>' (62) 30 139
    '[' (91) 80 90 91
    ']' (93) 80 90 91
    '{' (123) 19 29 35 57 117 119 142
    '}' (125) 29 35 57 117 119
    error (256) 11 115
    TYPE_NAME <std::string> (258) 20
    IDENTIFIER <std::string> (259) 23 26 29 31 33 36 45 46 47 52 75 82 86 87 88 95 112 119 132 133 140
    TRUE <bool> (260)
    FALSE <bool> (261)
    FLOAT <float> (262) 77 98 128
    INT <int> (263) 25 76 97 129
    BOOL <bool> (264)
    STR <std::string> (265) 120 121
    HLSL11SHADER (266) 140 141
    TECHNIQUE (267) 117 119
    PASS (268) 110 112
    CODEBODY <std::string> (269) 19 142
    STRING_TYPE (270) 125
    VOID_TYPE (271)
    UNSIGNED (272) 124 131
    HIGHP (273)
    MEDIUMP (274)
    LOWP (275)
    UNIFORM (276)
    CSTBUFFER (277) 29
    CONSTANTBUFFER (278) 31
    FLOAT_TYPE (279) 58 99 123
    FLOAT2_TYPE (280) 59 101
    FLOAT3_TYPE (281) 60 102
    FLOAT4_TYPE (282) 61 103
    MAT2_TYPE (283) 70
    MAT2x4_TYPE (284) 71
    MAT3_TYPE (285) 72
    MAT34_TYPE (286) 73
    MAT4_TYPE (287) 74
    BOOL_TYPE (288) 66
    BOOL2_TYPE (289) 67
    BOOL3_TYPE (290) 68
    BOOL4_TYPE (291) 69
    INT_TYPE (292) 62 100 122
    INT2_TYPE (293) 63
    INT3_TYPE (294) 64
    INT4_TYPE (295) 65
    TEXTURE1D_TYPE (296)
    TEXTURE2D_TYPE (297) 46
    TEXTURE2DSHADOW_TYPE (298)
    TEXTURE2DRECT_TYPE (299)
    TEXTURE3D_TYPE (300)
    TEXTURECUBE_TYPE (301)
    SAMPLER1D_TYPE (302)
    SAMPLER2D_TYPE (303)
    SAMPLER2DSHADOW_TYPE (304)
    SAMPLER2DRECT_TYPE (305)
    SAMPLER3D_TYPE (306)
    SAMPLERCUBE_TYPE (307)
    SAMPLERSTATE (308) 47
    EXTENSION (309)
    SEPARATE_SHADER (310)
    VERTEXPROGRAM <IShader::Type> (311) 48
    FRAGMENTPROGRAM <IShader::Type> (312) 50
    GEOMETRYPROGRAM <IShader::Type> (313) 49
    HULLPROGRAM <IShader::Type> (314)
    EVALPROGRAM <IShader::Type> (315)
    SHDPROFILE (316)
    SAMPLERRESOURCE (317)
    SAMPLERTEXUNIT (318)
    SETSAMPLERSTATE (319)
    SETDSTSTATE (320)
    SETRASTERIZATIONSTATE (321)
    SETCOLORSAMPLESTATE (322)
    IMAGERESOURCE (323)
    IMAGEUNIT (324)
    IMAGEACCESS (325)
    IMAGELAYER (326)
    IMAGELAYERED (327)
    WRITE_ONLY (328)
    READ_ONLY (329)
    READ_WRITE (330)
    VERTEXFORMAT (331)
    REGISTER (332) 27 134
    FATALERROR (333) 24
    STRUCT (334) 32
    INSPECYFIER (335) 12
    OUTSPECYFIER (336) 13


Nonterminals, with rules where they appear

    $accept (95)
        on left: 0
    input (96)
        on left: 1 2 3 4 5 6 7 8 9 10 11
        on right: 0 2 3 4 5 6 7 8 9 10 11
    var_spec (97)
        on left: 12 13 14
        on right: 15 16
    arguments (98)
        on left: 15 16 17
        on right: 16 23
    function_definition (99)
        on left: 19
        on right: 7
    $@1 (100)
        on left: 18
        on right: 19
    object_type (101)
        on left: 20 21
        on right: 23 30 105 106 107 108
    function_declaration (102)
        on left: 23
        on right: 8 19
    $@2 (103)
        on left: 22
        on right: 23
    fatal_error (104)
        on left: 24
        on right: 9
    register_value (105)
        on left: 25 26
        on right: 27
    register_declaration (106)
        on left: 27 28
        on right: 29 31 46 47
    cbuffer (107)
        on left: 29 31
        on right: 41
    template_parameter (108)
        on left: 30
        on right: 31
    struct (109)
        on left: 32
        on right: 10 40
    struct_header <std::string> (110)
        on left: 33 34
        on right: 32
    struct_body (111)
        on left: 35
        on right: 32
    struct_footer <std::string> (112)
        on left: 36 37
        on right: 32
    var_decls (113)
        on left: 38 39 40
        on right: 29 35 38 85
    shader_resource (114)
        on left: 41 42 43
        on right: 6
    resource_initializer (115)
        on left: 44 45
        on right: 46 47
    texture2d (116)
        on left: 46
        on right: 42
    sampler_state (117)
        on left: 47
        on right: 43
    shader_type <IShader::Type> (118)
        on left: 48 49 50
        on right: 53
    shader_assignment_shader (119)
        on left: 51 52
        on right: 53
    shader_assignment <std::string> (120)
        on left: 53
        on right: 54 55
    shader_assignments (121)
        on left: 54 55 56
        on right: 55 57
    passstates (122)
        on left: 57
        on right: 110 112
    base_type <nvFX::IUniform::Type> (123)
        on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
        on right: 21
    primary_expression (124)
        on left: 75 76 77 78
        on right: 79
    postfix_expression (125)
        on left: 79 80 81 82
        on right: 78 80 81 82 84
    declarator (126)
        on left: 83
        on right: 89
    constant_expression (127)
        on left: 84
        on right: 90
    parameter_type_list (128)
        on left: 85
        on right: 92
    identifier_list (129)
        on left: 86 87
        on right: 87 93
    direct_declarator (130)
        on left: 88 89 90 91 92 93 94
        on right: 51 83 90 91 92 93 94 105 106 107 108
    semantic (131)
        on left: 95 96
        on right: 19 105 106 107 108
    value (132)
        on left: 97 98
        on right: 99 100 101 102 103 107
    basic_type_constructor (133)
        on left: 99 100 101 102 103
        on right: 104
    type_constructor (134)
        on left: 104
        on right: 106
    var_decl (135)
        on left: 105 106 107 108
        on right: 5 15 16 38 39
    pass (136)
        on left: 110 112
        on right: 113 114
    $@3 (137)
        on left: 109
        on right: 110
    $@4 (138)
        on left: 111
        on right: 112
    passes (139)
        on left: 113 114 115
        on right: 114 115 117 119
    tech (140)
        on left: 117 119
        on right: 3
    $@5 (141)
        on left: 116
        on right: 117
    $@6 (142)
        on left: 118
        on right: 119
    STRING_LIST (143)
        on left: 120 121
        on right: 121 130
    scalar_type (144)
        on left: 122 123 124 125
        on right: 133
    annotation_list (145)
        on left: 126 127
        on right: 126 139
    annotation_value (146)
        on left: 128 129 130 131 132
        on right: 135
    annotation_header (147)
        on left: 133 134
        on right: 135
    annotation_base (148)
        on left: 135
        on right: 136 137
    annotation (149)
        on left: 136 137
        on right: 126 127
    annotations (150)
        on left: 138 139
        on right: 106 107 108 110 112 119 143
    hlsl_header <std::string> (151)
        on left: 140 141
        on right: 143
    hlsl (152)
        on left: 142
        on right: 4
    shader_header <std::string> (153)
        on left: 143
        on right: 142


State 0

    0 $accept: • input "end of file"

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input • "end of file"
    2 input: input • ';'
    3      | input • tech
    4      | input • hlsl
    5      | input • var_decl
    6      | input • shader_resource
    7      | input • function_definition
    8      | input • function_declaration
    9      | input • fatal_error
   10      | input • struct
   11      | input • error

    "end of file"   shift, and go to state 2
    error           shift, and go to state 3
    TYPE_NAME       shift, and go to state 4
    HLSL11SHADER    shift, and go to state 5
    TECHNIQUE       shift, and go to state 6
    CSTBUFFER       shift, and go to state 7
    CONSTANTBUFFER  shift, and go to state 8
    FLOAT_TYPE      shift, and go to state 9
    FLOAT2_TYPE     shift, and go to state 10
    FLOAT3_TYPE     shift, and go to state 11
    FLOAT4_TYPE     shift, and go to state 12
    MAT2_TYPE       shift, and go to state 13
    MAT2x4_TYPE     shift, and go to state 14
    MAT3_TYPE       shift, and go to state 15
    MAT34_TYPE      shift, and go to state 16
    MAT4_TYPE       shift, and go to state 17
    BOOL_TYPE       shift, and go to state 18
    BOOL2_TYPE      shift, and go to state 19
    BOOL3_TYPE      shift, and go to state 20
    BOOL4_TYPE      shift, and go to state 21
    INT_TYPE        shift, and go to state 22
    INT2_TYPE       shift, and go to state 23
    INT3_TYPE       shift, and go to state 24
    INT4_TYPE       shift, and go to state 25
    TEXTURE2D_TYPE  shift, and go to state 26
    SAMPLERSTATE    shift, and go to state 27
    FATALERROR      shift, and go to state 28
    STRUCT          shift, and go to state 29
    ';'             shift, and go to state 30

    function_definition   go to state 31
    object_type           go to state 32
    function_declaration  go to state 33
    fatal_error           go to state 34
    cbuffer               go to state 35
    struct                go to state 36
    shader_resource       go to state 37
    texture2d             go to state 38
    sampler_state         go to state 39
    base_type             go to state 40
    var_decl              go to state 41
    tech                  go to state 42
    hlsl_header           go to state 43
    hlsl                  go to state 44
    shader_header         go to state 45


State 2

    0 $accept: input "end of file" •

    $default  accept


State 3

   11 input: input error •

    $default  reduce using rule 11 (input)


State 4

   20 object_type: TYPE_NAME •

    $default  reduce using rule 20 (object_type)


State 5

  140 hlsl_header: HLSL11SHADER • IDENTIFIER
  141            | HLSL11SHADER •

    IDENTIFIER  shift, and go to state 46

    $default  reduce using rule 141 (hlsl_header)


State 6

  117 tech: TECHNIQUE • $@5 '{' passes '}'
  119     | TECHNIQUE • IDENTIFIER $@6 annotations '{' passes '}'

    IDENTIFIER  shift, and go to state 47

    $default  reduce using rule 116 ($@5)

    $@5  go to state 48


State 7

   29 cbuffer: CSTBUFFER • IDENTIFIER register_declaration '{' var_decls '}'

    IDENTIFIER  shift, and go to state 49


State 8

   31 cbuffer: CONSTANTBUFFER • template_parameter IDENTIFIER register_declaration

    '<'  shift, and go to state 50

    template_parameter  go to state 51


State 9

   58 base_type: FLOAT_TYPE •

    $default  reduce using rule 58 (base_type)


State 10

   59 base_type: FLOAT2_TYPE •

    $default  reduce using rule 59 (base_type)


State 11

   60 base_type: FLOAT3_TYPE •

    $default  reduce using rule 60 (base_type)


State 12

   61 base_type: FLOAT4_TYPE •

    $default  reduce using rule 61 (base_type)


State 13

   70 base_type: MAT2_TYPE •

    $default  reduce using rule 70 (base_type)


State 14

   71 base_type: MAT2x4_TYPE •

    $default  reduce using rule 71 (base_type)


State 15

   72 base_type: MAT3_TYPE •

    $default  reduce using rule 72 (base_type)


State 16

   73 base_type: MAT34_TYPE •

    $default  reduce using rule 73 (base_type)


State 17

   74 base_type: MAT4_TYPE •

    $default  reduce using rule 74 (base_type)


State 18

   66 base_type: BOOL_TYPE •

    $default  reduce using rule 66 (base_type)


State 19

   67 base_type: BOOL2_TYPE •

    $default  reduce using rule 67 (base_type)


State 20

   68 base_type: BOOL3_TYPE •

    $default  reduce using rule 68 (base_type)


State 21

   69 base_type: BOOL4_TYPE •

    $default  reduce using rule 69 (base_type)


State 22

   62 base_type: INT_TYPE •

    $default  reduce using rule 62 (base_type)


State 23

   63 base_type: INT2_TYPE •

    $default  reduce using rule 63 (base_type)


State 24

   64 base_type: INT3_TYPE •

    $default  reduce using rule 64 (base_type)


State 25

   65 base_type: INT4_TYPE •

    $default  reduce using rule 65 (base_type)


State 26

   46 texture2d: TEXTURE2D_TYPE • IDENTIFIER register_declaration resource_initializer

    IDENTIFIER  shift, and go to state 52


State 27

   47 sampler_state: SAMPLERSTATE • IDENTIFIER register_declaration resource_initializer

    IDENTIFIER  shift, and go to state 53


State 28

   24 fatal_error: FATALERROR •

    $default  reduce using rule 24 (fatal_error)


State 29

   32 struct: STRUCT • struct_header struct_body struct_footer

    IDENTIFIER  shift, and go to state 54

    $default  reduce using rule 34 (struct_header)

    struct_header  go to state 55


State 30

    2 input: input ';' •

    $default  reduce using rule 2 (input)


State 31

    7 input: input function_definition •

    $default  reduce using rule 7 (input)


State 32

   23 function_declaration: object_type • IDENTIFIER '(' $@2 arguments ')'
  105 var_decl: object_type • direct_declarator semantic
  106         | object_type • direct_declarator semantic annotations '=' type_constructor
  107         | object_type • direct_declarator semantic annotations '=' value
  108         | object_type • direct_declarator semantic annotations ';'

    IDENTIFIER  shift, and go to state 56
    '('         shift, and go to state 57

    direct_declarator  go to state 58


State 33

    8 input: input function_declaration •
   19 function_definition: function_declaration • semantic '{' $@1 CODEBODY

    ':'  shift, and go to state 59

    '{'       reduce using rule 96 (semantic)
    $default  reduce using rule 8 (input)

    semantic  go to state 60


State 34

    9 input: input fatal_error •

    $default  reduce using rule 9 (input)


State 35

   41 shader_resource: cbuffer •

    $default  reduce using rule 41 (shader_resource)


State 36

   10 input: input struct •

    $default  reduce using rule 10 (input)


State 37

    6 input: input shader_resource •

    $default  reduce using rule 6 (input)


State 38

   42 shader_resource: texture2d •

    $default  reduce using rule 42 (shader_resource)


State 39

   43 shader_resource: sampler_state •

    $default  reduce using rule 43 (shader_resource)


State 40

   21 object_type: base_type •

    $default  reduce using rule 21 (object_type)


State 41

    5 input: input var_decl •

    $default  reduce using rule 5 (input)


State 42

    3 input: input tech •

    $default  reduce using rule 3 (input)


State 43

  143 shader_header: hlsl_header • annotations

    '<'  shift, and go to state 61

    $default  reduce using rule 138 (annotations)

    annotations  go to state 62


State 44

    4 input: input hlsl •

    $default  reduce using rule 4 (input)


State 45

  142 hlsl: shader_header • '{' CODEBODY

    '{'  shift, and go to state 63


State 46

  140 hlsl_header: HLSL11SHADER IDENTIFIER •

    $default  reduce using rule 140 (hlsl_header)


State 47

  119 tech: TECHNIQUE IDENTIFIER • $@6 annotations '{' passes '}'

    $default  reduce using rule 118 ($@6)

    $@6  go to state 64


State 48

  117 tech: TECHNIQUE $@5 • '{' passes '}'

    '{'  shift, and go to state 65


State 49

   29 cbuffer: CSTBUFFER IDENTIFIER • register_declaration '{' var_decls '}'

    ':'  shift, and go to state 66

    $default  reduce using rule 28 (register_declaration)

    register_declaration  go to state 67


State 50

   30 template_parameter: '<' • object_type '>'

    TYPE_NAME    shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 9
    FLOAT2_TYPE  shift, and go to state 10
    FLOAT3_TYPE  shift, and go to state 11
    FLOAT4_TYPE  shift, and go to state 12
    MAT2_TYPE    shift, and go to state 13
    MAT2x4_TYPE  shift, and go to state 14
    MAT3_TYPE    shift, and go to state 15
    MAT34_TYPE   shift, and go to state 16
    MAT4_TYPE    shift, and go to state 17
    BOOL_TYPE    shift, and go to state 18
    BOOL2_TYPE   shift, and go to state 19
    BOOL3_TYPE   shift, and go to state 20
    BOOL4_TYPE   shift, and go to state 21
    INT_TYPE     shift, and go to state 22
    INT2_TYPE    shift, and go to state 23
    INT3_TYPE    shift, and go to state 24
    INT4_TYPE    shift, and go to state 25

    object_type  go to state 68
    base_type    go to state 40


State 51

   31 cbuffer: CONSTANTBUFFER template_parameter • IDENTIFIER register_declaration

    IDENTIFIER  shift, and go to state 69


State 52

   46 texture2d: TEXTURE2D_TYPE IDENTIFIER • register_declaration resource_initializer

    ':'  shift, and go to state 66

    $default  reduce using rule 28 (register_declaration)

    register_declaration  go to state 70


State 53

   47 sampler_state: SAMPLERSTATE IDENTIFIER • register_declaration resource_initializer

    ':'  shift, and go to state 66

    $default  reduce using rule 28 (register_declaration)

    register_declaration  go to state 71


State 54

   33 struct_header: IDENTIFIER •

    $default  reduce using rule 33 (struct_header)


State 55

   32 struct: STRUCT struct_header • struct_body struct_footer

    '{'  shift, and go to state 72

    struct_body  go to state 73


State 56

   23 function_declaration: object_type IDENTIFIER • '(' $@2 arguments ')'
   88 direct_declarator: IDENTIFIER •

    '('  shift, and go to state 74

    '('       [reduce using rule 88 (direct_declarator)]
    $default  reduce using rule 88 (direct_declarator)

    shift/reduce conflict on token '(':
       88 direct_declarator: IDENTIFIER •
       23 function_declaration: object_type IDENTIFIER • '(' $@2 arguments ')'
      Example: input object_type IDENTIFIER • '(' ')'
      Shift derivation
        input
        ↳ 8: input function_declaration
                   ↳ 23: object_type IDENTIFIER • '(' $@2     arguments ')'
                                                      ↳ 23: ε ↳ 23: ε
      Reduce derivation
        input
        ↳ 5: input var_decl
                   ↳ 105: object_type direct_declarator                semantic
                                      ↳ 94: direct_declarator  '(' ')' ↳ 105: ε
                                            ↳ 88: IDENTIFIER •



State 57

   89 direct_declarator: '(' • declarator ')'

    IDENTIFIER  shift, and go to state 75
    '('         shift, and go to state 57

    declarator         go to state 76
    direct_declarator  go to state 77


State 58

   90 direct_declarator: direct_declarator • '[' constant_expression ']'
   91                  | direct_declarator • '[' ']'
   92                  | direct_declarator • '(' parameter_type_list ')'
   93                  | direct_declarator • '(' identifier_list ')'
   94                  | direct_declarator • '(' ')'
  105 var_decl: object_type direct_declarator • semantic
  106         | object_type direct_declarator • semantic annotations '=' type_constructor
  107         | object_type direct_declarator • semantic annotations '=' value
  108         | object_type direct_declarator • semantic annotations ';'

    '('  shift, and go to state 78
    ':'  shift, and go to state 59
    '['  shift, and go to state 79

    $default  reduce using rule 96 (semantic)

    semantic  go to state 80


State 59

   95 semantic: ':' • IDENTIFIER

    IDENTIFIER  shift, and go to state 81


State 60

   19 function_definition: function_declaration semantic • '{' $@1 CODEBODY

    '{'  shift, and go to state 82


State 61

  139 annotations: '<' • annotation_list '>'

    STRING_TYPE  shift, and go to state 83
    UNSIGNED     shift, and go to state 84
    FLOAT_TYPE   shift, and go to state 85
    INT_TYPE     shift, and go to state 86
    REGISTER     shift, and go to state 87

    scalar_type        go to state 88
    annotation_list    go to state 89
    annotation_header  go to state 90
    annotation_base    go to state 91
    annotation         go to state 92


State 62

  143 shader_header: hlsl_header annotations •

    $default  reduce using rule 143 (shader_header)


State 63

  142 hlsl: shader_header '{' • CODEBODY

    CODEBODY  shift, and go to state 93


State 64

  119 tech: TECHNIQUE IDENTIFIER $@6 • annotations '{' passes '}'

    '<'  shift, and go to state 61

    $default  reduce using rule 138 (annotations)

    annotations  go to state 94


State 65

  117 tech: TECHNIQUE $@5 '{' • passes '}'

    PASS  shift, and go to state 95

    pass    go to state 96
    passes  go to state 97


State 66

   27 register_declaration: ':' • REGISTER '(' register_value ')'

    REGISTER  shift, and go to state 98


State 67

   29 cbuffer: CSTBUFFER IDENTIFIER register_declaration • '{' var_decls '}'

    '{'  shift, and go to state 99


State 68

   30 template_parameter: '<' object_type • '>'

    '>'  shift, and go to state 100


State 69

   31 cbuffer: CONSTANTBUFFER template_parameter IDENTIFIER • register_declaration

    ':'  shift, and go to state 66

    $default  reduce using rule 28 (register_declaration)

    register_declaration  go to state 101


State 70

   46 texture2d: TEXTURE2D_TYPE IDENTIFIER register_declaration • resource_initializer

    '='  shift, and go to state 102

    $default  reduce using rule 44 (resource_initializer)

    resource_initializer  go to state 103


State 71

   47 sampler_state: SAMPLERSTATE IDENTIFIER register_declaration • resource_initializer

    '='  shift, and go to state 102

    $default  reduce using rule 44 (resource_initializer)

    resource_initializer  go to state 104


State 72

   35 struct_body: '{' • var_decls '}'

    TYPE_NAME    shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 9
    FLOAT2_TYPE  shift, and go to state 10
    FLOAT3_TYPE  shift, and go to state 11
    FLOAT4_TYPE  shift, and go to state 12
    MAT2_TYPE    shift, and go to state 13
    MAT2x4_TYPE  shift, and go to state 14
    MAT3_TYPE    shift, and go to state 15
    MAT34_TYPE   shift, and go to state 16
    MAT4_TYPE    shift, and go to state 17
    BOOL_TYPE    shift, and go to state 18
    BOOL2_TYPE   shift, and go to state 19
    BOOL3_TYPE   shift, and go to state 20
    BOOL4_TYPE   shift, and go to state 21
    INT_TYPE     shift, and go to state 22
    INT2_TYPE    shift, and go to state 23
    INT3_TYPE    shift, and go to state 24
    INT4_TYPE    shift, and go to state 25
    STRUCT       shift, and go to state 29

    object_type  go to state 105
    struct       go to state 106
    var_decls    go to state 107
    base_type    go to state 40
    var_decl     go to state 108


State 73

   32 struct: STRUCT struct_header struct_body • struct_footer

    IDENTIFIER  shift, and go to state 109

    $default  reduce using rule 37 (struct_footer)

    struct_footer  go to state 110


State 74

   23 function_declaration: object_type IDENTIFIER '(' • $@2 arguments ')'

    $default  reduce using rule 22 ($@2)

    $@2  go to state 111


State 75

   88 direct_declarator: IDENTIFIER •

    $default  reduce using rule 88 (direct_declarator)


State 76

   89 direct_declarator: '(' declarator • ')'

    ')'  shift, and go to state 112


State 77

   83 declarator: direct_declarator •
   90 direct_declarator: direct_declarator • '[' constant_expression ']'
   91                  | direct_declarator • '[' ']'
   92                  | direct_declarator • '(' parameter_type_list ')'
   93                  | direct_declarator • '(' identifier_list ')'
   94                  | direct_declarator • '(' ')'

    '('  shift, and go to state 78
    '['  shift, and go to state 79

    $default  reduce using rule 83 (declarator)


State 78

   92 direct_declarator: direct_declarator '(' • parameter_type_list ')'
   93                  | direct_declarator '(' • identifier_list ')'
   94                  | direct_declarator '(' • ')'

    TYPE_NAME    shift, and go to state 4
    IDENTIFIER   shift, and go to state 113
    FLOAT_TYPE   shift, and go to state 9
    FLOAT2_TYPE  shift, and go to state 10
    FLOAT3_TYPE  shift, and go to state 11
    FLOAT4_TYPE  shift, and go to state 12
    MAT2_TYPE    shift, and go to state 13
    MAT2x4_TYPE  shift, and go to state 14
    MAT3_TYPE    shift, and go to state 15
    MAT34_TYPE   shift, and go to state 16
    MAT4_TYPE    shift, and go to state 17
    BOOL_TYPE    shift, and go to state 18
    BOOL2_TYPE   shift, and go to state 19
    BOOL3_TYPE   shift, and go to state 20
    BOOL4_TYPE   shift, and go to state 21
    INT_TYPE     shift, and go to state 22
    INT2_TYPE    shift, and go to state 23
    INT3_TYPE    shift, and go to state 24
    INT4_TYPE    shift, and go to state 25
    STRUCT       shift, and go to state 29
    ')'          shift, and go to state 114

    object_type          go to state 105
    struct               go to state 106
    var_decls            go to state 115
    base_type            go to state 40
    parameter_type_list  go to state 116
    identifier_list      go to state 117
    var_decl             go to state 108


State 79

   90 direct_declarator: direct_declarator '[' • constant_expression ']'
   91                  | direct_declarator '[' • ']'

    IDENTIFIER  shift, and go to state 118
    FLOAT       shift, and go to state 119
    INT         shift, and go to state 120
    '('         shift, and go to state 121
    ']'         shift, and go to state 122

    primary_expression   go to state 123
    postfix_expression   go to state 124
    constant_expression  go to state 125


State 80

  105 var_decl: object_type direct_declarator semantic •
  106         | object_type direct_declarator semantic • annotations '=' type_constructor
  107         | object_type direct_declarator semantic • annotations '=' value
  108         | object_type direct_declarator semantic • annotations ';'

    '<'  shift, and go to state 61

    ';'       reduce using rule 105 (var_decl)
    ';'       [reduce using rule 138 (annotations)]
    '='       reduce using rule 138 (annotations)
    $default  reduce using rule 105 (var_decl)

    annotations  go to state 126

    reduce/reduce conflict on token ';':
      105 var_decl: object_type direct_declarator semantic •
      138 annotations: ε •
      Example: input object_type direct_declarator semantic • ';'
      First reduce derivation
        input
        ↳ 2: input                                                      ';'
             ↳ 5: input var_decl
                        ↳ 105: object_type direct_declarator semantic •
      Second reduce derivation
        input
        ↳ 5: input var_decl
                   ↳ 108: object_type direct_declarator semantic annotations ';'
                                                                 ↳ 138: ε •



State 81

   95 semantic: ':' IDENTIFIER •

    $default  reduce using rule 95 (semantic)


State 82

   19 function_definition: function_declaration semantic '{' • $@1 CODEBODY

    $default  reduce using rule 18 ($@1)

    $@1  go to state 127


State 83

  125 scalar_type: STRING_TYPE •

    $default  reduce using rule 125 (scalar_type)


State 84

  124 scalar_type: UNSIGNED •

    $default  reduce using rule 124 (scalar_type)


State 85

  123 scalar_type: FLOAT_TYPE •

    $default  reduce using rule 123 (scalar_type)


State 86

  122 scalar_type: INT_TYPE •

    $default  reduce using rule 122 (scalar_type)


State 87

  134 annotation_header: REGISTER •

    $default  reduce using rule 134 (annotation_header)


State 88

  133 annotation_header: scalar_type • IDENTIFIER

    IDENTIFIER  shift, and go to state 128


State 89

  126 annotation_list: annotation_list • annotation
  139 annotations: '<' annotation_list • '>'

    STRING_TYPE  shift, and go to state 83
    UNSIGNED     shift, and go to state 84
    FLOAT_TYPE   shift, and go to state 85
    INT_TYPE     shift, and go to state 86
    REGISTER     shift, and go to state 87
    '>'          shift, and go to state 129

    scalar_type        go to state 88
    annotation_header  go to state 90
    annotation_base    go to state 91
    annotation         go to state 130


State 90

  135 annotation_base: annotation_header • '=' annotation_value

    '='  shift, and go to state 131


State 91

  136 annotation: annotation_base •
  137           | annotation_base • ';'

    ';'  shift, and go to state 132

    $default  reduce using rule 136 (annotation)


State 92

  127 annotation_list: annotation •

    $default  reduce using rule 127 (annotation_list)


State 93

  142 hlsl: shader_header '{' CODEBODY •

    $default  reduce using rule 142 (hlsl)


State 94

  119 tech: TECHNIQUE IDENTIFIER $@6 annotations • '{' passes '}'

    '{'  shift, and go to state 133


State 95

  110 pass: PASS • $@3 annotations passstates
  112     | PASS • IDENTIFIER $@4 annotations passstates

    IDENTIFIER  shift, and go to state 134

    $default  reduce using rule 109 ($@3)

    $@3  go to state 135


State 96

  113 passes: pass •

    $default  reduce using rule 113 (passes)


State 97

  114 passes: passes • pass
  115       | passes • error
  117 tech: TECHNIQUE $@5 '{' passes • '}'

    error  shift, and go to state 136
    PASS   shift, and go to state 95
    '}'    shift, and go to state 137

    pass  go to state 138


State 98

   27 register_declaration: ':' REGISTER • '(' register_value ')'

    '('  shift, and go to state 139


State 99

   29 cbuffer: CSTBUFFER IDENTIFIER register_declaration '{' • var_decls '}'

    TYPE_NAME    shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 9
    FLOAT2_TYPE  shift, and go to state 10
    FLOAT3_TYPE  shift, and go to state 11
    FLOAT4_TYPE  shift, and go to state 12
    MAT2_TYPE    shift, and go to state 13
    MAT2x4_TYPE  shift, and go to state 14
    MAT3_TYPE    shift, and go to state 15
    MAT34_TYPE   shift, and go to state 16
    MAT4_TYPE    shift, and go to state 17
    BOOL_TYPE    shift, and go to state 18
    BOOL2_TYPE   shift, and go to state 19
    BOOL3_TYPE   shift, and go to state 20
    BOOL4_TYPE   shift, and go to state 21
    INT_TYPE     shift, and go to state 22
    INT2_TYPE    shift, and go to state 23
    INT3_TYPE    shift, and go to state 24
    INT4_TYPE    shift, and go to state 25
    STRUCT       shift, and go to state 29

    object_type  go to state 105
    struct       go to state 106
    var_decls    go to state 140
    base_type    go to state 40
    var_decl     go to state 108


State 100

   30 template_parameter: '<' object_type '>' •

    $default  reduce using rule 30 (template_parameter)


State 101

   31 cbuffer: CONSTANTBUFFER template_parameter IDENTIFIER register_declaration •

    $default  reduce using rule 31 (cbuffer)


State 102

   45 resource_initializer: '=' • IDENTIFIER

    IDENTIFIER  shift, and go to state 141


State 103

   46 texture2d: TEXTURE2D_TYPE IDENTIFIER register_declaration resource_initializer •

    $default  reduce using rule 46 (texture2d)


State 104

   47 sampler_state: SAMPLERSTATE IDENTIFIER register_declaration resource_initializer •

    $default  reduce using rule 47 (sampler_state)


State 105

  105 var_decl: object_type • direct_declarator semantic
  106         | object_type • direct_declarator semantic annotations '=' type_constructor
  107         | object_type • direct_declarator semantic annotations '=' value
  108         | object_type • direct_declarator semantic annotations ';'

    IDENTIFIER  shift, and go to state 75
    '('         shift, and go to state 57

    direct_declarator  go to state 58


State 106

   40 var_decls: struct • ';'

    ';'  shift, and go to state 142


State 107

   35 struct_body: '{' var_decls • '}'
   38 var_decls: var_decls • var_decl ';'

    TYPE_NAME    shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 9
    FLOAT2_TYPE  shift, and go to state 10
    FLOAT3_TYPE  shift, and go to state 11
    FLOAT4_TYPE  shift, and go to state 12
    MAT2_TYPE    shift, and go to state 13
    MAT2x4_TYPE  shift, and go to state 14
    MAT3_TYPE    shift, and go to state 15
    MAT34_TYPE   shift, and go to state 16
    MAT4_TYPE    shift, and go to state 17
    BOOL_TYPE    shift, and go to state 18
    BOOL2_TYPE   shift, and go to state 19
    BOOL3_TYPE   shift, and go to state 20
    BOOL4_TYPE   shift, and go to state 21
    INT_TYPE     shift, and go to state 22
    INT2_TYPE    shift, and go to state 23
    INT3_TYPE    shift, and go to state 24
    INT4_TYPE    shift, and go to state 25
    '}'          shift, and go to state 143

    object_type  go to state 105
    base_type    go to state 40
    var_decl     go to state 144


State 108

   39 var_decls: var_decl • ';'

    ';'  shift, and go to state 145


State 109

   36 struct_footer: IDENTIFIER •

    $default  reduce using rule 36 (struct_footer)


State 110

   32 struct: STRUCT struct_header struct_body struct_footer •

    $default  reduce using rule 32 (struct)


State 111

   23 function_declaration: object_type IDENTIFIER '(' $@2 • arguments ')'

    INSPECYFIER   shift, and go to state 146
    OUTSPECYFIER  shift, and go to state 147

    ')'       reduce using rule 17 (arguments)
    $default  reduce using rule 14 (var_spec)

    var_spec   go to state 148
    arguments  go to state 149


State 112

   89 direct_declarator: '(' declarator ')' •

    $default  reduce using rule 89 (direct_declarator)


State 113

   86 identifier_list: IDENTIFIER •

    $default  reduce using rule 86 (identifier_list)


State 114

   94 direct_declarator: direct_declarator '(' ')' •

    $default  reduce using rule 94 (direct_declarator)


State 115

   38 var_decls: var_decls • var_decl ';'
   85 parameter_type_list: var_decls •

    TYPE_NAME    shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 9
    FLOAT2_TYPE  shift, and go to state 10
    FLOAT3_TYPE  shift, and go to state 11
    FLOAT4_TYPE  shift, and go to state 12
    MAT2_TYPE    shift, and go to state 13
    MAT2x4_TYPE  shift, and go to state 14
    MAT3_TYPE    shift, and go to state 15
    MAT34_TYPE   shift, and go to state 16
    MAT4_TYPE    shift, and go to state 17
    BOOL_TYPE    shift, and go to state 18
    BOOL2_TYPE   shift, and go to state 19
    BOOL3_TYPE   shift, and go to state 20
    BOOL4_TYPE   shift, and go to state 21
    INT_TYPE     shift, and go to state 22
    INT2_TYPE    shift, and go to state 23
    INT3_TYPE    shift, and go to state 24
    INT4_TYPE    shift, and go to state 25

    $default  reduce using rule 85 (parameter_type_list)

    object_type  go to state 105
    base_type    go to state 40
    var_decl     go to state 144


State 116

   92 direct_declarator: direct_declarator '(' parameter_type_list • ')'

    ')'  shift, and go to state 150


State 117

   87 identifier_list: identifier_list • ',' IDENTIFIER
   93 direct_declarator: direct_declarator '(' identifier_list • ')'

    ','  shift, and go to state 151
    ')'  shift, and go to state 152


State 118

   75 primary_expression: IDENTIFIER •

    $default  reduce using rule 75 (primary_expression)


State 119

   77 primary_expression: FLOAT •

    $default  reduce using rule 77 (primary_expression)


State 120

   76 primary_expression: INT •

    $default  reduce using rule 76 (primary_expression)


State 121

   78 primary_expression: '(' • postfix_expression ')'

    IDENTIFIER  shift, and go to state 118
    FLOAT       shift, and go to state 119
    INT         shift, and go to state 120
    '('         shift, and go to state 121

    primary_expression  go to state 123
    postfix_expression  go to state 153


State 122

   91 direct_declarator: direct_declarator '[' ']' •

    $default  reduce using rule 91 (direct_declarator)


State 123

   79 postfix_expression: primary_expression •

    $default  reduce using rule 79 (postfix_expression)


State 124

   80 postfix_expression: postfix_expression • '[' postfix_expression ']'
   81                   | postfix_expression • '(' ')'
   82                   | postfix_expression • '.' IDENTIFIER
   84 constant_expression: postfix_expression •

    '('  shift, and go to state 154
    '['  shift, and go to state 155
    '.'  shift, and go to state 156

    $default  reduce using rule 84 (constant_expression)


State 125

   90 direct_declarator: direct_declarator '[' constant_expression • ']'

    ']'  shift, and go to state 157


State 126

  106 var_decl: object_type direct_declarator semantic annotations • '=' type_constructor
  107         | object_type direct_declarator semantic annotations • '=' value
  108         | object_type direct_declarator semantic annotations • ';'

    ';'  shift, and go to state 158
    '='  shift, and go to state 159


State 127

   19 function_definition: function_declaration semantic '{' $@1 • CODEBODY

    CODEBODY  shift, and go to state 160


State 128

  133 annotation_header: scalar_type IDENTIFIER •

    $default  reduce using rule 133 (annotation_header)


State 129

  139 annotations: '<' annotation_list '>' •

    $default  reduce using rule 139 (annotations)


State 130

  126 annotation_list: annotation_list annotation •

    $default  reduce using rule 126 (annotation_list)


State 131

  135 annotation_base: annotation_header '=' • annotation_value

    IDENTIFIER  shift, and go to state 161
    FLOAT       shift, and go to state 162
    INT         shift, and go to state 163
    STR         shift, and go to state 164
    UNSIGNED    shift, and go to state 165

    STRING_LIST       go to state 166
    annotation_value  go to state 167


State 132

  137 annotation: annotation_base ';' •

    $default  reduce using rule 137 (annotation)


State 133

  119 tech: TECHNIQUE IDENTIFIER $@6 annotations '{' • passes '}'

    PASS  shift, and go to state 95

    pass    go to state 96
    passes  go to state 168


State 134

  112 pass: PASS IDENTIFIER • $@4 annotations passstates

    $default  reduce using rule 111 ($@4)

    $@4  go to state 169


State 135

  110 pass: PASS $@3 • annotations passstates

    '<'  shift, and go to state 61

    $default  reduce using rule 138 (annotations)

    annotations  go to state 170


State 136

  115 passes: passes error •

    $default  reduce using rule 115 (passes)


State 137

  117 tech: TECHNIQUE $@5 '{' passes '}' •

    $default  reduce using rule 117 (tech)


State 138

  114 passes: passes pass •

    $default  reduce using rule 114 (passes)


State 139

   27 register_declaration: ':' REGISTER '(' • register_value ')'

    IDENTIFIER  shift, and go to state 171
    INT         shift, and go to state 172

    register_value  go to state 173


State 140

   29 cbuffer: CSTBUFFER IDENTIFIER register_declaration '{' var_decls • '}'
   38 var_decls: var_decls • var_decl ';'

    TYPE_NAME    shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 9
    FLOAT2_TYPE  shift, and go to state 10
    FLOAT3_TYPE  shift, and go to state 11
    FLOAT4_TYPE  shift, and go to state 12
    MAT2_TYPE    shift, and go to state 13
    MAT2x4_TYPE  shift, and go to state 14
    MAT3_TYPE    shift, and go to state 15
    MAT34_TYPE   shift, and go to state 16
    MAT4_TYPE    shift, and go to state 17
    BOOL_TYPE    shift, and go to state 18
    BOOL2_TYPE   shift, and go to state 19
    BOOL3_TYPE   shift, and go to state 20
    BOOL4_TYPE   shift, and go to state 21
    INT_TYPE     shift, and go to state 22
    INT2_TYPE    shift, and go to state 23
    INT3_TYPE    shift, and go to state 24
    INT4_TYPE    shift, and go to state 25
    '}'          shift, and go to state 174

    object_type  go to state 105
    base_type    go to state 40
    var_decl     go to state 144


State 141

   45 resource_initializer: '=' IDENTIFIER •

    $default  reduce using rule 45 (resource_initializer)


State 142

   40 var_decls: struct ';' •

    $default  reduce using rule 40 (var_decls)


State 143

   35 struct_body: '{' var_decls '}' •

    $default  reduce using rule 35 (struct_body)


State 144

   38 var_decls: var_decls var_decl • ';'

    ';'  shift, and go to state 175


State 145

   39 var_decls: var_decl ';' •

    $default  reduce using rule 39 (var_decls)


State 146

   12 var_spec: INSPECYFIER •

    $default  reduce using rule 12 (var_spec)


State 147

   13 var_spec: OUTSPECYFIER •

    $default  reduce using rule 13 (var_spec)


State 148

   15 arguments: var_spec • var_decl
   16          | var_spec • var_decl ',' arguments

    TYPE_NAME    shift, and go to state 4
    FLOAT_TYPE   shift, and go to state 9
    FLOAT2_TYPE  shift, and go to state 10
    FLOAT3_TYPE  shift, and go to state 11
    FLOAT4_TYPE  shift, and go to state 12
    MAT2_TYPE    shift, and go to state 13
    MAT2x4_TYPE  shift, and go to state 14
    MAT3_TYPE    shift, and go to state 15
    MAT34_TYPE   shift, and go to state 16
    MAT4_TYPE    shift, and go to state 17
    BOOL_TYPE    shift, and go to state 18
    BOOL2_TYPE   shift, and go to state 19
    BOOL3_TYPE   shift, and go to state 20
    BOOL4_TYPE   shift, and go to state 21
    INT_TYPE     shift, and go to state 22
    INT2_TYPE    shift, and go to state 23
    INT3_TYPE    shift, and go to state 24
    INT4_TYPE    shift, and go to state 25

    object_type  go to state 105
    base_type    go to state 40
    var_decl     go to state 176


State 149

   23 function_declaration: object_type IDENTIFIER '(' $@2 arguments • ')'

    ')'  shift, and go to state 177


State 150

   92 direct_declarator: direct_declarator '(' parameter_type_list ')' •

    $default  reduce using rule 92 (direct_declarator)


State 151

   87 identifier_list: identifier_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 178


State 152

   93 direct_declarator: direct_declarator '(' identifier_list ')' •

    $default  reduce using rule 93 (direct_declarator)


State 153

   78 primary_expression: '(' postfix_expression • ')'
   80 postfix_expression: postfix_expression • '[' postfix_expression ']'
   81                   | postfix_expression • '(' ')'
   82                   | postfix_expression • '.' IDENTIFIER

    '('  shift, and go to state 154
    ')'  shift, and go to state 179
    '['  shift, and go to state 155
    '.'  shift, and go to state 156


State 154

   81 postfix_expression: postfix_expression '(' • ')'

    ')'  shift, and go to state 180


State 155

   80 postfix_expression: postfix_expression '[' • postfix_expression ']'

    IDENTIFIER  shift, and go to state 118
    FLOAT       shift, and go to state 119
    INT         shift, and go to state 120
    '('         shift, and go to state 121

    primary_expression  go to state 123
    postfix_expression  go to state 181


State 156

   82 postfix_expression: postfix_expression '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 182


State 157

   90 direct_declarator: direct_declarator '[' constant_expression ']' •

    $default  reduce using rule 90 (direct_declarator)


State 158

  108 var_decl: object_type direct_declarator semantic annotations ';' •

    $default  reduce using rule 108 (var_decl)


State 159

  106 var_decl: object_type direct_declarator semantic annotations '=' • type_constructor
  107         | object_type direct_declarator semantic annotations '=' • value

    FLOAT        shift, and go to state 183
    INT          shift, and go to state 184
    FLOAT_TYPE   shift, and go to state 185
    FLOAT2_TYPE  shift, and go to state 186
    FLOAT3_TYPE  shift, and go to state 187
    FLOAT4_TYPE  shift, and go to state 188
    INT_TYPE     shift, and go to state 189

    value                   go to state 190
    basic_type_constructor  go to state 191
    type_constructor        go to state 192


State 160

   19 function_definition: function_declaration semantic '{' $@1 CODEBODY •

    $default  reduce using rule 19 (function_definition)


State 161

  132 annotation_value: IDENTIFIER •

    $default  reduce using rule 132 (annotation_value)


State 162

  128 annotation_value: FLOAT •

    $default  reduce using rule 128 (annotation_value)


State 163

  129 annotation_value: INT •

    $default  reduce using rule 129 (annotation_value)


State 164

  120 STRING_LIST: STR •

    $default  reduce using rule 120 (STRING_LIST)


State 165

  131 annotation_value: UNSIGNED •

    $default  reduce using rule 131 (annotation_value)


State 166

  121 STRING_LIST: STRING_LIST • STR
  130 annotation_value: STRING_LIST •

    STR  shift, and go to state 193

    $default  reduce using rule 130 (annotation_value)


State 167

  135 annotation_base: annotation_header '=' annotation_value •

    $default  reduce using rule 135 (annotation_base)


State 168

  114 passes: passes • pass
  115       | passes • error
  119 tech: TECHNIQUE IDENTIFIER $@6 annotations '{' passes • '}'

    error  shift, and go to state 136
    PASS   shift, and go to state 95
    '}'    shift, and go to state 194

    pass  go to state 138


State 169

  112 pass: PASS IDENTIFIER $@4 • annotations passstates

    '<'  shift, and go to state 61

    $default  reduce using rule 138 (annotations)

    annotations  go to state 195


State 170

  110 pass: PASS $@3 annotations • passstates

    '{'  shift, and go to state 196

    passstates  go to state 197


State 171

   26 register_value: IDENTIFIER •

    $default  reduce using rule 26 (register_value)


State 172

   25 register_value: INT •

    $default  reduce using rule 25 (register_value)


State 173

   27 register_declaration: ':' REGISTER '(' register_value • ')'

    ')'  shift, and go to state 198


State 174

   29 cbuffer: CSTBUFFER IDENTIFIER register_declaration '{' var_decls '}' •

    $default  reduce using rule 29 (cbuffer)


State 175

   38 var_decls: var_decls var_decl ';' •

    $default  reduce using rule 38 (var_decls)


State 176

   15 arguments: var_spec var_decl •
   16          | var_spec var_decl • ',' arguments

    ','  shift, and go to state 199

    $default  reduce using rule 15 (arguments)


State 177

   23 function_declaration: object_type IDENTIFIER '(' $@2 arguments ')' •

    $default  reduce using rule 23 (function_declaration)


State 178

   87 identifier_list: identifier_list ',' IDENTIFIER •

    $default  reduce using rule 87 (identifier_list)


State 179

   78 primary_expression: '(' postfix_expression ')' •

    $default  reduce using rule 78 (primary_expression)


State 180

   81 postfix_expression: postfix_expression '(' ')' •

    $default  reduce using rule 81 (postfix_expression)


State 181

   80 postfix_expression: postfix_expression • '[' postfix_expression ']'
   80                   | postfix_expression '[' postfix_expression • ']'
   81                   | postfix_expression • '(' ')'
   82                   | postfix_expression • '.' IDENTIFIER

    '('  shift, and go to state 154
    '['  shift, and go to state 155
    ']'  shift, and go to state 200
    '.'  shift, and go to state 156


State 182

   82 postfix_expression: postfix_expression '.' IDENTIFIER •

    $default  reduce using rule 82 (postfix_expression)


State 183

   98 value: FLOAT •

    $default  reduce using rule 98 (value)


State 184

   97 value: INT •

    $default  reduce using rule 97 (value)


State 185

   99 basic_type_constructor: FLOAT_TYPE • '(' value ')'

    '('  shift, and go to state 201


State 186

  101 basic_type_constructor: FLOAT2_TYPE • '(' value ',' value ')'

    '('  shift, and go to state 202


State 187

  102 basic_type_constructor: FLOAT3_TYPE • '(' value ',' value ',' value ')'

    '('  shift, and go to state 203


State 188

  103 basic_type_constructor: FLOAT4_TYPE • '(' value ',' value ',' value ',' value ')'

    '('  shift, and go to state 204


State 189

  100 basic_type_constructor: INT_TYPE • '(' value ')'

    '('  shift, and go to state 205


State 190

  107 var_decl: object_type direct_declarator semantic annotations '=' value •

    $default  reduce using rule 107 (var_decl)


State 191

  104 type_constructor: basic_type_constructor •

    $default  reduce using rule 104 (type_constructor)


State 192

  106 var_decl: object_type direct_declarator semantic annotations '=' type_constructor •

    $default  reduce using rule 106 (var_decl)


State 193

  121 STRING_LIST: STRING_LIST STR •

    $default  reduce using rule 121 (STRING_LIST)


State 194

  119 tech: TECHNIQUE IDENTIFIER $@6 annotations '{' passes '}' •

    $default  reduce using rule 119 (tech)


State 195

  112 pass: PASS IDENTIFIER $@4 annotations • passstates

    '{'  shift, and go to state 196

    passstates  go to state 206


State 196

   57 passstates: '{' • shader_assignments '}'

    VERTEXPROGRAM    shift, and go to state 207
    FRAGMENTPROGRAM  shift, and go to state 208
    GEOMETRYPROGRAM  shift, and go to state 209

    VERTEXPROGRAM    [reduce using rule 56 (shader_assignments)]
    FRAGMENTPROGRAM  [reduce using rule 56 (shader_assignments)]
    GEOMETRYPROGRAM  [reduce using rule 56 (shader_assignments)]
    $default         reduce using rule 56 (shader_assignments)

    shader_type         go to state 210
    shader_assignment   go to state 211
    shader_assignments  go to state 212

    shift/reduce conflict on token VERTEXPROGRAM:
       56 shader_assignments: ε •
       48 shader_type: • VERTEXPROGRAM
      First example: input TECHNIQUE $@5 '{' PASS $@3 '{' • VERTEXPROGRAM '=' shader_assignment_shader ';' '}' passstates '}' "end of file"
      Shift derivation
        $accept
        ↳ 0: input                                                                                                                                                      "end of file"
             ↳ 3: input tech
                        ↳ 117: TECHNIQUE $@5 '{' passes                                                                                                             '}'
                                                 ↳ 113: pass
                                                        ↳ 110: PASS $@3 passstates                                                                       passstates
                                                                        ↳ 57: '{' shader_assignments                                                 '}'
                                                                                  ↳ 54: shader_assignment
                                                                                        ↳ 53: shader_type           '=' shader_assignment_shader ';'
                                                                                              ↳ 48: • VERTEXPROGRAM
      Second example: input TECHNIQUE $@5 '{' PASS $@3 annotations '{' • VERTEXPROGRAM '=' shader_assignment_shader ';' '}' '}' "end of file"
      Reduce derivation
        $accept
        ↳ 0: input                                                                                                                                                                        "end of file"
             ↳ 3: input tech
                        ↳ 117: TECHNIQUE $@5 '{' passes                                                                                                                               '}'
                                                 ↳ 113: pass
                                                        ↳ 110: PASS $@3 annotations passstates
                                                                                    ↳ 57: '{' shader_assignments                                                                  '}'
                                                                                              ↳ 55: shader_assignments shader_assignment
                                                                                                    ↳ 56: ε •          ↳ 53: shader_type         '=' shader_assignment_shader ';'
                                                                                                                             ↳ 48: VERTEXPROGRAM

    shift/reduce conflict on token GEOMETRYPROGRAM:
       56 shader_assignments: ε •
       49 shader_type: • GEOMETRYPROGRAM
      First example: input TECHNIQUE $@5 '{' PASS $@3 '{' • GEOMETRYPROGRAM '=' shader_assignment_shader ';' '}' passstates '}' "end of file"
      Shift derivation
        $accept
        ↳ 0: input                                                                                                                                                        "end of file"
             ↳ 3: input tech
                        ↳ 117: TECHNIQUE $@5 '{' passes                                                                                                               '}'
                                                 ↳ 113: pass
                                                        ↳ 110: PASS $@3 passstates                                                                         passstates
                                                                        ↳ 57: '{' shader_assignments                                                   '}'
                                                                                  ↳ 54: shader_assignment
                                                                                        ↳ 53: shader_type             '=' shader_assignment_shader ';'
                                                                                              ↳ 49: • GEOMETRYPROGRAM
      Second example: input TECHNIQUE $@5 '{' PASS $@3 annotations '{' • GEOMETRYPROGRAM '=' shader_assignment_shader ';' '}' '}' "end of file"
      Reduce derivation
        $accept
        ↳ 0: input                                                                                                                                                                          "end of file"
             ↳ 3: input tech
                        ↳ 117: TECHNIQUE $@5 '{' passes                                                                                                                                 '}'
                                                 ↳ 113: pass
                                                        ↳ 110: PASS $@3 annotations passstates
                                                                                    ↳ 57: '{' shader_assignments                                                                    '}'
                                                                                              ↳ 55: shader_assignments shader_assignment
                                                                                                    ↳ 56: ε •          ↳ 53: shader_type           '=' shader_assignment_shader ';'
                                                                                                                             ↳ 49: GEOMETRYPROGRAM

    shift/reduce conflict on token FRAGMENTPROGRAM:
       56 shader_assignments: ε •
       50 shader_type: • FRAGMENTPROGRAM
      First example: input TECHNIQUE $@5 '{' PASS $@3 '{' • FRAGMENTPROGRAM '=' shader_assignment_shader ';' '}' passstates '}' "end of file"
      Shift derivation
        $accept
        ↳ 0: input                                                                                                                                                        "end of file"
             ↳ 3: input tech
                        ↳ 117: TECHNIQUE $@5 '{' passes                                                                                                               '}'
                                                 ↳ 113: pass
                                                        ↳ 110: PASS $@3 passstates                                                                         passstates
                                                                        ↳ 57: '{' shader_assignments                                                   '}'
                                                                                  ↳ 54: shader_assignment
                                                                                        ↳ 53: shader_type             '=' shader_assignment_shader ';'
                                                                                              ↳ 50: • FRAGMENTPROGRAM
      Second example: input TECHNIQUE $@5 '{' PASS $@3 annotations '{' • FRAGMENTPROGRAM '=' shader_assignment_shader ';' '}' '}' "end of file"
      Reduce derivation
        $accept
        ↳ 0: input                                                                                                                                                                          "end of file"
             ↳ 3: input tech
                        ↳ 117: TECHNIQUE $@5 '{' passes                                                                                                                                 '}'
                                                 ↳ 113: pass
                                                        ↳ 110: PASS $@3 annotations passstates
                                                                                    ↳ 57: '{' shader_assignments                                                                    '}'
                                                                                              ↳ 55: shader_assignments shader_assignment
                                                                                                    ↳ 56: ε •          ↳ 53: shader_type           '=' shader_assignment_shader ';'
                                                                                                                             ↳ 50: FRAGMENTPROGRAM



State 197

  110 pass: PASS $@3 annotations passstates •

    $default  reduce using rule 110 (pass)


State 198

   27 register_declaration: ':' REGISTER '(' register_value ')' •

    $default  reduce using rule 27 (register_declaration)


State 199

   16 arguments: var_spec var_decl ',' • arguments

    INSPECYFIER   shift, and go to state 146
    OUTSPECYFIER  shift, and go to state 147

    ')'       reduce using rule 17 (arguments)
    $default  reduce using rule 14 (var_spec)

    var_spec   go to state 148
    arguments  go to state 213


State 200

   80 postfix_expression: postfix_expression '[' postfix_expression ']' •

    $default  reduce using rule 80 (postfix_expression)


State 201

   99 basic_type_constructor: FLOAT_TYPE '(' • value ')'

    FLOAT  shift, and go to state 183
    INT    shift, and go to state 184

    value  go to state 214


State 202

  101 basic_type_constructor: FLOAT2_TYPE '(' • value ',' value ')'

    FLOAT  shift, and go to state 183
    INT    shift, and go to state 184

    value  go to state 215


State 203

  102 basic_type_constructor: FLOAT3_TYPE '(' • value ',' value ',' value ')'

    FLOAT  shift, and go to state 183
    INT    shift, and go to state 184

    value  go to state 216


State 204

  103 basic_type_constructor: FLOAT4_TYPE '(' • value ',' value ',' value ',' value ')'

    FLOAT  shift, and go to state 183
    INT    shift, and go to state 184

    value  go to state 217


State 205

  100 basic_type_constructor: INT_TYPE '(' • value ')'

    FLOAT  shift, and go to state 183
    INT    shift, and go to state 184

    value  go to state 218


State 206

  112 pass: PASS IDENTIFIER $@4 annotations passstates •

    $default  reduce using rule 112 (pass)


State 207

   48 shader_type: VERTEXPROGRAM •

    $default  reduce using rule 48 (shader_type)


State 208

   50 shader_type: FRAGMENTPROGRAM •

    $default  reduce using rule 50 (shader_type)


State 209

   49 shader_type: GEOMETRYPROGRAM •

    $default  reduce using rule 49 (shader_type)


State 210

   53 shader_assignment: shader_type • '=' shader_assignment_shader ';'

    '='  shift, and go to state 219


State 211

   54 shader_assignments: shader_assignment •

    $default  reduce using rule 54 (shader_assignments)


State 212

   55 shader_assignments: shader_assignments • shader_assignment
   57 passstates: '{' shader_assignments • '}'

    VERTEXPROGRAM    shift, and go to state 207
    FRAGMENTPROGRAM  shift, and go to state 208
    GEOMETRYPROGRAM  shift, and go to state 209
    '}'              shift, and go to state 220

    shader_type        go to state 210
    shader_assignment  go to state 221


State 213

   16 arguments: var_spec var_decl ',' arguments •

    $default  reduce using rule 16 (arguments)


State 214

   99 basic_type_constructor: FLOAT_TYPE '(' value • ')'

    ')'  shift, and go to state 222


State 215

  101 basic_type_constructor: FLOAT2_TYPE '(' value • ',' value ')'

    ','  shift, and go to state 223


State 216

  102 basic_type_constructor: FLOAT3_TYPE '(' value • ',' value ',' value ')'

    ','  shift, and go to state 224


State 217

  103 basic_type_constructor: FLOAT4_TYPE '(' value • ',' value ',' value ',' value ')'

    ','  shift, and go to state 225


State 218

  100 basic_type_constructor: INT_TYPE '(' value • ')'

    ')'  shift, and go to state 226


State 219

   53 shader_assignment: shader_type '=' • shader_assignment_shader ';'

    IDENTIFIER  shift, and go to state 227
    '('         shift, and go to state 57

    shader_assignment_shader  go to state 228
    direct_declarator         go to state 229


State 220

   57 passstates: '{' shader_assignments '}' •

    $default  reduce using rule 57 (passstates)


State 221

   55 shader_assignments: shader_assignments shader_assignment •

    $default  reduce using rule 55 (shader_assignments)


State 222

   99 basic_type_constructor: FLOAT_TYPE '(' value ')' •

    $default  reduce using rule 99 (basic_type_constructor)


State 223

  101 basic_type_constructor: FLOAT2_TYPE '(' value ',' • value ')'

    FLOAT  shift, and go to state 183
    INT    shift, and go to state 184

    value  go to state 230


State 224

  102 basic_type_constructor: FLOAT3_TYPE '(' value ',' • value ',' value ')'

    FLOAT  shift, and go to state 183
    INT    shift, and go to state 184

    value  go to state 231


State 225

  103 basic_type_constructor: FLOAT4_TYPE '(' value ',' • value ',' value ',' value ')'

    FLOAT  shift, and go to state 183
    INT    shift, and go to state 184

    value  go to state 232


State 226

  100 basic_type_constructor: INT_TYPE '(' value ')' •

    $default  reduce using rule 100 (basic_type_constructor)


State 227

   52 shader_assignment_shader: IDENTIFIER •
   88 direct_declarator: IDENTIFIER •

    ';'       reduce using rule 52 (shader_assignment_shader)
    ';'       [reduce using rule 88 (direct_declarator)]
    $default  reduce using rule 88 (direct_declarator)

    reduce/reduce conflict on token ';':
       52 shader_assignment_shader: IDENTIFIER •
       88 direct_declarator: IDENTIFIER •
      Example: IDENTIFIER •
      First reduce derivation
        shader_assignment_shader
        ↳ 52: IDENTIFIER •
      Second reduce derivation
        shader_assignment_shader
        ↳ 51: direct_declarator
              ↳ 88: IDENTIFIER •



State 228

   53 shader_assignment: shader_type '=' shader_assignment_shader • ';'

    ';'  shift, and go to state 233


State 229

   51 shader_assignment_shader: direct_declarator •
   90 direct_declarator: direct_declarator • '[' constant_expression ']'
   91                  | direct_declarator • '[' ']'
   92                  | direct_declarator • '(' parameter_type_list ')'
   93                  | direct_declarator • '(' identifier_list ')'
   94                  | direct_declarator • '(' ')'

    '('  shift, and go to state 78
    '['  shift, and go to state 79

    $default  reduce using rule 51 (shader_assignment_shader)


State 230

  101 basic_type_constructor: FLOAT2_TYPE '(' value ',' value • ')'

    ')'  shift, and go to state 234


State 231

  102 basic_type_constructor: FLOAT3_TYPE '(' value ',' value • ',' value ')'

    ','  shift, and go to state 235


State 232

  103 basic_type_constructor: FLOAT4_TYPE '(' value ',' value • ',' value ',' value ')'

    ','  shift, and go to state 236


State 233

   53 shader_assignment: shader_type '=' shader_assignment_shader ';' •

    $default  reduce using rule 53 (shader_assignment)


State 234

  101 basic_type_constructor: FLOAT2_TYPE '(' value ',' value ')' •

    $default  reduce using rule 101 (basic_type_constructor)


State 235

  102 basic_type_constructor: FLOAT3_TYPE '(' value ',' value ',' • value ')'

    FLOAT  shift, and go to state 183
    INT    shift, and go to state 184

    value  go to state 237


State 236

  103 basic_type_constructor: FLOAT4_TYPE '(' value ',' value ',' • value ',' value ')'

    FLOAT  shift, and go to state 183
    INT    shift, and go to state 184

    value  go to state 238


State 237

  102 basic_type_constructor: FLOAT3_TYPE '(' value ',' value ',' value • ')'

    ')'  shift, and go to state 239


State 238

  103 basic_type_constructor: FLOAT4_TYPE '(' value ',' value ',' value • ',' value ')'

    ','  shift, and go to state 240


State 239

  102 basic_type_constructor: FLOAT3_TYPE '(' value ',' value ',' value ')' •

    $default  reduce using rule 102 (basic_type_constructor)


State 240

  103 basic_type_constructor: FLOAT4_TYPE '(' value ',' value ',' value ',' • value ')'

    FLOAT  shift, and go to state 183
    INT    shift, and go to state 184

    value  go to state 241


State 241

  103 basic_type_constructor: FLOAT4_TYPE '(' value ',' value ',' value ',' value • ')'

    ')'  shift, and go to state 242


State 242

  103 basic_type_constructor: FLOAT4_TYPE '(' value ',' value ',' value ',' value ')' •

    $default  reduce using rule 103 (basic_type_constructor)
