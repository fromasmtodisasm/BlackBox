// Copyright 2001-2019 Crytek GmbH / Crytek Group. All rights reserved.

 #define MAX_BONES 768
 #define MAX_NUM_BONES_PER_GROUP 250
 #define MAX_NUM_BONES_PER_GROUP_WITH_MB 125

//============================================================================
//=== Uniform parameters =====================================================

// Parameter semantic prefixes:
// PF - Per-Frame
// PB - Per-Batch
// PI - Per-Instance
// PM - Per-Material


// Per-Material Constant Buffer - Fixed constants
#define REG_PM_DIFFUSE_COL          c28
#define REG_PM_SPECULAR_COL         c29
#define REG_PM_EMISSIVE_COL         c30
#define REG_PM_TCM_MATRIX           c31
#define REG_PM_DEFORM_WAVE          c35
#define REG_PM_DETAIL_TILING        c36
#define REG_PM_SILPOM_DETAIL_PARAMS c37

// Per-Material Constant Buffer - Tweakables in cfi files
#define REG_PM_PARAM_INCL_0  c38
#define REG_PM_PARAM_INCL_1  c39
#define REG_PM_PARAM_INCL_2  c40
#define REG_PM_PARAM_INCL_3  c41

// Per-Material Constant Buffer - Tweakables in cfx files
#define REG_PM_PARAM_0  c42
#define REG_PM_PARAM_1  c43
#define REG_PM_PARAM_2  c44
#define REG_PM_PARAM_3  c45
#define REG_PM_PARAM_4  c46
#define REG_PM_PARAM_5  c47
#define REG_PM_PARAM_6  c48
#define REG_PM_PARAM_7  c49

float4   MatDifColor                 : PM_MatDiffuseColor             < register = REG_PM_DIFFUSE_COL; >;
float4   MatSpecColor                : PM_MatSpecularColor            < register = REG_PM_SPECULAR_COL; >;
float4   MatEmissiveColor            : PM_MatEmissiveColor            < register = REG_PM_EMISSIVE_COL; >;
float4x4 CM_MatrixTCM                : PM_MatMatrixTCM                < register = REG_PM_TCM_MATRIX; >;
float4   CM_DeformWave               : PM_MatDeformWave               < register = REG_PM_DEFORM_WAVE; >;
float4   CM_DetailTilingAndAlphaRef  : PM_MatDetailTilingAndAlphaRef  < register = REG_PM_DETAIL_TILING; >;
float4   CM_SilPomDetailParams       : PM_MatSilPomDetailParams       < register = REG_PM_SILPOM_DETAIL_PARAMS; >;


/*

// TODO: Use explicit CB once shader parser got adjusted

cbuffer PerMaterialConstants : register()
{
	float4   CM_Tweakables[12];
	float4   MatDifColor;   // TODO: Adjust name
	float4   MatSpecColor;  // TODO: Adjust name
	float4x4 CM_MatrixTCM;
	float4   CM_DeformWave;
	float4   CM_DetailTilingAndAlphaRef;
}*/



// Vertex shader parameters range:
// c0-c3, c7-c28 = PB, PI
// c8-c15  = PM (tweakables)
// c29-c34 = PF
// c40-c255 = Skinning, Instancing, etc

#define VS_REG_PB_0 c0
#define VS_REG_PB_1 c1
#define VS_REG_PB_2 c2
#define VS_REG_PB_3 c3
#define VS_REG_PB_4 c4
#define VS_REG_PB_5 c5
#define VS_REG_PB_6 c6
#define VS_REG_PB_7 c7
#define VS_REG_PB_8 c8
#define VS_REG_PB_9 c9
#define VS_REG_PB_10 c10

//=============================================================================
// Pixel shader parameters range:
// c12-c38 = PM (channel's scale & bias)
// c39-c51 = PM (Light material)
// c52-c61 = PM (tweakables), PI, PB
// c62-67 = PF

#define PS_REG_PB_0 c0
#define PS_REG_PB_1 c1
#define PS_REG_PB_2 c2
#define PS_REG_PB_3 c3
#define PS_REG_PB_4 c4
#define PS_REG_PB_5 c5
#define PS_REG_PB_6 c6
#define PS_REG_PB_7 c7
#define PS_REG_PB_8 c8
#define PS_REG_PB_9 c9

//=============================================================================
//=== Global constants ========================================================

#define PS_HDR_RANGE_ADAPT_MAX 1.0

cbuffer CBPerViewGlobal : register(b6)
{
	float4x4  CV_ViewProjZeroMatr;
	float4    CV_AnimGenParams;
	
	float4x4  CV_ViewProjMatr;
	float4x4  CV_ViewProjNearestMatr;
	float4x4  CV_InvViewProj;
	float4x4  CV_PrevViewProjMatr;
	float4x4  CV_PrevViewProjNearestMatr;
	float3x4  CV_ScreenToWorldBasis;
	float4    CV_TessInfo;
	float4    CV_WorldViewPosition;
	float4    CV_CameraRightVector;
	float4    CV_CameraFrontVector;
	float4    CV_CameraUpVector;
	
	float4    CV_ScreenSize;
	float4    CV_HPosScale;
	float4    CV_ProjRatio;
	float4    CV_NearestScaled;
	float4    CV_NearFarClipDist;
	
	float4    CV_SunLightDir;
	float4    CV_SunColor;
	float4    CV_SkyColor;
	float4    CV_FogColor;
	float4    CV_TerrainInfo;
	
	float4    CV_DecalZFightingRemedy;
	
	float4x4  CV_FrustumPlaneEquation;

	float4    CV_WindGridOffset;
	
	float4x4  CV_ViewMatr;
	float4x4  CV_InvViewMatr;
	
	float4x4  CV_ProjMatr;
	float4x4  CV_ProjMatrUnjittered;
};

cbuffer CBPerPassShadowGen : register(b5)
{
	float4    CP_ShadowGen_LightPos;
	float4    CP_ShadowGen_ViewPos;
	
	float4    CP_ShadowGen_DepthTestBias;
	float4    CP_ShadowGen_FrustumInfo;
	
	float4    CP_ShadowGen_VegetationAlphaClamp;
};

cbuffer CBPerPassCustom : register(b5)
{
	float4    CP_Custom_ViewMode;
};
	
	
#define g_VS_WindGridOffs          CV_WindGridOffset
#define g_VS_WorldViewPos          float3(CV_ScreenToWorldBasis[0][3], CV_ScreenToWorldBasis[1][3], CV_ScreenToWorldBasis[2][3])
#define g_VS_ViewProjZeroMatr      CV_ViewProjZeroMatr
#define g_VS_ViewProjMatr          CV_ViewProjMatr
#define g_VS_ScreenSize            CV_ScreenSize
#define g_VS_HPosScale             CV_HPosScale
#define g_VS_NearFarClipDist       CV_NearFarClipDist
#define g_VS_AnimGenParams         CV_AnimGenParams
#define g_VS_SunLightDir           CV_SunLightDir
#define g_VS_SkyColor              CV_SkyColor
#define g_VS_TessInfo              CV_TessInfo
#define g_VS_FrustumPlaneEquation  CV_FrustumPlaneEquation

#define g_PS_ProjRatio             CV_ProjRatio
#define g_PS_NearestScaled         CV_NearestScaled
#define g_PS_SunLightDir           CV_SunLightDir
#define g_PS_SunColor              CV_SunColor
#define g_PS_SkyColor              CV_SkyColor
#define g_PS_FogColor              CV_FogColor
#define g_PS_TerrainInfo           CV_TerrainInfo

cbuffer CB_SkinQuat_Cur : register(b2)
{
	float2x4 _g_SkinQuat_Cur[MAX_BONES];
};

cbuffer CB_SkinQuat_Prev : register(b3)
{
	float2x4 _g_SkinQuat_Prev[MAX_BONES];
};

//==========================================================================================
// Frequently used parameters

float4 FogInfo              : PB_Fog;
float4 PS_NearFarClipDist   : PB_NearFarDist;
float4 PS_WorldViewPos      : PB_CameraPos;
float4 PS_ScreenSize        : PB_ScreenSize;

float4 PS_ZRange;

