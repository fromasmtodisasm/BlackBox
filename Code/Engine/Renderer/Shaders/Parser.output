Terminals unused in grammar

    TRUE
    FALSE
    BOOL
    VOID_TYPE
    HIGHP
    MEDIUMP
    LOWP
    UNIFORM
    TEXTURE1D_TYPE
    TEXTURE2D_TYPE
    TEXTURE2DSHADOW_TYPE
    TEXTURE2DRECT_TYPE
    TEXTURE3D_TYPE
    TEXTURECUBE_TYPE
    SAMPLER1D_TYPE
    SAMPLER2D_TYPE
    SAMPLER2DSHADOW_TYPE
    SAMPLER2DRECT_TYPE
    SAMPLER3D_TYPE
    SAMPLERCUBE_TYPE
    EXTENSION
    SEPARATE_SHADER
    HULLPROGRAM
    EVALPROGRAM
    SHDPROFILE
    SAMPLERRESOURCE
    SAMPLERTEXUNIT
    SETSAMPLERSTATE
    SETDSTSTATE
    SETRASTERIZATIONSTATE
    SETCOLORSAMPLESTATE
    IMAGERESOURCE
    IMAGEUNIT
    IMAGEACCESS
    IMAGELAYER
    IMAGELAYERED
    WRITE_ONLY
    READ_ONLY
    READ_WRITE
    VERTEXFORMAT


Grammar

    0 $accept: input "end of file"

    1 input: %empty
    2      | input ';'
    3      | input tech
    4      | input hlsl
    5      | input var_decl
    6      | input shader_resource
    7      | input function_definition
    8      | input function_declaration
    9      | input fatal_error
   10      | input error

   11 arguments: var_decl
   12          | var_decl ',' arguments

   13 $@1: %empty

   14 function_definition: function_declaration '{' $@1 '}'

   15 function_declaration: base_type IDENTIFIER '(' arguments ')'

   16 fatal_error: FATALERROR

   17 register_declaration: ':' REGISTER '(' INT ')'
   18                     | %empty

   19 cbuffer: CSTBUFFER IDENTIFIER register_declaration '{' var_decls '}'

   20 struct: STRUCT struct_header struct_body struct_footer

   21 struct_header: IDENTIFIER
   22              | %empty

   23 struct_body: '{' var_decls '}'

   24 struct_footer: IDENTIFIER
   25              | %empty

   26 var_decls: var_decls var_decl ';'
   27          | var_decl ';'
   28          | struct ';'

   29 shader_resource: cbuffer

   30 shader_type: VERTEXPROGRAM
   31            | GEOMETRYPROGRAM
   32            | FRAGMENTPROGRAM

   33 shader_assignment: shader_type '=' IDENTIFIER

   34 shader_assignments: shader_assignment
   35                   | shader_assignments shader_assignment

   36 passstates: '{' shader_assignments '}'

   37 base_type: FLOAT_TYPE
   38          | FLOAT2_TYPE
   39          | FLOAT3_TYPE
   40          | FLOAT4_TYPE
   41          | INT_TYPE
   42          | INT2_TYPE
   43          | INT3_TYPE
   44          | INT4_TYPE
   45          | BOOL_TYPE
   46          | BOOL2_TYPE
   47          | BOOL3_TYPE
   48          | BOOL4_TYPE
   49          | MAT2_TYPE
   50          | MAT3_TYPE
   51          | MAT4_TYPE

   52 var_decl: base_type IDENTIFIER
   53         | base_type IDENTIFIER annotations '=' INT
   54         | base_type IDENTIFIER annotations '=' FLOAT

   55 $@2: %empty

   56 pass: PASS $@2 annotations passstates

   57 $@3: %empty

   58 pass: PASS IDENTIFIER $@3 annotations passstates

   59 passes: pass
   60       | passes pass
   61       | passes error

   62 $@4: %empty

   63 tech: TECHNIQUE $@4 '{' passes '}'

   64 $@5: %empty

   65 tech: TECHNIQUE IDENTIFIER $@5 annotations '{' passes '}'

   66 scalar_type: INT_TYPE
   67            | FLOAT_TYPE
   68            | UNSIGNED
   69            | STRING_TYPE

   70 annotation_list: annotation_list annotation
   71                | annotation

   72 annotation_value: FLOAT
   73                 | INT
   74                 | STR
   75                 | UNSIGNED

   76 annotation: scalar_type IDENTIFIER '=' annotation_value ';'

   77 annotations: %empty
   78            | '<' annotation_list '>'

   79 hlsl_header: HLSL11SHADER IDENTIFIER
   80            | HLSL11SHADER

   81 hlsl: shader_header '{' CODEBODY

   82 shader_header: hlsl_header annotations


Terminals, with rules where they appear

    "end of file" (0) 0
    '(' (40) 15 17
    ')' (41) 15 17
    ',' (44) 12
    ':' (58) 17
    ';' (59) 2 26 27 28 76
    '<' (60) 78
    '=' (61) 33 53 54 76
    '>' (62) 78
    '{' (123) 14 19 23 36 63 65 81
    '}' (125) 14 19 23 36 63 65
    error (256) 10 61
    IDENTIFIER <std::string> (258) 15 19 21 24 33 52 53 54 58 65 76 79
    TRUE <bool> (259)
    FALSE <bool> (260)
    FLOAT <float> (261) 54 72
    INT <int> (262) 17 53 73
    BOOL <bool> (263)
    STR <std::string> (264) 74
    HLSL11SHADER (265) 79 80
    TECHNIQUE (266) 63 65
    PASS (267) 56 58
    CODEBODY <std::string> (268) 81
    STRING_TYPE (269) 69
    VOID_TYPE (270)
    UNSIGNED (271) 68 75
    HIGHP (272)
    MEDIUMP (273)
    LOWP (274)
    UNIFORM (275)
    CSTBUFFER (276) 19
    FLOAT_TYPE (277) 37 67
    FLOAT2_TYPE (278) 38
    FLOAT3_TYPE (279) 39
    FLOAT4_TYPE (280) 40
    MAT2_TYPE (281) 49
    MAT3_TYPE (282) 50
    MAT4_TYPE (283) 51
    BOOL_TYPE (284) 45
    BOOL2_TYPE (285) 46
    BOOL3_TYPE (286) 47
    BOOL4_TYPE (287) 48
    INT_TYPE (288) 41 66
    INT2_TYPE (289) 42
    INT3_TYPE (290) 43
    INT4_TYPE (291) 44
    TEXTURE1D_TYPE (292)
    TEXTURE2D_TYPE (293)
    TEXTURE2DSHADOW_TYPE (294)
    TEXTURE2DRECT_TYPE (295)
    TEXTURE3D_TYPE (296)
    TEXTURECUBE_TYPE (297)
    SAMPLER1D_TYPE (298)
    SAMPLER2D_TYPE (299)
    SAMPLER2DSHADOW_TYPE (300)
    SAMPLER2DRECT_TYPE (301)
    SAMPLER3D_TYPE (302)
    SAMPLERCUBE_TYPE (303)
    EXTENSION (304)
    SEPARATE_SHADER (305)
    VERTEXPROGRAM <IShader::Type> (306) 30
    FRAGMENTPROGRAM <IShader::Type> (307) 32
    GEOMETRYPROGRAM <IShader::Type> (308) 31
    HULLPROGRAM <IShader::Type> (309)
    EVALPROGRAM <IShader::Type> (310)
    SHDPROFILE (311)
    SAMPLERRESOURCE (312)
    SAMPLERTEXUNIT (313)
    SETSAMPLERSTATE (314)
    SETDSTSTATE (315)
    SETRASTERIZATIONSTATE (316)
    SETCOLORSAMPLESTATE (317)
    IMAGERESOURCE (318)
    IMAGEUNIT (319)
    IMAGEACCESS (320)
    IMAGELAYER (321)
    IMAGELAYERED (322)
    WRITE_ONLY (323)
    READ_ONLY (324)
    READ_WRITE (325)
    VERTEXFORMAT (326)
    REGISTER (327) 17
    FATALERROR (328) 16
    STRUCT (329) 20


Nonterminals, with rules where they appear

    $accept (85)
        on left: 0
    input (86)
        on left: 1 2 3 4 5 6 7 8 9 10
        on right: 0 2 3 4 5 6 7 8 9 10
    arguments (87)
        on left: 11 12
        on right: 12 15
    function_definition (88)
        on left: 14
        on right: 7
    $@1 (89)
        on left: 13
        on right: 14
    function_declaration (90)
        on left: 15
        on right: 8 14
    fatal_error (91)
        on left: 16
        on right: 9
    register_declaration (92)
        on left: 17 18
        on right: 19
    cbuffer (93)
        on left: 19
        on right: 29
    struct (94)
        on left: 20
        on right: 28
    struct_header (95)
        on left: 21 22
        on right: 20
    struct_body (96)
        on left: 23
        on right: 20
    struct_footer <std::string> (97)
        on left: 24 25
        on right: 20
    var_decls (98)
        on left: 26 27 28
        on right: 19 23 26
    shader_resource (99)
        on left: 29
        on right: 6
    shader_type <IShader::Type> (100)
        on left: 30 31 32
        on right: 33
    shader_assignment <std::string> (101)
        on left: 33
        on right: 34 35
    shader_assignments (102)
        on left: 34 35
        on right: 35 36
    passstates (103)
        on left: 36
        on right: 56 58
    base_type <nvFX::IUniform::Type> (104)
        on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
        on right: 15 52 53 54
    var_decl (105)
        on left: 52 53 54
        on right: 5 11 12 26 27
    pass (106)
        on left: 56 58
        on right: 59 60
    $@2 (107)
        on left: 55
        on right: 56
    $@3 (108)
        on left: 57
        on right: 58
    passes (109)
        on left: 59 60 61
        on right: 60 61 63 65
    tech (110)
        on left: 63 65
        on right: 3
    $@4 (111)
        on left: 62
        on right: 63
    $@5 (112)
        on left: 64
        on right: 65
    scalar_type (113)
        on left: 66 67 68 69
        on right: 76
    annotation_list (114)
        on left: 70 71
        on right: 70 78
    annotation_value (115)
        on left: 72 73 74 75
        on right: 76
    annotation (116)
        on left: 76
        on right: 70 71
    annotations (117)
        on left: 77 78
        on right: 53 54 56 58 65 82
    hlsl_header <std::string> (118)
        on left: 79 80
        on right: 82
    hlsl (119)
        on left: 81
        on right: 4
    shader_header <std::string> (120)
        on left: 82
        on right: 81


State 0

    0 $accept: . input "end of file"

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . "end of file"
    2 input: input . ';'
    3      | input . tech
    4      | input . hlsl
    5      | input . var_decl
    6      | input . shader_resource
    7      | input . function_definition
    8      | input . function_declaration
    9      | input . fatal_error
   10      | input . error

    "end of file"  shift, and go to state 2
    error          shift, and go to state 3
    HLSL11SHADER   shift, and go to state 4
    TECHNIQUE      shift, and go to state 5
    CSTBUFFER      shift, and go to state 6
    FLOAT_TYPE     shift, and go to state 7
    FLOAT2_TYPE    shift, and go to state 8
    FLOAT3_TYPE    shift, and go to state 9
    FLOAT4_TYPE    shift, and go to state 10
    MAT2_TYPE      shift, and go to state 11
    MAT3_TYPE      shift, and go to state 12
    MAT4_TYPE      shift, and go to state 13
    BOOL_TYPE      shift, and go to state 14
    BOOL2_TYPE     shift, and go to state 15
    BOOL3_TYPE     shift, and go to state 16
    BOOL4_TYPE     shift, and go to state 17
    INT_TYPE       shift, and go to state 18
    INT2_TYPE      shift, and go to state 19
    INT3_TYPE      shift, and go to state 20
    INT4_TYPE      shift, and go to state 21
    FATALERROR     shift, and go to state 22
    ';'            shift, and go to state 23

    function_definition   go to state 24
    function_declaration  go to state 25
    fatal_error           go to state 26
    cbuffer               go to state 27
    shader_resource       go to state 28
    base_type             go to state 29
    var_decl              go to state 30
    tech                  go to state 31
    hlsl_header           go to state 32
    hlsl                  go to state 33
    shader_header         go to state 34


State 2

    0 $accept: input "end of file" .

    $default  accept


State 3

   10 input: input error .

    $default  reduce using rule 10 (input)


State 4

   79 hlsl_header: HLSL11SHADER . IDENTIFIER
   80            | HLSL11SHADER .

    IDENTIFIER  shift, and go to state 35

    $default  reduce using rule 80 (hlsl_header)


State 5

   63 tech: TECHNIQUE . $@4 '{' passes '}'
   65     | TECHNIQUE . IDENTIFIER $@5 annotations '{' passes '}'

    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 62 ($@4)

    $@4  go to state 37


State 6

   19 cbuffer: CSTBUFFER . IDENTIFIER register_declaration '{' var_decls '}'

    IDENTIFIER  shift, and go to state 38


State 7

   37 base_type: FLOAT_TYPE .

    $default  reduce using rule 37 (base_type)


State 8

   38 base_type: FLOAT2_TYPE .

    $default  reduce using rule 38 (base_type)


State 9

   39 base_type: FLOAT3_TYPE .

    $default  reduce using rule 39 (base_type)


State 10

   40 base_type: FLOAT4_TYPE .

    $default  reduce using rule 40 (base_type)


State 11

   49 base_type: MAT2_TYPE .

    $default  reduce using rule 49 (base_type)


State 12

   50 base_type: MAT3_TYPE .

    $default  reduce using rule 50 (base_type)


State 13

   51 base_type: MAT4_TYPE .

    $default  reduce using rule 51 (base_type)


State 14

   45 base_type: BOOL_TYPE .

    $default  reduce using rule 45 (base_type)


State 15

   46 base_type: BOOL2_TYPE .

    $default  reduce using rule 46 (base_type)


State 16

   47 base_type: BOOL3_TYPE .

    $default  reduce using rule 47 (base_type)


State 17

   48 base_type: BOOL4_TYPE .

    $default  reduce using rule 48 (base_type)


State 18

   41 base_type: INT_TYPE .

    $default  reduce using rule 41 (base_type)


State 19

   42 base_type: INT2_TYPE .

    $default  reduce using rule 42 (base_type)


State 20

   43 base_type: INT3_TYPE .

    $default  reduce using rule 43 (base_type)


State 21

   44 base_type: INT4_TYPE .

    $default  reduce using rule 44 (base_type)


State 22

   16 fatal_error: FATALERROR .

    $default  reduce using rule 16 (fatal_error)


State 23

    2 input: input ';' .

    $default  reduce using rule 2 (input)


State 24

    7 input: input function_definition .

    $default  reduce using rule 7 (input)


State 25

    8 input: input function_declaration .
   14 function_definition: function_declaration . '{' $@1 '}'

    '{'  shift, and go to state 39

    $default  reduce using rule 8 (input)


State 26

    9 input: input fatal_error .

    $default  reduce using rule 9 (input)


State 27

   29 shader_resource: cbuffer .

    $default  reduce using rule 29 (shader_resource)


State 28

    6 input: input shader_resource .

    $default  reduce using rule 6 (input)


State 29

   15 function_declaration: base_type . IDENTIFIER '(' arguments ')'
   52 var_decl: base_type . IDENTIFIER
   53         | base_type . IDENTIFIER annotations '=' INT
   54         | base_type . IDENTIFIER annotations '=' FLOAT

    IDENTIFIER  shift, and go to state 40


State 30

    5 input: input var_decl .

    $default  reduce using rule 5 (input)


State 31

    3 input: input tech .

    $default  reduce using rule 3 (input)


State 32

   82 shader_header: hlsl_header . annotations

    '<'  shift, and go to state 41

    $default  reduce using rule 77 (annotations)

    annotations  go to state 42


State 33

    4 input: input hlsl .

    $default  reduce using rule 4 (input)


State 34

   81 hlsl: shader_header . '{' CODEBODY

    '{'  shift, and go to state 43


State 35

   79 hlsl_header: HLSL11SHADER IDENTIFIER .

    $default  reduce using rule 79 (hlsl_header)


State 36

   65 tech: TECHNIQUE IDENTIFIER . $@5 annotations '{' passes '}'

    $default  reduce using rule 64 ($@5)

    $@5  go to state 44


State 37

   63 tech: TECHNIQUE $@4 . '{' passes '}'

    '{'  shift, and go to state 45


State 38

   19 cbuffer: CSTBUFFER IDENTIFIER . register_declaration '{' var_decls '}'

    ':'  shift, and go to state 46

    $default  reduce using rule 18 (register_declaration)

    register_declaration  go to state 47


State 39

   14 function_definition: function_declaration '{' . $@1 '}'

    $default  reduce using rule 13 ($@1)

    $@1  go to state 48


State 40

   15 function_declaration: base_type IDENTIFIER . '(' arguments ')'
   52 var_decl: base_type IDENTIFIER .
   53         | base_type IDENTIFIER . annotations '=' INT
   54         | base_type IDENTIFIER . annotations '=' FLOAT

    '('  shift, and go to state 49
    '<'  shift, and go to state 41

    '='       reduce using rule 77 (annotations)
    $default  reduce using rule 52 (var_decl)

    annotations  go to state 50


State 41

   78 annotations: '<' . annotation_list '>'

    STRING_TYPE  shift, and go to state 51
    UNSIGNED     shift, and go to state 52
    FLOAT_TYPE   shift, and go to state 53
    INT_TYPE     shift, and go to state 54

    scalar_type      go to state 55
    annotation_list  go to state 56
    annotation       go to state 57


State 42

   82 shader_header: hlsl_header annotations .

    $default  reduce using rule 82 (shader_header)


State 43

   81 hlsl: shader_header '{' . CODEBODY

    CODEBODY  shift, and go to state 58


State 44

   65 tech: TECHNIQUE IDENTIFIER $@5 . annotations '{' passes '}'

    '<'  shift, and go to state 41

    $default  reduce using rule 77 (annotations)

    annotations  go to state 59


State 45

   63 tech: TECHNIQUE $@4 '{' . passes '}'

    PASS  shift, and go to state 60

    pass    go to state 61
    passes  go to state 62


State 46

   17 register_declaration: ':' . REGISTER '(' INT ')'

    REGISTER  shift, and go to state 63


State 47

   19 cbuffer: CSTBUFFER IDENTIFIER register_declaration . '{' var_decls '}'

    '{'  shift, and go to state 64


State 48

   14 function_definition: function_declaration '{' $@1 . '}'

    '}'  shift, and go to state 65


State 49

   15 function_declaration: base_type IDENTIFIER '(' . arguments ')'

    FLOAT_TYPE   shift, and go to state 7
    FLOAT2_TYPE  shift, and go to state 8
    FLOAT3_TYPE  shift, and go to state 9
    FLOAT4_TYPE  shift, and go to state 10
    MAT2_TYPE    shift, and go to state 11
    MAT3_TYPE    shift, and go to state 12
    MAT4_TYPE    shift, and go to state 13
    BOOL_TYPE    shift, and go to state 14
    BOOL2_TYPE   shift, and go to state 15
    BOOL3_TYPE   shift, and go to state 16
    BOOL4_TYPE   shift, and go to state 17
    INT_TYPE     shift, and go to state 18
    INT2_TYPE    shift, and go to state 19
    INT3_TYPE    shift, and go to state 20
    INT4_TYPE    shift, and go to state 21

    arguments  go to state 66
    base_type  go to state 67
    var_decl   go to state 68


State 50

   53 var_decl: base_type IDENTIFIER annotations . '=' INT
   54         | base_type IDENTIFIER annotations . '=' FLOAT

    '='  shift, and go to state 69


State 51

   69 scalar_type: STRING_TYPE .

    $default  reduce using rule 69 (scalar_type)


State 52

   68 scalar_type: UNSIGNED .

    $default  reduce using rule 68 (scalar_type)


State 53

   67 scalar_type: FLOAT_TYPE .

    $default  reduce using rule 67 (scalar_type)


State 54

   66 scalar_type: INT_TYPE .

    $default  reduce using rule 66 (scalar_type)


State 55

   76 annotation: scalar_type . IDENTIFIER '=' annotation_value ';'

    IDENTIFIER  shift, and go to state 70


State 56

   70 annotation_list: annotation_list . annotation
   78 annotations: '<' annotation_list . '>'

    STRING_TYPE  shift, and go to state 51
    UNSIGNED     shift, and go to state 52
    FLOAT_TYPE   shift, and go to state 53
    INT_TYPE     shift, and go to state 54
    '>'          shift, and go to state 71

    scalar_type  go to state 55
    annotation   go to state 72


State 57

   71 annotation_list: annotation .

    $default  reduce using rule 71 (annotation_list)


State 58

   81 hlsl: shader_header '{' CODEBODY .

    $default  reduce using rule 81 (hlsl)


State 59

   65 tech: TECHNIQUE IDENTIFIER $@5 annotations . '{' passes '}'

    '{'  shift, and go to state 73


State 60

   56 pass: PASS . $@2 annotations passstates
   58     | PASS . IDENTIFIER $@3 annotations passstates

    IDENTIFIER  shift, and go to state 74

    $default  reduce using rule 55 ($@2)

    $@2  go to state 75


State 61

   59 passes: pass .

    $default  reduce using rule 59 (passes)


State 62

   60 passes: passes . pass
   61       | passes . error
   63 tech: TECHNIQUE $@4 '{' passes . '}'

    error  shift, and go to state 76
    PASS   shift, and go to state 60
    '}'    shift, and go to state 77

    pass  go to state 78


State 63

   17 register_declaration: ':' REGISTER . '(' INT ')'

    '('  shift, and go to state 79


State 64

   19 cbuffer: CSTBUFFER IDENTIFIER register_declaration '{' . var_decls '}'

    FLOAT_TYPE   shift, and go to state 7
    FLOAT2_TYPE  shift, and go to state 8
    FLOAT3_TYPE  shift, and go to state 9
    FLOAT4_TYPE  shift, and go to state 10
    MAT2_TYPE    shift, and go to state 11
    MAT3_TYPE    shift, and go to state 12
    MAT4_TYPE    shift, and go to state 13
    BOOL_TYPE    shift, and go to state 14
    BOOL2_TYPE   shift, and go to state 15
    BOOL3_TYPE   shift, and go to state 16
    BOOL4_TYPE   shift, and go to state 17
    INT_TYPE     shift, and go to state 18
    INT2_TYPE    shift, and go to state 19
    INT3_TYPE    shift, and go to state 20
    INT4_TYPE    shift, and go to state 21
    STRUCT       shift, and go to state 80

    struct     go to state 81
    var_decls  go to state 82
    base_type  go to state 67
    var_decl   go to state 83


State 65

   14 function_definition: function_declaration '{' $@1 '}' .

    $default  reduce using rule 14 (function_definition)


State 66

   15 function_declaration: base_type IDENTIFIER '(' arguments . ')'

    ')'  shift, and go to state 84


State 67

   52 var_decl: base_type . IDENTIFIER
   53         | base_type . IDENTIFIER annotations '=' INT
   54         | base_type . IDENTIFIER annotations '=' FLOAT

    IDENTIFIER  shift, and go to state 85


State 68

   11 arguments: var_decl .
   12          | var_decl . ',' arguments

    ','  shift, and go to state 86

    $default  reduce using rule 11 (arguments)


State 69

   53 var_decl: base_type IDENTIFIER annotations '=' . INT
   54         | base_type IDENTIFIER annotations '=' . FLOAT

    FLOAT  shift, and go to state 87
    INT    shift, and go to state 88


State 70

   76 annotation: scalar_type IDENTIFIER . '=' annotation_value ';'

    '='  shift, and go to state 89


State 71

   78 annotations: '<' annotation_list '>' .

    $default  reduce using rule 78 (annotations)


State 72

   70 annotation_list: annotation_list annotation .

    $default  reduce using rule 70 (annotation_list)


State 73

   65 tech: TECHNIQUE IDENTIFIER $@5 annotations '{' . passes '}'

    PASS  shift, and go to state 60

    pass    go to state 61
    passes  go to state 90


State 74

   58 pass: PASS IDENTIFIER . $@3 annotations passstates

    $default  reduce using rule 57 ($@3)

    $@3  go to state 91


State 75

   56 pass: PASS $@2 . annotations passstates

    '<'  shift, and go to state 41

    $default  reduce using rule 77 (annotations)

    annotations  go to state 92


State 76

   61 passes: passes error .

    $default  reduce using rule 61 (passes)


State 77

   63 tech: TECHNIQUE $@4 '{' passes '}' .

    $default  reduce using rule 63 (tech)


State 78

   60 passes: passes pass .

    $default  reduce using rule 60 (passes)


State 79

   17 register_declaration: ':' REGISTER '(' . INT ')'

    INT  shift, and go to state 93


State 80

   20 struct: STRUCT . struct_header struct_body struct_footer

    IDENTIFIER  shift, and go to state 94

    $default  reduce using rule 22 (struct_header)

    struct_header  go to state 95


State 81

   28 var_decls: struct . ';'

    ';'  shift, and go to state 96


State 82

   19 cbuffer: CSTBUFFER IDENTIFIER register_declaration '{' var_decls . '}'
   26 var_decls: var_decls . var_decl ';'

    FLOAT_TYPE   shift, and go to state 7
    FLOAT2_TYPE  shift, and go to state 8
    FLOAT3_TYPE  shift, and go to state 9
    FLOAT4_TYPE  shift, and go to state 10
    MAT2_TYPE    shift, and go to state 11
    MAT3_TYPE    shift, and go to state 12
    MAT4_TYPE    shift, and go to state 13
    BOOL_TYPE    shift, and go to state 14
    BOOL2_TYPE   shift, and go to state 15
    BOOL3_TYPE   shift, and go to state 16
    BOOL4_TYPE   shift, and go to state 17
    INT_TYPE     shift, and go to state 18
    INT2_TYPE    shift, and go to state 19
    INT3_TYPE    shift, and go to state 20
    INT4_TYPE    shift, and go to state 21
    '}'          shift, and go to state 97

    base_type  go to state 67
    var_decl   go to state 98


State 83

   27 var_decls: var_decl . ';'

    ';'  shift, and go to state 99


State 84

   15 function_declaration: base_type IDENTIFIER '(' arguments ')' .

    $default  reduce using rule 15 (function_declaration)


State 85

   52 var_decl: base_type IDENTIFIER .
   53         | base_type IDENTIFIER . annotations '=' INT
   54         | base_type IDENTIFIER . annotations '=' FLOAT

    '<'  shift, and go to state 41

    '='       reduce using rule 77 (annotations)
    $default  reduce using rule 52 (var_decl)

    annotations  go to state 50


State 86

   12 arguments: var_decl ',' . arguments

    FLOAT_TYPE   shift, and go to state 7
    FLOAT2_TYPE  shift, and go to state 8
    FLOAT3_TYPE  shift, and go to state 9
    FLOAT4_TYPE  shift, and go to state 10
    MAT2_TYPE    shift, and go to state 11
    MAT3_TYPE    shift, and go to state 12
    MAT4_TYPE    shift, and go to state 13
    BOOL_TYPE    shift, and go to state 14
    BOOL2_TYPE   shift, and go to state 15
    BOOL3_TYPE   shift, and go to state 16
    BOOL4_TYPE   shift, and go to state 17
    INT_TYPE     shift, and go to state 18
    INT2_TYPE    shift, and go to state 19
    INT3_TYPE    shift, and go to state 20
    INT4_TYPE    shift, and go to state 21

    arguments  go to state 100
    base_type  go to state 67
    var_decl   go to state 68


State 87

   54 var_decl: base_type IDENTIFIER annotations '=' FLOAT .

    $default  reduce using rule 54 (var_decl)


State 88

   53 var_decl: base_type IDENTIFIER annotations '=' INT .

    $default  reduce using rule 53 (var_decl)


State 89

   76 annotation: scalar_type IDENTIFIER '=' . annotation_value ';'

    FLOAT     shift, and go to state 101
    INT       shift, and go to state 102
    STR       shift, and go to state 103
    UNSIGNED  shift, and go to state 104

    annotation_value  go to state 105


State 90

   60 passes: passes . pass
   61       | passes . error
   65 tech: TECHNIQUE IDENTIFIER $@5 annotations '{' passes . '}'

    error  shift, and go to state 76
    PASS   shift, and go to state 60
    '}'    shift, and go to state 106

    pass  go to state 78


State 91

   58 pass: PASS IDENTIFIER $@3 . annotations passstates

    '<'  shift, and go to state 41

    $default  reduce using rule 77 (annotations)

    annotations  go to state 107


State 92

   56 pass: PASS $@2 annotations . passstates

    '{'  shift, and go to state 108

    passstates  go to state 109


State 93

   17 register_declaration: ':' REGISTER '(' INT . ')'

    ')'  shift, and go to state 110


State 94

   21 struct_header: IDENTIFIER .

    $default  reduce using rule 21 (struct_header)


State 95

   20 struct: STRUCT struct_header . struct_body struct_footer

    '{'  shift, and go to state 111

    struct_body  go to state 112


State 96

   28 var_decls: struct ';' .

    $default  reduce using rule 28 (var_decls)


State 97

   19 cbuffer: CSTBUFFER IDENTIFIER register_declaration '{' var_decls '}' .

    $default  reduce using rule 19 (cbuffer)


State 98

   26 var_decls: var_decls var_decl . ';'

    ';'  shift, and go to state 113


State 99

   27 var_decls: var_decl ';' .

    $default  reduce using rule 27 (var_decls)


State 100

   12 arguments: var_decl ',' arguments .

    $default  reduce using rule 12 (arguments)


State 101

   72 annotation_value: FLOAT .

    $default  reduce using rule 72 (annotation_value)


State 102

   73 annotation_value: INT .

    $default  reduce using rule 73 (annotation_value)


State 103

   74 annotation_value: STR .

    $default  reduce using rule 74 (annotation_value)


State 104

   75 annotation_value: UNSIGNED .

    $default  reduce using rule 75 (annotation_value)


State 105

   76 annotation: scalar_type IDENTIFIER '=' annotation_value . ';'

    ';'  shift, and go to state 114


State 106

   65 tech: TECHNIQUE IDENTIFIER $@5 annotations '{' passes '}' .

    $default  reduce using rule 65 (tech)


State 107

   58 pass: PASS IDENTIFIER $@3 annotations . passstates

    '{'  shift, and go to state 108

    passstates  go to state 115


State 108

   36 passstates: '{' . shader_assignments '}'

    VERTEXPROGRAM    shift, and go to state 116
    FRAGMENTPROGRAM  shift, and go to state 117
    GEOMETRYPROGRAM  shift, and go to state 118

    shader_type         go to state 119
    shader_assignment   go to state 120
    shader_assignments  go to state 121


State 109

   56 pass: PASS $@2 annotations passstates .

    $default  reduce using rule 56 (pass)


State 110

   17 register_declaration: ':' REGISTER '(' INT ')' .

    $default  reduce using rule 17 (register_declaration)


State 111

   23 struct_body: '{' . var_decls '}'

    FLOAT_TYPE   shift, and go to state 7
    FLOAT2_TYPE  shift, and go to state 8
    FLOAT3_TYPE  shift, and go to state 9
    FLOAT4_TYPE  shift, and go to state 10
    MAT2_TYPE    shift, and go to state 11
    MAT3_TYPE    shift, and go to state 12
    MAT4_TYPE    shift, and go to state 13
    BOOL_TYPE    shift, and go to state 14
    BOOL2_TYPE   shift, and go to state 15
    BOOL3_TYPE   shift, and go to state 16
    BOOL4_TYPE   shift, and go to state 17
    INT_TYPE     shift, and go to state 18
    INT2_TYPE    shift, and go to state 19
    INT3_TYPE    shift, and go to state 20
    INT4_TYPE    shift, and go to state 21
    STRUCT       shift, and go to state 80

    struct     go to state 81
    var_decls  go to state 122
    base_type  go to state 67
    var_decl   go to state 83


State 112

   20 struct: STRUCT struct_header struct_body . struct_footer

    IDENTIFIER  shift, and go to state 123

    $default  reduce using rule 25 (struct_footer)

    struct_footer  go to state 124


State 113

   26 var_decls: var_decls var_decl ';' .

    $default  reduce using rule 26 (var_decls)


State 114

   76 annotation: scalar_type IDENTIFIER '=' annotation_value ';' .

    $default  reduce using rule 76 (annotation)


State 115

   58 pass: PASS IDENTIFIER $@3 annotations passstates .

    $default  reduce using rule 58 (pass)


State 116

   30 shader_type: VERTEXPROGRAM .

    $default  reduce using rule 30 (shader_type)


State 117

   32 shader_type: FRAGMENTPROGRAM .

    $default  reduce using rule 32 (shader_type)


State 118

   31 shader_type: GEOMETRYPROGRAM .

    $default  reduce using rule 31 (shader_type)


State 119

   33 shader_assignment: shader_type . '=' IDENTIFIER

    '='  shift, and go to state 125


State 120

   34 shader_assignments: shader_assignment .

    $default  reduce using rule 34 (shader_assignments)


State 121

   35 shader_assignments: shader_assignments . shader_assignment
   36 passstates: '{' shader_assignments . '}'

    VERTEXPROGRAM    shift, and go to state 116
    FRAGMENTPROGRAM  shift, and go to state 117
    GEOMETRYPROGRAM  shift, and go to state 118
    '}'              shift, and go to state 126

    shader_type        go to state 119
    shader_assignment  go to state 127


State 122

   23 struct_body: '{' var_decls . '}'
   26 var_decls: var_decls . var_decl ';'

    FLOAT_TYPE   shift, and go to state 7
    FLOAT2_TYPE  shift, and go to state 8
    FLOAT3_TYPE  shift, and go to state 9
    FLOAT4_TYPE  shift, and go to state 10
    MAT2_TYPE    shift, and go to state 11
    MAT3_TYPE    shift, and go to state 12
    MAT4_TYPE    shift, and go to state 13
    BOOL_TYPE    shift, and go to state 14
    BOOL2_TYPE   shift, and go to state 15
    BOOL3_TYPE   shift, and go to state 16
    BOOL4_TYPE   shift, and go to state 17
    INT_TYPE     shift, and go to state 18
    INT2_TYPE    shift, and go to state 19
    INT3_TYPE    shift, and go to state 20
    INT4_TYPE    shift, and go to state 21
    '}'          shift, and go to state 128

    base_type  go to state 67
    var_decl   go to state 98


State 123

   24 struct_footer: IDENTIFIER .

    $default  reduce using rule 24 (struct_footer)


State 124

   20 struct: STRUCT struct_header struct_body struct_footer .

    $default  reduce using rule 20 (struct)


State 125

   33 shader_assignment: shader_type '=' . IDENTIFIER

    IDENTIFIER  shift, and go to state 129


State 126

   36 passstates: '{' shader_assignments '}' .

    $default  reduce using rule 36 (passstates)


State 127

   35 shader_assignments: shader_assignments shader_assignment .

    $default  reduce using rule 35 (shader_assignments)


State 128

   23 struct_body: '{' var_decls '}' .

    $default  reduce using rule 23 (struct_body)


State 129

   33 shader_assignment: shader_type '=' IDENTIFIER .

    $default  reduce using rule 33 (shader_assignment)
