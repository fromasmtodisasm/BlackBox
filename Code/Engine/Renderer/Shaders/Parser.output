Terminals unused in grammar

    TRUE
    FALSE
    BOOL
    VOID_TYPE
    HIGHP
    MEDIUMP
    LOWP
    UNIFORM
    CSTBUFFER
    TEXTURE1D_TYPE
    TEXTURE2D_TYPE
    TEXTURE2DSHADOW_TYPE
    TEXTURE2DRECT_TYPE
    TEXTURE3D_TYPE
    TEXTURECUBE_TYPE
    SAMPLER1D_TYPE
    SAMPLER2D_TYPE
    SAMPLER2DSHADOW_TYPE
    SAMPLER2DRECT_TYPE
    SAMPLER3D_TYPE
    SAMPLERCUBE_TYPE
    EXTENSION
    SEPARATE_SHADER
    HULLPROGRAM
    EVALPROGRAM
    SHDPROFILE
    SAMPLERRESOURCE
    SAMPLERTEXUNIT
    SETSAMPLERSTATE
    SETDSTSTATE
    SETRASTERIZATIONSTATE
    SETCOLORSAMPLESTATE
    IMAGERESOURCE
    IMAGEUNIT
    IMAGEACCESS
    IMAGELAYER
    IMAGELAYERED
    WRITE_ONLY
    READ_ONLY
    READ_WRITE
    VERTEXFORMAT


Grammar

    0 $accept: input "end of file"

    1 input: ε
    2      | input ';'
    3      | input tech
    4      | input hlsl
    5      | input var_decl
    6      | input error

    7 shader_type: VERTEXPROGRAM
    8            | GEOMETRYPROGRAM
    9            | FRAGMENTPROGRAM

   10 shader_assignment: shader_type '=' IDENTIFIER

   11 shader_assignments: shader_assignment
   12                   | shader_assignments shader_assignment

   13 passstates: '{' shader_assignments '}'

   14 base_type: FLOAT_TYPE
   15          | FLOAT2_TYPE
   16          | FLOAT3_TYPE
   17          | FLOAT4_TYPE
   18          | INT_TYPE
   19          | INT2_TYPE
   20          | INT3_TYPE
   21          | INT4_TYPE
   22          | BOOL_TYPE
   23          | BOOL2_TYPE
   24          | BOOL3_TYPE
   25          | BOOL4_TYPE
   26          | MAT2_TYPE
   27          | MAT3_TYPE
   28          | MAT4_TYPE

   29 var_decl: base_type IDENTIFIER
   30         | base_type IDENTIFIER annotations '=' INT
   31         | base_type IDENTIFIER annotations '=' FLOAT

   32 $@1: ε

   33 pass: PASS $@1 annotations passstates

   34 $@2: ε

   35 pass: PASS IDENTIFIER $@2 annotations passstates

   36 passes: pass
   37       | passes pass
   38       | passes error

   39 $@3: ε

   40 tech: TECHNIQUE $@3 '{' passes '}'

   41 $@4: ε

   42 tech: TECHNIQUE IDENTIFIER $@4 annotations '{' passes '}'

   43 scalar_type: INT_TYPE
   44            | FLOAT_TYPE
   45            | UNSIGNED
   46            | STRING_TYPE

   47 annotation_list: annotation_list annotation
   48                | annotation

   49 annotation_value: FLOAT
   50                 | INT
   51                 | STR
   52                 | UNSIGNED

   53 annotation: scalar_type IDENTIFIER '=' annotation_value ';'

   54 annotations: ε
   55            | '<' annotation_list '>'

   56 hlsl_header: HLSL11SHADER IDENTIFIER
   57            | HLSL11SHADER

   58 hlsl: shader_header '{' CODEBODY

   59 shader_header: hlsl_header annotations


Terminals, with rules where they appear

    "end of file" (0) 0
    ';' (59) 2 53
    '<' (60) 55
    '=' (61) 10 30 31 53
    '>' (62) 55
    '{' (123) 13 40 42 58
    '}' (125) 13 40 42
    error (256) 6 38
    IDENTIFIER <std::string> (258) 10 29 30 31 35 42 53 56
    TRUE <bool> (259)
    FALSE <bool> (260)
    FLOAT <float> (261) 31 49
    INT <int> (262) 30 50
    BOOL <bool> (263)
    STR <std::string> (264) 51
    HLSL11SHADER (265) 56 57
    TECHNIQUE (266) 40 42
    PASS (267) 33 35
    CODEBODY <std::string> (268) 58
    STRING_TYPE (269) 46
    VOID_TYPE (270)
    UNSIGNED (271) 45 52
    HIGHP (272)
    MEDIUMP (273)
    LOWP (274)
    UNIFORM (275)
    CSTBUFFER (276)
    FLOAT_TYPE (277) 14 44
    FLOAT2_TYPE (278) 15
    FLOAT3_TYPE (279) 16
    FLOAT4_TYPE (280) 17
    MAT2_TYPE (281) 26
    MAT3_TYPE (282) 27
    MAT4_TYPE (283) 28
    BOOL_TYPE (284) 22
    BOOL2_TYPE (285) 23
    BOOL3_TYPE (286) 24
    BOOL4_TYPE (287) 25
    INT_TYPE (288) 18 43
    INT2_TYPE (289) 19
    INT3_TYPE (290) 20
    INT4_TYPE (291) 21
    TEXTURE1D_TYPE (292)
    TEXTURE2D_TYPE (293)
    TEXTURE2DSHADOW_TYPE (294)
    TEXTURE2DRECT_TYPE (295)
    TEXTURE3D_TYPE (296)
    TEXTURECUBE_TYPE (297)
    SAMPLER1D_TYPE (298)
    SAMPLER2D_TYPE (299)
    SAMPLER2DSHADOW_TYPE (300)
    SAMPLER2DRECT_TYPE (301)
    SAMPLER3D_TYPE (302)
    SAMPLERCUBE_TYPE (303)
    EXTENSION (304)
    SEPARATE_SHADER (305)
    VERTEXPROGRAM <IShader::Type> (306) 7
    FRAGMENTPROGRAM <IShader::Type> (307) 9
    GEOMETRYPROGRAM <IShader::Type> (308) 8
    HULLPROGRAM <IShader::Type> (309)
    EVALPROGRAM <IShader::Type> (310)
    SHDPROFILE (311)
    SAMPLERRESOURCE (312)
    SAMPLERTEXUNIT (313)
    SETSAMPLERSTATE (314)
    SETDSTSTATE (315)
    SETRASTERIZATIONSTATE (316)
    SETCOLORSAMPLESTATE (317)
    IMAGERESOURCE (318)
    IMAGEUNIT (319)
    IMAGEACCESS (320)
    IMAGELAYER (321)
    IMAGELAYERED (322)
    WRITE_ONLY (323)
    READ_ONLY (324)
    READ_WRITE (325)
    VERTEXFORMAT (326)


Nonterminals, with rules where they appear

    $accept (78)
        on left: 0
    input (79)
        on left: 1 2 3 4 5 6
        on right: 0 2 3 4 5 6
    shader_type <IShader::Type> (80)
        on left: 7 8 9
        on right: 10
    shader_assignment <std::string> (81)
        on left: 10
        on right: 11 12
    shader_assignments (82)
        on left: 11 12
        on right: 12 13
    passstates (83)
        on left: 13
        on right: 33 35
    base_type <nvFX::IUniform::Type> (84)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
        on right: 29 30 31
    var_decl (85)
        on left: 29 30 31
        on right: 5
    pass (86)
        on left: 33 35
        on right: 36 37
    $@1 (87)
        on left: 32
        on right: 33
    $@2 (88)
        on left: 34
        on right: 35
    passes (89)
        on left: 36 37 38
        on right: 37 38 40 42
    tech (90)
        on left: 40 42
        on right: 3
    $@3 (91)
        on left: 39
        on right: 40
    $@4 (92)
        on left: 41
        on right: 42
    scalar_type (93)
        on left: 43 44 45 46
        on right: 53
    annotation_list (94)
        on left: 47 48
        on right: 47 55
    annotation_value (95)
        on left: 49 50 51 52
        on right: 53
    annotation (96)
        on left: 53
        on right: 47 48
    annotations (97)
        on left: 54 55
        on right: 30 31 33 35 42 59
    hlsl_header <std::string> (98)
        on left: 56 57
        on right: 59
    hlsl (99)
        on left: 58
        on right: 4
    shader_header <std::string> (100)
        on left: 59
        on right: 58


State 0

    0 $accept: • input "end of file"

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input • "end of file"
    2 input: input • ';'
    3      | input • tech
    4      | input • hlsl
    5      | input • var_decl
    6      | input • error

    "end of file"  shift, and go to state 2
    error          shift, and go to state 3
    HLSL11SHADER   shift, and go to state 4
    TECHNIQUE      shift, and go to state 5
    FLOAT_TYPE     shift, and go to state 6
    FLOAT2_TYPE    shift, and go to state 7
    FLOAT3_TYPE    shift, and go to state 8
    FLOAT4_TYPE    shift, and go to state 9
    MAT2_TYPE      shift, and go to state 10
    MAT3_TYPE      shift, and go to state 11
    MAT4_TYPE      shift, and go to state 12
    BOOL_TYPE      shift, and go to state 13
    BOOL2_TYPE     shift, and go to state 14
    BOOL3_TYPE     shift, and go to state 15
    BOOL4_TYPE     shift, and go to state 16
    INT_TYPE       shift, and go to state 17
    INT2_TYPE      shift, and go to state 18
    INT3_TYPE      shift, and go to state 19
    INT4_TYPE      shift, and go to state 20
    ';'            shift, and go to state 21

    base_type      go to state 22
    var_decl       go to state 23
    tech           go to state 24
    hlsl_header    go to state 25
    hlsl           go to state 26
    shader_header  go to state 27


State 2

    0 $accept: input "end of file" •

    $default  accept


State 3

    6 input: input error •

    $default  reduce using rule 6 (input)


State 4

   56 hlsl_header: HLSL11SHADER • IDENTIFIER
   57            | HLSL11SHADER •

    IDENTIFIER  shift, and go to state 28

    $default  reduce using rule 57 (hlsl_header)


State 5

   40 tech: TECHNIQUE • $@3 '{' passes '}'
   42     | TECHNIQUE • IDENTIFIER $@4 annotations '{' passes '}'

    IDENTIFIER  shift, and go to state 29

    $default  reduce using rule 39 ($@3)

    $@3  go to state 30


State 6

   14 base_type: FLOAT_TYPE •

    $default  reduce using rule 14 (base_type)


State 7

   15 base_type: FLOAT2_TYPE •

    $default  reduce using rule 15 (base_type)


State 8

   16 base_type: FLOAT3_TYPE •

    $default  reduce using rule 16 (base_type)


State 9

   17 base_type: FLOAT4_TYPE •

    $default  reduce using rule 17 (base_type)


State 10

   26 base_type: MAT2_TYPE •

    $default  reduce using rule 26 (base_type)


State 11

   27 base_type: MAT3_TYPE •

    $default  reduce using rule 27 (base_type)


State 12

   28 base_type: MAT4_TYPE •

    $default  reduce using rule 28 (base_type)


State 13

   22 base_type: BOOL_TYPE •

    $default  reduce using rule 22 (base_type)


State 14

   23 base_type: BOOL2_TYPE •

    $default  reduce using rule 23 (base_type)


State 15

   24 base_type: BOOL3_TYPE •

    $default  reduce using rule 24 (base_type)


State 16

   25 base_type: BOOL4_TYPE •

    $default  reduce using rule 25 (base_type)


State 17

   18 base_type: INT_TYPE •

    $default  reduce using rule 18 (base_type)


State 18

   19 base_type: INT2_TYPE •

    $default  reduce using rule 19 (base_type)


State 19

   20 base_type: INT3_TYPE •

    $default  reduce using rule 20 (base_type)


State 20

   21 base_type: INT4_TYPE •

    $default  reduce using rule 21 (base_type)


State 21

    2 input: input ';' •

    $default  reduce using rule 2 (input)


State 22

   29 var_decl: base_type • IDENTIFIER
   30         | base_type • IDENTIFIER annotations '=' INT
   31         | base_type • IDENTIFIER annotations '=' FLOAT

    IDENTIFIER  shift, and go to state 31


State 23

    5 input: input var_decl •

    $default  reduce using rule 5 (input)


State 24

    3 input: input tech •

    $default  reduce using rule 3 (input)


State 25

   59 shader_header: hlsl_header • annotations

    '<'  shift, and go to state 32

    $default  reduce using rule 54 (annotations)

    annotations  go to state 33


State 26

    4 input: input hlsl •

    $default  reduce using rule 4 (input)


State 27

   58 hlsl: shader_header • '{' CODEBODY

    '{'  shift, and go to state 34


State 28

   56 hlsl_header: HLSL11SHADER IDENTIFIER •

    $default  reduce using rule 56 (hlsl_header)


State 29

   42 tech: TECHNIQUE IDENTIFIER • $@4 annotations '{' passes '}'

    $default  reduce using rule 41 ($@4)

    $@4  go to state 35


State 30

   40 tech: TECHNIQUE $@3 • '{' passes '}'

    '{'  shift, and go to state 36


State 31

   29 var_decl: base_type IDENTIFIER •
   30         | base_type IDENTIFIER • annotations '=' INT
   31         | base_type IDENTIFIER • annotations '=' FLOAT

    '<'  shift, and go to state 32

    '='       reduce using rule 54 (annotations)
    $default  reduce using rule 29 (var_decl)

    annotations  go to state 37


State 32

   55 annotations: '<' • annotation_list '>'

    STRING_TYPE  shift, and go to state 38
    UNSIGNED     shift, and go to state 39
    FLOAT_TYPE   shift, and go to state 40
    INT_TYPE     shift, and go to state 41

    scalar_type      go to state 42
    annotation_list  go to state 43
    annotation       go to state 44


State 33

   59 shader_header: hlsl_header annotations •

    $default  reduce using rule 59 (shader_header)


State 34

   58 hlsl: shader_header '{' • CODEBODY

    CODEBODY  shift, and go to state 45


State 35

   42 tech: TECHNIQUE IDENTIFIER $@4 • annotations '{' passes '}'

    '<'  shift, and go to state 32

    $default  reduce using rule 54 (annotations)

    annotations  go to state 46


State 36

   40 tech: TECHNIQUE $@3 '{' • passes '}'

    PASS  shift, and go to state 47

    pass    go to state 48
    passes  go to state 49


State 37

   30 var_decl: base_type IDENTIFIER annotations • '=' INT
   31         | base_type IDENTIFIER annotations • '=' FLOAT

    '='  shift, and go to state 50


State 38

   46 scalar_type: STRING_TYPE •

    $default  reduce using rule 46 (scalar_type)


State 39

   45 scalar_type: UNSIGNED •

    $default  reduce using rule 45 (scalar_type)


State 40

   44 scalar_type: FLOAT_TYPE •

    $default  reduce using rule 44 (scalar_type)


State 41

   43 scalar_type: INT_TYPE •

    $default  reduce using rule 43 (scalar_type)


State 42

   53 annotation: scalar_type • IDENTIFIER '=' annotation_value ';'

    IDENTIFIER  shift, and go to state 51


State 43

   47 annotation_list: annotation_list • annotation
   55 annotations: '<' annotation_list • '>'

    STRING_TYPE  shift, and go to state 38
    UNSIGNED     shift, and go to state 39
    FLOAT_TYPE   shift, and go to state 40
    INT_TYPE     shift, and go to state 41
    '>'          shift, and go to state 52

    scalar_type  go to state 42
    annotation   go to state 53


State 44

   48 annotation_list: annotation •

    $default  reduce using rule 48 (annotation_list)


State 45

   58 hlsl: shader_header '{' CODEBODY •

    $default  reduce using rule 58 (hlsl)


State 46

   42 tech: TECHNIQUE IDENTIFIER $@4 annotations • '{' passes '}'

    '{'  shift, and go to state 54


State 47

   33 pass: PASS • $@1 annotations passstates
   35     | PASS • IDENTIFIER $@2 annotations passstates

    IDENTIFIER  shift, and go to state 55

    $default  reduce using rule 32 ($@1)

    $@1  go to state 56


State 48

   36 passes: pass •

    $default  reduce using rule 36 (passes)


State 49

   37 passes: passes • pass
   38       | passes • error
   40 tech: TECHNIQUE $@3 '{' passes • '}'

    error  shift, and go to state 57
    PASS   shift, and go to state 47
    '}'    shift, and go to state 58

    pass  go to state 59


State 50

   30 var_decl: base_type IDENTIFIER annotations '=' • INT
   31         | base_type IDENTIFIER annotations '=' • FLOAT

    FLOAT  shift, and go to state 60
    INT    shift, and go to state 61


State 51

   53 annotation: scalar_type IDENTIFIER • '=' annotation_value ';'

    '='  shift, and go to state 62


State 52

   55 annotations: '<' annotation_list '>' •

    $default  reduce using rule 55 (annotations)


State 53

   47 annotation_list: annotation_list annotation •

    $default  reduce using rule 47 (annotation_list)


State 54

   42 tech: TECHNIQUE IDENTIFIER $@4 annotations '{' • passes '}'

    PASS  shift, and go to state 47

    pass    go to state 48
    passes  go to state 63


State 55

   35 pass: PASS IDENTIFIER • $@2 annotations passstates

    $default  reduce using rule 34 ($@2)

    $@2  go to state 64


State 56

   33 pass: PASS $@1 • annotations passstates

    '<'  shift, and go to state 32

    $default  reduce using rule 54 (annotations)

    annotations  go to state 65


State 57

   38 passes: passes error •

    $default  reduce using rule 38 (passes)


State 58

   40 tech: TECHNIQUE $@3 '{' passes '}' •

    $default  reduce using rule 40 (tech)


State 59

   37 passes: passes pass •

    $default  reduce using rule 37 (passes)


State 60

   31 var_decl: base_type IDENTIFIER annotations '=' FLOAT •

    $default  reduce using rule 31 (var_decl)


State 61

   30 var_decl: base_type IDENTIFIER annotations '=' INT •

    $default  reduce using rule 30 (var_decl)


State 62

   53 annotation: scalar_type IDENTIFIER '=' • annotation_value ';'

    FLOAT     shift, and go to state 66
    INT       shift, and go to state 67
    STR       shift, and go to state 68
    UNSIGNED  shift, and go to state 69

    annotation_value  go to state 70


State 63

   37 passes: passes • pass
   38       | passes • error
   42 tech: TECHNIQUE IDENTIFIER $@4 annotations '{' passes • '}'

    error  shift, and go to state 57
    PASS   shift, and go to state 47
    '}'    shift, and go to state 71

    pass  go to state 59


State 64

   35 pass: PASS IDENTIFIER $@2 • annotations passstates

    '<'  shift, and go to state 32

    $default  reduce using rule 54 (annotations)

    annotations  go to state 72


State 65

   33 pass: PASS $@1 annotations • passstates

    '{'  shift, and go to state 73

    passstates  go to state 74


State 66

   49 annotation_value: FLOAT •

    $default  reduce using rule 49 (annotation_value)


State 67

   50 annotation_value: INT •

    $default  reduce using rule 50 (annotation_value)


State 68

   51 annotation_value: STR •

    $default  reduce using rule 51 (annotation_value)


State 69

   52 annotation_value: UNSIGNED •

    $default  reduce using rule 52 (annotation_value)


State 70

   53 annotation: scalar_type IDENTIFIER '=' annotation_value • ';'

    ';'  shift, and go to state 75


State 71

   42 tech: TECHNIQUE IDENTIFIER $@4 annotations '{' passes '}' •

    $default  reduce using rule 42 (tech)


State 72

   35 pass: PASS IDENTIFIER $@2 annotations • passstates

    '{'  shift, and go to state 73

    passstates  go to state 76


State 73

   13 passstates: '{' • shader_assignments '}'

    VERTEXPROGRAM    shift, and go to state 77
    FRAGMENTPROGRAM  shift, and go to state 78
    GEOMETRYPROGRAM  shift, and go to state 79

    shader_type         go to state 80
    shader_assignment   go to state 81
    shader_assignments  go to state 82


State 74

   33 pass: PASS $@1 annotations passstates •

    $default  reduce using rule 33 (pass)


State 75

   53 annotation: scalar_type IDENTIFIER '=' annotation_value ';' •

    $default  reduce using rule 53 (annotation)


State 76

   35 pass: PASS IDENTIFIER $@2 annotations passstates •

    $default  reduce using rule 35 (pass)


State 77

    7 shader_type: VERTEXPROGRAM •

    $default  reduce using rule 7 (shader_type)


State 78

    9 shader_type: FRAGMENTPROGRAM •

    $default  reduce using rule 9 (shader_type)


State 79

    8 shader_type: GEOMETRYPROGRAM •

    $default  reduce using rule 8 (shader_type)


State 80

   10 shader_assignment: shader_type • '=' IDENTIFIER

    '='  shift, and go to state 83


State 81

   11 shader_assignments: shader_assignment •

    $default  reduce using rule 11 (shader_assignments)


State 82

   12 shader_assignments: shader_assignments • shader_assignment
   13 passstates: '{' shader_assignments • '}'

    VERTEXPROGRAM    shift, and go to state 77
    FRAGMENTPROGRAM  shift, and go to state 78
    GEOMETRYPROGRAM  shift, and go to state 79
    '}'              shift, and go to state 84

    shader_type        go to state 80
    shader_assignment  go to state 85


State 83

   10 shader_assignment: shader_type '=' • IDENTIFIER

    IDENTIFIER  shift, and go to state 86


State 84

   13 passstates: '{' shader_assignments '}' •

    $default  reduce using rule 13 (passstates)


State 85

   12 shader_assignments: shader_assignments shader_assignment •

    $default  reduce using rule 12 (shader_assignments)


State 86

   10 shader_assignment: shader_type '=' IDENTIFIER •

    $default  reduce using rule 10 (shader_assignment)
